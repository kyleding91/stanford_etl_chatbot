 You are listening to the Draper Fisher-Jurvinson entrepreneurial thought-leader seminar, brought to you weekly by Stanford Technology Ventures program at Stanford University School of Engineering. Today I have the pleasure of introducing I think a real friend of Stanford and in Scott Cranes. Scott has helped us out on a lot of research programs and other ways over the years, so we appreciate his support. Today though he's here in his capacity as President and CEO of Juniper Networks, one of the big success stories in the valley from the internet era and is now in a pretty interesting competitive situation on the one hand competing against companies like Cisco and on the other hand competing against some startups. So Scott's going to share I think a little bit about his journey, what it was like to start a company and then maybe what it's like to compete against other companies. So thank you Scott. Great, thank you Kathy. Thank you. First thing I should say is, and I guess this is being broadcast and podcast, please download it and send it to everyone you know repeatedly across the network, generate lots of traffic. That's how we get paid. But let me, what I actually like to do is just a couple of things really and save a lot of time to talk interactively with you about what you'd like to talk about. Because I think one of the most important things in any discussion is trying to figure out what somebody sitting there listening wants to hear. Apparently not fully liked. I'll put this one on. I'll come to you in stereo here. So what I'll do is give you a little bit of background on the company and a couple of thoughts at least on what happened. And then we can talk a little bit about what might happen next or perhaps also what what you guys think. One of the first things I would say is just a general rule of thumb. Whenever you're listening to somebody tell a story like this, there's an inverse relationship between how much credit they take for the success and how useful what they tell you is. So the more credit anyone stands up and takes for success, it usually translates into the less accurate their reflections are. So the first thing I would tell you about Juniper in particular is combination of some thoughtful execution, but a lot of luck and a lot of timing. The company was started in 96 by Pritip Sindhu and Pritip was a Carnegie Mellon computer science PhD. And his observation was that networking was something done by machines which were five or six feet high, took huge power out of the wall, generated enormous heat, and did a tiny fraction of the work that a desktop computer would do. And therefore it ought to be possible to make a network machine more like a computer. Number one, and then secondly, which is actually an evolution of an idea born here on the campus with Sandy Lerner and Len Bozak around routing was that there was something fundamentally different that was going to go on in networking relative to what had been done in the past. When we come back to talk about it, I'd also say that's a really important thing to find. If you have to figure out in any entrepreneurial undertaking or if you're just looking for opportunity, what's different? And the different thing for us was that we're in an industry built around a technology, a lot of people call routing. And routing is a technology that was born in the 80s and it was actually born here on the campus and it was born out of the evolution of the computer industry where IBM and deck and Apple computers were asked to connect to each other. And so the strategy of the computer manufacturer was if I use a proprietary format called a protocol in order to create deck machines that use decknet and that's the only way to talk to a deck machine where Apple talk or IPX or Banyan Vines or other, there's a bunch of protocols and names. And the strategy the computer vendors was if you want to connect these things, I'll make sure that only my proprietary protocol enables that which means in order to do that, you have to buy more of my stuff. And so the router was born as a protocol converter. It was this thing that went in the middle of deck and Apple and IBM machines in order to allow otherwise unfamiliar machines built by manufacturers who had a conscious strategy to lock up the customers with proprietary technologies to defeat that by putting this converter in the middle that let all these machines talk to each other. And it was really a useful thing because people don't use computers for computers, they use them for the applications that run across them. So if they could be made to run transparent to the equipment underneath it, that had a lot of value. So that created Cisco in the mid 80s, taken off of this campus and turned into a great company. So when we came along in the 90s, 96, it pretty much was really very different than that because his perception was it doesn't have anything to do with all those different formats anywhere, it's all about something called the Internet Protocol or IP. And there are at least two fundamental things that have to be really different in order for the problem to be solved defined as it now exists. The problem is no longer 10 or 30,000 students trying to do protocol conversion. The problem is billions of devices and billions of users who want to use only one format but all need to talk to each other out at the same time. So the two things that had to change, one, there had to be an entirely new operating system written which was modular and scalable and for the engineering students here, we could talk more about that if you're interested, but there's a very different, much more industrial strength operating system that had to be written for a different problem, number one. And then second thing that had to be different was you couldn't use a processor that you got off the shelf as a general purpose computing engine. And the reason for that was because you had way too many users and everything was going way too fast. And in the days before that, you could just buy a standard CPU and you could program it to convert these protocols and the number of users and the amount of traffic and the data rates between the machines were slow enough that not only was it okay, but you never would use a different technology because it was cheap and if you got it wrong, you could just reconfigure the software and run it again the next day and it was fine. But when you got to the volumes and the scale that is now sort of taken for granted today and it was a newer idea that it would get to that scale then, the problem is you can't, you literally just physically can't turn off the ones in the scale. And then you can turn off the ones in the zeros fast enough unless you do it in custom built silicon, which has dedicated purpose built gate designs. And again, we can talk about technology if it's of interest, but unless you did it that way, you couldn't turn off enough ones and zeros fast enough to get the traffic through it. And the bound have to do this in a different architecture, which was much more like computing had been done for a long time. Very different technology requirement because it wasn't about doing a whole bunch of number crunching with a little bit of information coming in and out of these silicon devices. And then you can see that a huge amount of information coming through with really very trivial amounts of processing done. And most silicon or chip technologies at the time were built for the opposite assumption, which you had to do a massive amount of number crunching and when you got done a little bit of information came out and that was your answer. And networking is the opposite condition, which put different burdens on packaging of the technology versus the compute power of it and things like that. And then you can talk about that. The problem with silicon is some many in here may know if you've worked in that technology or aware of it is it's totally inflexible. So you work for a long long time to get this chip built, very small, and it either works when you turn it on or it doesn't. And if it doesn't, you're in big trouble because it takes months and months to change it. So nobody would do that if they didn't have to. So before you make the problem as big as it was made by the internet, you would never have done it on anything other than a general purpose off the shelf processor because of the fact that it was totally flexible and you could fix it in a day. Instead, you're going to this thing that takes you a year or two to build might work on the day you bring it up or might not. And if it's wrong, it takes you six months or a year to fix it. But again, only way to solve the problem. So when his idea turned into a company, it was based on these two very different assumptions and we debated for a long time, should we even call it routing? Maybe we should in trying to invent a new product category and call it this traffic processing engine or something different. And we basically chickened out and decided not to do that. But the problem was different enough that the company was able to get funding and again, we can talk about how that took place if interested. And the product came out at the end of 1998. Well, the whole internet thing became a huge deal about the same time. And it became so because of a phenomenon that you could actually track back to almost any communication technology. You go back to the telegraph, the television, the radio, the telephone. It turns out that in any one of those examples, it's not very interesting until it gets to an amazingly similar number, which is about 15% penetration. And before that, you don't need a phone because nobody else has one. And after that, if you don't have a phone, you're the only person that can't talk to everybody because it seems like everybody has one. And email did a lot of that same thing in a lot of that same time. And so it created this massive change in the problem and in the urgency of solving it. And that happened to come along at exactly the time that we finished building this machine, which was capable of doing 100x, the throughput and the processing and other things that off the shelf machines built for a college campus had no relation to really. And the point of that is this, which is that for somebody to come, if you assume that any collection of people, if you get more than two or three or five or ten, assume people are equally smart. Or said in other words, very dangerous to assume that your collection of ten or twenty is smarter than somebody else's ten or twenty. And so if you're trying to solve the same problem that somebody else has already been working on, chances are they're going to know more about it. And they're going to take what they know and iterate on that. And so it'd be very hard to catch them if you make your assumption, we're just going to be smarter than they are. I don't know how to do that. I think that'd be a very dangerous thing. But if you have a totally different problem to solve, and there's probably lots of people that have come in, stood in front of you and talked about unique problems that they had, if you find a totally different problem, you're the first one to start trying to solve it, then you have an opportunity to be equally smart, but just start working on it first. And that's basically what happened at Juniper. And where the luck came in was that we were really lucky that the thing we were working on happened to become really important about the same time we finished the product. And so some numbers, 99 was the first revenue. We did 100 million in our first year, 99, and then we did 600 million, and then we did 900 million. So in three years, we had this almost billion dollar company. Pick any other three years, and we would have maybe had a 50, 200 million dollar company, which might have been less than critical mass, and you'd be listening to somebody else up here. But because it happened at the time that it did, we were able to capitalize on that. And I'll talk, you know, there are some things that we think we did well, but I guess I really want to emphasize the point being the market has a huge amount to do with success. And figuring out how to capitalize on that and everything else is important, hopefully what, you know, you're all learning, but market power is front and center critical thing. And it happened to be something we came across at the right time. Now, shortly after that, the bubble burst and lots of things went wrong, and the company dropped about 250, 300 million dollars revenue laid off about 15% of the workforce, learned a bunch of other lessons, and then started growing again. And so today, it's a, we'll do not quite two and a half billion, about 2.4 billion this year. And there's about 5,000 people in the company, and we have a different set of problems. So the first wave of success was part, incredibly, I think category of brilliant forethought by Pradeep, the founder, who had the idea of how to do all this. It attracted a bunch of really smart people, and it was a very self-selecting process, which is another thing to look for, and I know many of you, in pretty clean graduate students, have been in and out of companies here. One of the things that happened in hiring people at Juniper was, there was a very extensive interview process, and there were a lot of people who made those interviews potentially very difficult, or at least ask a lot of really hard questions, and traded a lot of ideas. And the self-selecting part of it was that people who were really excited about that, and thought that it would be fun to be on a team like that, were attracted. And people that were intimidated and said, well, wait a minute, I'm not sure I can be the biggest fish in this pond, or that I'm going to be smart enough by comparison to all these other people, and that might make this not the best move for me, self-selected out. And today, companies like Google are famous for doing things like that, and putting problems on billboards and stuff like that. But the principle is very sound, which is that if you bring really bright people together, they are in search of others, and if you put those people who might then join the team in that company, or in the mix of those people, it'll either be an incredibly motivating thing, which is good or not. And so, my encouragement to you would be, don't be intimidated by interview processes, or by collections of really smart people and companies, be really excited about that, because there's much more to learn, and much more things that can happen to the benefit of everyone. So, we went along through this process, hired a lot of great people, had a really good idea, had a lot of luck in the time that we did it, and sort of rushed to this version of critical mass. I don't actually think the company is there yet today in absolute terms, but at least in relative terms we had enough money and customers and coverage around the world to figure out how to get to the next step. And the next step is where we are now, and that is in how do we get to company from 2 billion to 5 billion. And it actually turns out to be a very different problem, that I won't actually spend a lot of time on, because I will if you'd like, but I'm not sure it would be as interesting, depends on whether your interests are more entrepreneurial in the smaller company side, or joining companies in growth modes that might be a little bigger. But it's quite a good learning thing for me, actually, is a CEO to try and figure out what's the difference between what I had to do then and what I have to do now, because one of the things that happens is there's a bunch of things we did, which worked, which are expected of us, by both ourselves and our customers, and are the things that we've always done. And that doesn't make them the right things to do now. In fact, if you just stop at that analysis and say, it's what we've always done, it's always worked, and it's what everybody expects of us. The critical question comes after that, which is, is it still the right thing to do? And for example, one of the things that I can't do anymore is I can no longer keep my hands on everything that goes on. I really can't move the needle by making an individual product decision or going out to try and close a sale or meet a customer. I'm involved in some of those things, and the leadership team is involved in some of those things. But I can't personally affect the outcome of the company by doing that. So one of the things that I was talking Kathy about earlier is one of the things that happens in the evolution of the company is I become more teacher than worker. And what becomes important for the company to do is scale its principles and its culture and what it believes about leadership and to try and teach people those values so that it can be administered and it can be demonstrated by thousands of people instead of being carried by a few. And that isn't really needed in a small company for some definition of small because you can sort of the leadership team can radiate that as personal example. And it's still critical, it just isn't sufficient anymore. One of the other things that becomes really important and it may be something to think about as you consider what any of you might do is how to make a global machine run well. You know, we're not, there's lots of many, many bigger companies and ours that have more of this example of problem, but we have about 600 people in Bangalore in India. We have a couple hundred people in Beijing and China that are in our development organization. We have about four or 500 on the East Coast and we've got another 600 or so here in Silicon Valley. So how do you actually operate that machine when you've got to develop these things all over the world? And I think we're actually getting past this, but there was certainly a time when this was quite a threatening thing for all of us imagining in the US that all the jobs are being exported and this was going to be a terrible thing and it was no use being an engineer in the United States anymore and all that. And I just would really encourage you to ignore that stuff because what actually is really important today is figuring out how to be either a contributor individually or how to be a manager or a leader in making a global machine run. That really makes people who have that skill valuable because as we get bigger as much of the differentiation that will define our path to five or $10 billion is going to come not just from our products, that'll be necessary, but it won't be sufficient. It will be also required that we operate this machine and figure out how to take resources scattered around the world, not just in development, but certainly in that example and how to operate that machine more productively and more powerfully than somebody with whom we compete. Because there's huge arbitrage opportunities from a cost point of view which will go away, but what will remain is that if you're looking for the top 10% of talent to build your company and talent is critical to any company's success, if the size of company A's pool is X, some portion of the world pick any country. And the size of company B's talent pool is 10X, then the top 10% is going to be better and it's going to be easier to find and easier to recruit. So the actual competitive requirement for this global marketplace and labor pool is the only way any company of size is going to be able to recruit the necessary talent relative to what others who compete with them will do. So being global in the way that you approach the job market and looking at these situations and figuring out how do I capitalize on that, doing that well and understanding how to operate around the world, how to manage teams in multiple locations, how to understand cultures in different countries and synthesize that effort. Those people are as or more valuable to us and if you put two people competing for the same job with make their skills identical and one of them has that understanding or has had some exposure to that, that's a more valuable person in the workforce and companies that operate these machines well are going to be more successful in ones that don't. Part of that's on development side. Part of it is also on the marketing and sales side for those that may have other disciplines or interests because really we're already there, but if we're not, it we're certainly on the verge of the condition that there's almost no such thing as regional markets. There are regional conditions and there are certain attributes that are more or less important. There's definitely differences in densities of population and predisposition to technology and things like that that might that would identify demographics in Korea or Japan differently than Canada. But on a competitive scale, there's only one market and it's the planet. And so you've got to be able to market worldwide and that means you got to be able to integrate those conditions, which are unique and understand the differences in what may be culturally ideal or totally unacceptable in one country versus another. But also figure out how to get the leverage by not making it the case that you've got to build an individual marketing campaign and reinvent it 88 times for every country or market that you go after. So how do you solve for the magic of synthesizing across the whole world without ignoring the cultural uniquenesses, for example? Having to understand about that's really important. So for us to be successful in the second phase of our growth is going to require changing some of the ways that we spend our time and doing a lot more teaching and developing a lot more of our talent inside the company in both individual tracks on both technology and other fronts, but also in the management leadership capacities and then figuring out how to operate this global machine and do it better than anybody else does it. A couple of thoughts and then I want to save time for questions. One, a couple of stories. I was at a company called Stratocom before Juniper for 10 years actually from 85 to 95. It was a venture backed company. From 85 to 90 we brought a product into the market, I'll spare you the details of the product and market examples, but the company did five or 10 million in the first year and then 15 and then 17 and then 14 and then 18 and basically never turned a profit and used up all the venture capital money. We had a board meeting around 1990s, like 85 to 90 and said, you know, we have this one idea which if you want to let us use the rest of the money in the bank, which is about a couple million dollars, we'll try that or you can just shut it down. The venture guys said, well, if we shut it down, we have to go to our investors today and say we lost all the money. If we let you do this, we're going to lose all the money anyway if it doesn't work, but at least we don't have to tell the investors today. This is what he doesn't work. Well, it turned out to be an idea that did work and the company grew from 1990 to 95 to from 30 million or so to almost 500 million and then Cisco bought the company for almost 5 billion. The point is it was almost no turnover. It was the same management team for the 10 years. I was there for 10 years and most of my colleagues that worked for the same CEO that was there for 10 years. For the first five years, we were stupid and for the next five years, we were geniuses and it was the same people. So what changed? What changed to go back to an earlier point was the market. We got ourselves attached to a market where something was happening and it made it a lot easier to look smart. So people will talk correctly about the importance of people and brilliant technology and I don't mean to take away anything from that. But you got to find the market and it's very, I don't know how to invent one. And actually if Steve Jobs were standing here, he could probably tell you how to do that. I don't know how to do that. But if you find one, I have had the good luck of being in a couple situations to be able to capitalize on it and the degree of difficulty is much lower. So that's one. Second thing, this is not really a story, it's just an observation that I find interesting about Juniper. In the course of the time that I've been at the company is the CEO, which has been most of the 10, just come to me about 10, half years old, have been there other than the first four or five months and Pratip was getting it started. I've been there. Well, on day one, I was nobody. Year three, the company went public and market cap went to $70 billion. I was a rock star. Limos, you know, rooms full of people hanging on every word. Then the company went from $250 a share to $4. And I personally lost almost $4 billion. And so I became an idiot. Because only an idiot will let that happen. And then in the last year or six months or so, hopefully you guys haven't wasted your time following this, but there's been a whole investigation of lots of companies around something called stock option back dating. So today I'm a criminal. So I've gone from nobody to rock star to idiot to criminal in the same job, doing basically the same thing. And that will pass and I will not end up being a criminal. And I'm sure I'll never again be thought of as a rock star. And point is this, don't get too caught up in anything, either the praise or the criticism, but being really focused on what you're about and why you're doing it in the first place is a really valuable thing to remember. I think of it as kind of like sports where if you're an athlete, you need to realize that the sports page is going to be full of opinions. And when you win the games, you're going to be a hero. And when you lose the games, you're going to be a bum. And you're going to be the same athlete both days. So be really careful about not getting caught up in the good or the bad that goes with it and stay focused. And then the last point is the single most valuable thing that I would urge you to grasp and rely on is your own common sense. No matter what somebody tells you, if it makes sense to you, then that's a good thing. You should act on it. If it turns out to be wrong, you'll probably figure it out before anybody else will and you can fix it. But if it doesn't make sense, my favorite story about this is not a Silicon Valley story, but when President Kennedy took office in 61, the first thing he was told to do was invade Cuba, something called the Bay of Pigs. And the entire armed forces staff of generals, the Army Navy Air Force said, don't worry, we can fly in there. No one will know it's us and we'll take out the whole insurgency. And he said to himself, you know, that doesn't really make any sense to me. Because I don't understand how we could possibly fly all these airplanes and all these troops in there and have no one know it was us. But who am I? I'm the youngest president in history and here's all these generals and admirals and Secretary of Defense everybody saying we've been working on this plan since before you got here and it was tapped in by Eisenhower and look what he's done and how much he knows and who are you? He's a PT boat captain. So he went long story short, he authorized the invasion, it was a huge disaster, it was the first major decision in his presidency and it was this incredible catastrophe that was and one of the things he said after that was he said, I will never ever again do anything that doesn't make sense to me. And I've just thought that was really a good thing to remember because your own common sense is a really useful tool and it will get better whether you pay attention to it or not, it'll get better over time. But even on its first day, it'll be worth listening to if you're trying to decide between A or B, do the thing that makes the most sense. So with that said, let me stop, I'll take a drink of water and I'll be glad to use, we've got 25 minutes or so for questions and I can go back to the story or go elsewhere and we can talk about anything that you like for the balance of the time. Yes. Can you talk about scaling, Jennifer, and how you get from the start to this great trip, how you got a company from personally for you, how you scale your leadership, how you start that? Do you need me to repeat the question for this thing? So question was how does Juniper scale and how has it scaled over the course of its evolution to today and maybe also what have I done to scale in the same regard? There wasn't much thought about it from zero to a billion because it happened so fast we were just running around, it was really unbelievable time because you would, the sales team would say, well we think we're going to get a $10 million order in a week and they'd call up the next day and say actually they ordered 20 million to 10 million. So we didn't have to think about answering questions like yours because we were just running around thinking this would never end and that we were doing everything right. When it all sort of fell apart and we had to sit down and figure out how to do things different and better, one of the first things we realized was that we had no repeatable processes or practices in the company. And this is actually something we're still learning, which is you can't start with systems to fix that kind of stuff because the system depends on whether the process is good or bad. And you can't start with the process until you determine whether the practice is good or bad. For example, if it takes five signatures to get an offer letter out to somebody and that's the process, don't build a system for how to track five signatures because the process says you have five, go back to the practice and say, why don't we just have one or two? Let's have the hiring manager and maybe an approver if needed and then let's implement that practice in a process which goes into the system. So a lot of thinking about how we could repeat things. And then we didn't really learn this until probably a year or so ago and at least I didn't. We've got to spend a huge amount of our energy and time developing the people that already work at the company as opposed to going out looking for geniuses or really experienced people in fairness. A lot of what we use to build the company from maybe not all the way to two billion but for a lot of the time our minds that was higher great people, higher great people. And if you look around your organization there isn't somebody to do the job that you need to put it out open or rack and go get a great person and do it. As opposed to a really conscious commitment to say, what can we do to develop the people that we have to do the jobs at the next level themselves? And there's a premise that is based on that I really believe. It's better to give somebody that's never done something before the chance to do it than it is to ask somebody that's already done it to do it again with energy and enthusiasm. Maybe that's a personal projection. I'm not any good at doing something I've never that I've already done. And trying to do it again with the same passion because there's a real power to that and passion to proving yourself. And there's a tremendous power to ignorance. It's really good to be unaware of how hard something is. And it's actually quite debilitating to know exactly how hard it is and do it again. So giving people inside the company the opportunity to grow into new jobs more often than not they will surprise everyone with their ability to succeed. You know, and you imagine we're going to have a presidential election in a couple of years and no one who's going to run is going to really seem like they could be president because they haven't been. You know, how could pick your name Barack Obama Hillary Clinton how could that person be president or been president. But after someone's in the office then it seems like they could and they actually do. And the same is true in jobs give people the chance to get into jobs and do them for the first time because probably that energy and passion will overcome the experience that you might have otherwise thought was necessary. And those are probably the biggest things that we have had to realize and that I've had to refocus my my time on. Yes. I've been using that conference where you know zero Eric Smith talk about innovation and they said all that rules for innovation is a fair fast fail off and iterative way to success. They have a 20% time for the year but they can just innovate whatever they want. Do you have any golden rules of innovation how important is innovation. How do you make sure that you are very innovative at the time? I told Eric this the other day I said that that 20% of time that you allocate to innovation is after you require 100% of their time to go into their regular jobs. So let's say be careful what numbers can fool you. But one of the things they do really well and that he drives and that that team drives really well is innovate innovate take risk take risk to your point fail fast and don't be afraid. And they really have got a cultural discipline around that. Probably better than ours I would say and at least one dimension which is that they've gone out much earlier in the evolution of the company and staked out that that turf as something that is going to be part of the company and part of what they do. We have done it a little differently which has been to take the teams it's a tendency sometimes to let that conversation become quickly one about technology and products only and there's a lot of innovation required in system deployment and in innovative marketing and all kinds of things. And one of the things we've tried to do is to push on why are you doing it that way. And what's different and what's better. You know we try to spend a lot of time asking why is it better what's different who cares. And let that be a question that we only invest in after we're convinced in the answer. And people you know that's a question everyone wants to answer and wants to be satisfied with because one of the things it defines maybe this is an engineering comment but one certainly one of the things it defines really good engineers in our experience is successes for them are not defined by the brilliance of the innovation. It's defined by how successful it is in the marketplace and if lots of people use it then that's really that feels good and that's important. And it might be the most incredible thing ever invented but if nobody uses it in our company culture that's not considered good. And it may not be quite as quote innovative as a research experiment but if it gets used by lots of people then that's a definition of innovation that we that we hold in in high regard. So we try and drive a lot of our questions and a lot of our process around why is anybody going to care about this and how are they going to use it. And make sure that we are comfortable in the answer to those questions and it motivates people to think about those questions in the design and in the contemplation of things. It's a very important thing to do and in getting to a bigger company to answer one of the earlier questions it's going to be a really we're working very hard to hang on to that so that it doesn't get lost in the challenges of just genetically scaling. Yes. What do you do for markets and timing or so critical success? How do you evaluate? It's a good question. How do you evaluate markets and the timing of them. One way is and this is I think he were here largely what he would say about Juniper is what Pradeep did which is use your common sense. And his thing was to say if this machine called a networking router sits five feet tall and takes all this power and generates all his heat and you could just as easily see something that's 100 times more powerful that sits on the desktop. How could this not turn into that? And if it's good when people network it'll be better when they network more which will make more people do it which will make it better. They call it that caps law. So there were some very basic observations that were just simple common sense that made him believe that this was going to be a big thing. Now the risk in trying to find a market with just common sense is whether your timing is going to be right. But I would say that's a second order problem meaning that if you find something that from a common sense point of view seems like a good place to be. Then just waiting into it is good because you can say well doesn't look like that's going to happen as fast now that I'm into this. But since I'm in an area of general opportunity something else will happen that I can capitalize on because I now have some understanding from being in the middle of it. So at the metal level macro level ever one might say it look for big changes or big things that are happening. And worry less about the job you get the title you have if you can afford to worry less about whether you make this many thousand dollars more or less on entry. Get into a big space or something that feels like it's going to be a big space. And if it's sweeping the floors and figures out what's going on in there because you'll be able to turn that into something much more easily than finding a big job in a dead spot. So common sense I would say is probably your best tool and then find something at the macro level and don't worry about finding precisely exactly the thing that's going to turn into a big deal. Let that be something you worry about once you when you get there. Can you talk more about the strategy? It's really changed for the past 10 years. You can be more immediately. You can be different as with fiscal but now it's more like had to have competition. So the question is do you know for strategy and how's it changed? It started out as I described just build a bigger faster router than anybody else's and Cisco is a primary alternative. We have in the market defined by service providers we have about 30% 3035% of that market. What's changed and one of the things that led to a major acquisition and to a lot of investment is was we said well we've got this core router which handles traffic at the middle of the network. We need to make a move out to support the edge of the network so that we can get the traffic on and off the core. Then we need to make a move out to what's called access or aggregation because we've got to be able to aggregate the traffic to get it to the edge of the network to get it across the core. So building a footprint out like this to cover the network space. And then the second move was to go up the intelligent stack because in the biggest acquisition we spent about three and a half billion dollars on a security company called net screen because people aren't going to use the network as much unless they feel comfortable that it is secure. And there's no such thing as standalone security in the end game network security meaning the network has the intelligence to secure users and to authenticate those users and to authorize them and to encrypt their traffic and do a bunch of things. Network security is legitimate and the network can have that intelligence but standalone security doesn't survive because you can't separate it from the network. It's got to be integral so making a network that not only connected everybody but then secured everybody was a step this way. And then after security what could the network do to be aware of applications and the relative importance of an email versus a video stream or a voice call or a financial transaction or a file transfer. Some of those might have to be there in fractions of a second or the quality would be bad others might have to be encrypted for security or protection for financial reasons. Others like email could wait because you're not really watching down to the second or minute whether your email gets there that quickly. So all of this awareness of the traffic to be able to do differentiated processing and to make some applications run better or faster at certain times. We power the ESPN website. So in the NCAA basketball tournament the big problem they had three years ago was everybody went to the site at the same time when all the games in the first round ended because they all wanted to see how they were doing on their pools. Well that was exactly the time when ESPN wanted to put their best foot forward and have this website perform really quickly and it didn't. It was a time it works the worst. So when you really needed it to work well the website made an incredibly bad impression. Oddly enough last week on Black Friday the shopping day after Thanksgiving the same thing happened to Wal-Mart's website. I was just reading article on paper it took like 40 seconds to get a search and some stuff just disappeared and never came back. How much would that have cost Wal-Mart? I don't know but it's a big number. So the network should have done a better job of having better response for a much larger number of users trying to get on that site the day after Thanksgiving. So our strategy is about covering the entire footprint of the network and then doing intelligent handling and processing of the traffic so that at the end of the day what it comes down to is user experience. So if you're sitting there with an iPod in your hands or a blackberry or a laptop or on the other end of this live broadcast. If you have a good experience then you'll pay for it and if you don't then you won't. And the only person writing a check in this whole system is the person holding the thing in their hand clicking. Everybody else caches the checks network equipment companies service providers website operators we're all check casters the only one check writer. So the network has to become the enabler of the user experience in order to make the check writer happy otherwise nobody gets paid. So our strategies evolve to become that as opposed to just building a really fast box in the middle. Yes. I've got a question about when you first joined Jennifer 10 years ago. When you were making that decision to join a company that at that time just got started was unproven and wasn't that a multi million dollar. What were some of the top factors that you considered making that decision and what were some of your concerns that you're joining on as a CEO? The strongest factor behind the decision was pretty partly and pretty soon to the founder partly because of who he was actually just the character that I felt and chemistry that we had. And partly it was the quality of his thinking. Meaning not just the quality of the individual idea which I thought was also smart but the quality of his thought process was as powerful as probably anybody I've met before or since. And so I thought you know this guy so smart that how can you be wrong. One of the ways he could have been wrong which was the other side of your question which what worried me was what if the market isn't right or the market timing isn't right. And or what if Cisco or at the time there was probably 10 or 15 20 other. Starting up sort of in the same year two years over there. So what if we either get overrun by somebody else or crushed by Cisco. And the thing that was most intriguing to me was this was either going to be a really big idea or a complete flop. But it had very little likelihood of being what I call walking dead company that gets just big enough not to die and too small for anybody to care about. And yet you're attached to it because as your name on it and you were part of founding it or starting it or running it and you really can't walk out on it or I could. So the last thing I wanted to do was be walking dead in a company that had no future but was just big enough to limp along with the valleys full of those. So this was either going to hit the windshield like a bug and be worthless or it was going to have a chance to be a really big thing and I thought that was a really appealing attribute. Yes. Between my firm and what sorry. The exposure to the Juniper situation is like a lot of companies I think with regard to public market scrutiny which is really a. How far does this podcast go I guess anywhere and everywhere. How careful to make this comment there is a very dysfunctional unrelated interest between public markets and I think most well run companies depending on who the investor mix is. Because you've got to be able to step back and make multi year investment decisions. Public markets can be really good and investors who participate in them can be really valuable in trying to make sure that you don't forget your financial disciplines. And you can't throw profit out the window because you've got a wild idea you know generating cash and making money is an important thing and investors insist on that and they bring a discipline that's valuable. The problem is they have a short term window of interest about that. So for a lot of investment strategies the best thing a company could do in support of that strategy is kill most of their R&D and other investment spending. Boost their profitability disproportionately for a short period of time and the investor will come to the company until it started to wobble and then get out of it before it fell apart. And there are lots of investment strategies built around finding versions of that whether companies behave that way but finding disproportionate leverage for short periods of time and getting out. And so as we often say we're not interested in having just any investor if the you want to invest in company that's fine and we'll comply with all the public disclosures on stuff. But if you want our time as management and you want to learn and understand about the company depends on what your motivation is. And it's not what you tell me to is because every investor would tell you the same thing I'm a long term shareholder. So it's a different definition of the word. But you can tell by people's behavior and track record and you can actually tell by the questions they ask. So we just try and spend our time with people who are trying to help us in what we believe is our opportunity. Today we're a two plus billion dollar company in a 20 billion dollar market. And we ought to be at least a five billion dollar company because it's only really one other company to worry about. And they're not that daunting. So it doesn't mean we're going to take them out of the game any more than anybody took IBM out of computing. But IBM gave way to Oracle and Intel and Microsoft and lots of other companies when computing segmented into a lot of different elements. Networking is not just networking. Networking is going to consist of stuff you buy at Comp USA and that you get from your cable company and put on the set top of your television and network infrastructure and things that we do and all that. So we need to make sure that we don't forget our mission in the midst of some cross section of investors in the public markets who have a totally different, totally legitimate investment methodology that isn't related to building long term franchises. And it's other companies are also mindful and I think some do better worse jobs of it, but it's really important. Yes. Is Jennifer impacted by the net neutrality debate at all? The net neutrality debate for those that may not be familiar is Google and Microsoft and Yahoo arguing that the network should be free and there should be no service differentiation and everyone should be allowed to use it. And equally and these network and the operators Verizon's and AT&T's and others the world saying we should have the right to have control and discriminate over who uses the network. Our biggest problem in the comment is that we support the backbones for all of those guys. So we think there is one dimension they're all right. But what I think is actually happening is more political question than anything else, which is the content providers don't want to be charged just to get on the network. And the telecom operators don't want to be required to invest capital and not be allowed to differentiate service in order to generate a return. They don't want to just put the money out there and have it be overrun for no profit. So they're each taking very extreme positions. But I think what will end up happening is everyone will be allowed on the network. No one will be discriminated against. But the people who build and operate the networks and invest the capital to put them in place are going to have the right to create different classes of service. And it's the same kind of works in every other communication or line economies for the economists in the room that you can think of. Every line economy you can imagine has got differentiated rates for packages and people and electrical service and all of that. And this one's going to work the same way once they get done arguing about it. Each is afraid that if they go to the middle, the other guy will bring them to the other side and politicians who don't know better might go along with it. So they're each staking out severe positions to make sure they end up in the middle of the same time. I don't know how long that'll take. One more question? Yes. We have to narrow the network. Why are those companies? Yeah, I'm not a guest speaker. And they said that their recipe for success was to find a niche one. And the computer was giants like Cisco. So what is your recipe? The recipe for success has changed actually. It was niche strategy in the first day when we were just trying to build a big fast box. What I would call sort of an in-between zone right now, it's one of the reasons where I made the comment earlier. I don't really think the companies at critical mass, even though we have a couple of billion dollars of revenue. Because we're bigger than small companies and smaller than big ones. So we have to worry about little companies trying to take niches out of our market. And we have to grow to being, I would say at least five billion before we can really believe we're going to make it uninterrupted. The way to do that is you've got to the transition that has to be made is shifting from thinking of the problem in a niche or in an insulated way to, and saying, I'm going to solve this function. To going to the second stage of strategies, which is who's paying the bills and how do I make them happy? Because the functional problem is quite distant from the bill, the check writers, as we call them. So your evolution of strategy has to be to figure out where the source of the money is. And what am I going to do to make those sources better off? And then I back into that with conclusions about what that means that the technology has to do and the configuration of the portfolio and the targeting and the marketing and all of that. But the difference in stage one and stage two is a really fundamental separation because you can't leave the technology behind, but it's not a functional problem anymore. It's a money problem at that point. And you have to be able to evolve to that thought. And we'll see how we do. Great. Thank you. Okay. Great. Thank you all. Good luck. On behalf of Bases and STDP, I'd like to thank Scott for speaking. Thank you very much. Jeff, appreciate it. Thank you. Good luck, everybody. Thank you. Thank you. That was great. That was great. That's an easy thing to talk about. A lot of interesting insights. That will be if you want to ask us. I'll be with you in my room. Oh, I'll give you all that. Scott, thank you. Good to see you. Good to see you. I'll be back. See you again, Tom.