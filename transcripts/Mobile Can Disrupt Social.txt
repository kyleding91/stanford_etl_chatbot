 You are listening to the DFJ Entrepreneurial Thought Leader Series. Brought to you weekly by the Stanford Technology Ventures Program. You can find podcasts and videos of these lectures online at eCorner.stanford.edu. Today we have a very special and very interesting guest, Monica Lam. Monica is a professor in the Department of CS, but she's also a serial entrepreneur. In fact, she does both at the same time. She teaches here and has started three different companies. One is Tensilica, Mocha Five, and Mobee Social. She is really passionate about disruptive technology. And today's talk, she's going to share with us how mobile technology is going to change everything. Monica. Thank you. Thank you very much, Tina. All right, good afternoon, everybody. So the title of my talk is how mobile disrupts social as we know it. So what does social as we know it? How many people are on Facebook? Maybe I should ask how many people are not on Facebook. All right, so you all know social as we know it. You know what that means. So let me put on the computer science hat. And I would say that from a computer science perspective, the way we build these social networks these days is a little bit sad and embarrassing because what we have today are these centralized cloud services. In order for you to share, you sign up and you say, here is my data Facebook or any other social network, please take my data and share it for me. Okay, so these are centralized services. The computer science researchers have spent lots of time distributed computing so people can own the different data and then they can share from different sources. But somehow that's not the kind of systems we have today. So we have all these centralized services and these are what we call social intranets as opposed to social internets. What a social intranet. You know, when you say if you sign up to work for a company, you fill out a form and then you say, look all my intellectual property belongs to the company and that's called the intranet in the sense all the materials available if you're employee inside the company. But to some extent, the social networks that we have today are intranets because there is a long Mueller. How many people read the Mueller? Oh my. You know what the Mueller says, right? I mean, they own the data and do whatever they wish with it. And by the way, it doesn't matter if you read it or not because they can, they reserve the right to change the Mueller anytime. But anyway, there is such thing as social intranet. Have you seen any social intranets before? Do you think? Anybody? Could every such a thing? Actually, you've been using both two very famous social intranets. One is email. All right? Because with email, you can pick the provider of the email service and you can interoperate with each other. There are three giants for the consumer email services. There's hotmail, Gmail and Yahoo Mail. I mean, these are the huge giants. They may, you know, they provide you a free service. They may monetize the data. But you have a choice. And at the same time, universities can pick up and can put up their own, companies can put up their own, individuals can even put up their own. And you have a choice between paid and free services and they all interoperate. And that's called a social intranet. Another example of a social intranet is a telephone system because I may be on Verizon and you may be on AT&T. We can still talk to each other. We don't have to say, you have to join the same network before I can call you. Okay? So these are social intranets. But with these centralized services we have, we have these proprietary systems. We have these proprietary social networks today. And this proprietary social networks, we have these proprietary app platforms. How many people have heard of Farmville? Sorry. Farmville is very, very successful. It's a game from Zingha. And by using the Facebook network, they grew really, really quickly. And so when a social network like Facebook puts out these app platforms, it's just very, very attractive to a lot of companies. So for that they do have to pay. And before the IPO, they Facebook turned, they say, oh, for the service, you have to give us 30% of your revenues. Okay? What is 30% of your revenues? It turns out for that quarter, I don't know if you can see it. They report it like a drop of 95% of their profits. Okay, that is pretty steep because these are revenues and not just profits. Is that a fair number? Possibly, all right? I mean, they really owed it to Facebook in a sense to get that big really quickly. So that may be a fair number. What is the right number anyway? Well, it really depends on the market usually. The market determines the number. What if a social network turns around says, I really want 60%. Is that fair? Well, it really depends on whether there is a market or whether there is a choice. If Zingha doesn't want to go with Facebook, do they have a choice to go to? And whether there is a choice determines the price if there is an open market. But if you don't have an open market, if we, for example, have a monopoly, then it will be controlled by a single company. Okay? So it's a little bit concerning for some of us. And then from the proprietary app platform, lately we have seen another thing that is happening is the messaging systems. There is a, in 2011, it was reported that the operators lost like $14 billion in SMS revenues and people are moving towards these over the top messaging services. And there was an article, I thought that was a really interesting one from TechCrunch saying that there is a message war going. And they think it is going to be Apple, Google, or Facebook going after that. So messaging is something that we understood to be open in the past. And it looks like there is a chance for messaging to become proprietary and closed. And there are companies traditionally who would say, we provide these for free services. And we are expect, you know, we will basically promise that they will monetize your data and do something with that data and serve you ads and so forth. So the question really here is that we started with social networking that didn't exist before. And then we kind of, the proprietary nature of these concerns have kind of got into the app platform and now we may be seeing the messaging going that direction as well. So there are various people who are concerned about that. And in 2010, there is a group of New York University students. They started this movement. They said we are going to build an open and distributed Facebook equivalent. It's called diaspora. How many people have heard of diaspora? They got pretty famous. They announced it and a lot of people supported them. But unfortunately, it didn't really work out. We waited for it and it didn't quite work out. And as a matter of fact, when they announced it in 2010, our research group, which started in 2008 on mobile and social, has already started the project similar to that, with a little bit more research elements in it. And we were closing that project down by then. The reason we realize is that it is just not going to work. Why? A couple of reasons, right? The number one thing is that if you really want to have a social network, you have to interoperate across people who care about privacy and who people who don't care about privacy. If you just make a network that is good for people who do care about privacy, it's a very small network. And it's also a very A-social network, because they care so much about privacy. So the first thing that we learned from that experience is that it has to interoperate between the free and the paid and then you get a chance. So that's rule number one. Rule number two is that you just cannot say, let me just, first of all, people don't care that much about privacy. Let me just make a social network that's kind of like Facebook, except that we are new. So we're going to give you a fraction of what Facebook already offers and expect people to come. That's not going to happen. You know why? There are already a billion people on Facebook. They said it was plentiful. There is no need for another system that is a subset of that experience. So what it says to us is that if we want to do anything about this, you have to create a new experience and draw people to the new experience instead of just saying that you care about privacy. So those are the lessons that we learned. So how do we do this? This is a really hard problem. A lot of people, there's a lot of money behind all this. This is a really hard problem. And we worked on it since 2008 and we realized that mobile may give us a chance. Because this is the new revolution in computer history. This is a big one. We went from mainframe to PCs and we say, now we have all these opportunities to do to control our own computing resources. That was great. And then we realized, I said, but my PCs are heavy. My laptops are heavy. I couldn't get access to my data everywhere. So we'd like it in the cloud. So we kind of swing the pendulum, kind of swing back and say, let's store everything in the cloud. In the meantime, the technology got good enough that we can store all kinds of things in the cloud. But this round, we got these phones. Quad core, per phone, gigabyte of storage per person. And now the phones are going to reach the entire world. Because of, with more law, you just have to wait a little bit. All the dumb phones are going to be smart. And it's going to reach every single person. And this is a chance for us to swing back from the cloud services to a more distributed service where you have control over your own device. Now, the thing about mobile is that it is actually better than these centralized cloud services. Why? Because it's more available. Even when I'm on my plane, all my photos are available on the plane. And by the way, when I go to bed, I put it down. It's my alarm clock. It can even wake me up if there is a reason for this to do so. So this is, and then of course, you have signed into all your networks and all your accounts. It is faster than you to go to any other terminal and to do any transaction. So it really is you. It is your personality. And so in that sense, it is a very special device. You know in those old days when we say personal computer, the reason we have to add personal to it is because it is not so personal. Nobody talks about the personal phone, but this is truly the personal phone. You don't have to qualify the phone to say this is the personal phone. Now, the other thing is that the phone actually has the largest social network. Why did I say that? All right, if you take Stanford, I'd say 99.99% of all the students are on Facebook. Guess what? They are not my friends. Would you friend me? Sure. It's inappropriate. It's inappropriate. For, you know, there are schools that tell teachers not to friend their students. It's inappropriate. Personal life, work life, school life. The fact that you are all on that doesn't give me the big social networks. But on the other hand, what is interesting is that because I'm on Stanford, I can go to the Stanford directory. I can actually reach everybody here because I have access to all your email addresses. So I have access to all the students' addresses, all my colleagues. If there is a reason for me to reach them, I can reach them by virtue of me being a part of Stanford. The fact that you are all on Facebook doesn't really make my network bigger. So there's concept here is that if you look at what is on the phone, I have access to all my Facebook friends, all my Stanford colleagues and students, and LinkedIn, and all the other social networks. So as far as I am concerned, this phone has a bigger social network than the network out there. All right. So I have an interesting observation that if you look at what is on the phone here, it has access to all the different social networks as well as, you know, this is with me, you have a phone with you, and I should be able to contact you, connect with you as well. So that's the background. So here is the architecture that we have come up with. The funny thing is that it took us, this is our fourth try. We threw away three different systems to come up with this architecture. It's very, very simple, and only simple things work, by the way. So what does this say? This look, today, the way we connect to our friends is through these huge social networks like Facebook, LinkedIn, and what have you. And each one of these networks has its own set of rules. These are the social rules of engagement. We know what it means to be friends of friends on Facebook. Okay. You two friend me, you know that you're going to give me access to a lot of things than just to do some, you know, play a game together using Facebook Connect. All right. So there are lots of rules associated with Facebook, or LinkedIn, and so forth. However, if I look at the phone, it's like, the phones are so powerful. Why are they, why are we treating them like they are little, little thin client attached to the cloud? Sorry. Why is it that I can go and talk to you directly? You have your phone, I have a phone. You know, why do I need a third party, storing or keeping track of our relationships and following us? So why is it? And one of the biggest problems with these phones is that they wrote using TCP IP address. What is your TCP IP address? I don't even know my TCP IP address, but along your TCP IP address. So what we have created is a very simple messaging core infrastructure. And what it does is it allows people to exchange messages based on their existing identities. What are they? Email, phone numbers, Facebook numbers. All right. Facebook. And as long as I know you via some kind of a name identity, I should be able to connect with you via this messaging service. So we are now going back to more like a contact book model. And when I do something with you, all you get is what I'm doing with you. You don't get all the friends of friends and pictures that I'm sharing and other networks. It is just that straight up. That is the connection. We do something together and that's the end of that. So that's the basic idea. Is it now that if I can connect with you personally, then I can do all kinds of things with you. And one thing we do is to make that messaging, messaging function available to the apps. Okay. Oh, by the way, I should mention that when I say that there is a messaging system, sometimes my phone is offline. So it is necessary for the messaging core to hold on to the data until it is retrieved. But once it's, it hands you over the data, it can go ahead and delete it. It is only a messenger. So what we've done is then make this messaging layer available to the apps. So for example, if you're playing a little scrapbook game between three people, this scrapbook game can just run straight on those phones. You know, as I play the word hello on row two, column three. It's just a little bit of a message. It just goes under the network and deliver to those two phones. The three of us are in a little scrapbook, you know, scrapbook social network together for a short little while. And there is nothing more to it than that. So now we can enable all kinds of multi-party interactions built on top of this simple messaging core. And then you'd say to me, it's like, what? I mean, what happened to the data? What happened if I lose my phone? Well, you know, you have a lot of valuable stuff on your phone already. It's called the gallery. What do you do with a gallery? You back it up. Okay? Maybe you use Dropbox. Maybe you pack it up to your PC and so forth. So what we are asking to do then is that you have your phone backup. All the communicated data can also be backup. And you can choose the backup of your choice. You can put it in G drive. I can put it in a scribe drive. You can put it into different accounts of the Dropbox. And now we are sharing across these resources together, these servers in the cloud. There are a lot of free services in the cloud or you can pay for some of these services and it is, you know, and it is all up to you. But now we can interact with each other. So that's the basic idea behind this messaging system, this architecture. And let's go back to this big picture. Remember we are saying how we go from the social network to the app platform, from the app platform people are getting into the proprietary messaging. What we are doing now is to say, let's start with the open messaging. Make the messaging available to the apps then we can open up the app platform and from the app platform you can go store your data anywhere you want and that's open up the social network. All right? So this is the direction that we discovered. You know, guess what happened when we tried to do this research in 2008? The first thing we did was to try to compete and say, oh, let's build this open social network, like the diaspora thing. It was like, that just doesn't work. We retreated and we say, oh, let's work on this. That doesn't work. And finally we found that there is a possibility because we have nailed it to the very small core that we can potentially provide and now you can grow it back out in an open way. So that's the basic idea. Now what I have been talking to you about are very important issues, privacy, monopoly and scalability. Scalability refers to the fact that there could be gazillion billions of phones out there. We're all going around taking videos of dogs and cats and sharing them. Do you really, really think that there should be one centralized service that holds all the data so that these videos can be shared between people? Do we really believe in that? I don't. I believe that this is a disruption in the computer technology space. The phones are very different from the PCs. We will see a lot more distributed computing. And so that's why scalability is up there. Do you guys care about these things? Yeah. Yeah? How many people care about these things? All right. Well, the funny thing is that when I, you know, we've been teaching this mobile and social class and every year I would ask my students and most of the students don't care. Just don't care. They just don't care. It took me four years for them to teach me. They really mean it when they say they don't care. I thought you really care a little bit, right? If I give you a choice, just take Facebook as it is and Facebook with some guarantee on privacy. Exactly the same. Take the one with a privacy guarantee and they say no. And what we hear here is that, you know, we're very concerned. So what do we do? So what I have described to you, if you're a computer science person, you realize that I'm talking about a distributed operating system and file system. There are tons of things that we have spent many, many years on and we have built various systems. Some of you may have heard of like AFS and CODA. None of these things ever lived to be used by the consumers. Because why? Because a lot of the systems professors, I'm one of those, they don't think about going cross-platform, going adopt, being adoptable, usability, programmability. And more importantly, you really have to give people a better experience. Don't just say, this is good for you. Just believe me, it's good for you to do this. You have to give them a better experience. So what that means is that we pretty much have to start all over again. I just gave you a talk for people that care. And now we really have to think again all over again. It's like, how do we give them an experience where they say, oh, I like that experience. Oh, good. It has got more better privacy and all that. Oh, thank you. I don't mind that, I suppose. That's how hard this problem is. So now let's start another talk. And that is, how do you actually build a better mobile social experience? Are we doing well on social? Well, we definitely have done, you know, in the virtual space. We definitely have done a lot better than before. But how good are we? OK. So there are people who feel like the social, as we know it, you know, with Facebook. It offers a gateway for hundreds of shallow relationships and emotionally detached communications. There are people who think that the more time you spend on Facebook, the less happy you are. It has caused any effect. But the Facebook model is one where you broadcast. You say this is what I'm doing. And maybe you listen to me. But there is not a lot of back and forth. The best I can do is give you a like. I can give you a comment. I can't really kind of interact with you socially. It is much more of a broadcast model rather than interacting model. So we thought about it. And we say maybe it's time. I mean, of course, on Facebook you can also choose to share only with local groups and small groups and so forth. But they don't make it particularly easy either. And so what we are saying here is that let's see if we can build something that is genuine, that is for your genuine social relationships. We have groups. We do have groups. There are big groups, small groups. There are persistent groups like family on the spot groups like here. I have this group of people here that I'm talking to. You're spending an hour with me. We are friends. We're an hour. And we want to be able to interact. And there should be no strings attached. I don't have to sign. You don't have to make me a Facebook friend before we can interact. And with the mobile device, we should do a lot more real time. I kind of felt like on the mobile device there are so many creative and creative experiences on these phones. And can we make that available so that people can be more collaborative and creative at the same time instead of just talking about what happens in the morning and so forth. So the question here is, can we kind of create an experience that is more group oriented? We call these micro-social, your micro-sociology. You're interacting with groups of people real time, creative and collaborative. Does that sound interesting to you guys? Yeah? Oh, good. All right. So how do we make this happen? You've heard of collaborative software before. But usually it's a pain in the neck. All right? I mean, just talk about WebEx. That's tiny little experience which shares some slides and it's pain in the neck, just setup. And when we talk about collaboration in the social setting, it is much tougher. It has to be totally frictionless. So I coined this term. It's AFAP as frictionless as possible. And computer science people we always have metrics. And the metric that we use here is the number of human synchronizations. For me to play a game with you, what do I have to do? Could you please download that game? We're not going to tell you that. I can't call you to tell you that. It's an appropriate, it's just a game. So I have to wait for the time when it is appropriate for me to see you. I don't have anything else to say. I say, oh, why don't you download that game? And then you say, okay, I'll do it later. And then some time later you download that game. And then you say, okay, what is the name that you use in the game? Is how do I play with you? It goes on because the number of times I have to interact with you, and up. So we have to count the number of interactions. So let's talk about friction. Have you done this before? A group of friends go out or you have a reunion, people you don't see too often. And it says, could you please take a picture and then you hand over to the waiter, five cameras, and they take exactly the same pictures. Like, why? You have a phone, I have a phone, I'm going to take a picture of you guys. And you guys. You know, I should be able to just say, I just took a picture and you should get that picture right there. And by the way, people say to me, of course you have to give up your data because it is free. I don't know about you. I pay about $100 a month for this data plan. Don't tell me that we have to give up our data for free. The company, I mean, the phone should allow us to be able to say, I just took a picture, you should be able to get this picture. All right, commercial time. If you download this app from the app, if you have an iPhone, download this app on the iPhone store and you will see your pictures, if you just go to this thing that says nearby and you will see the pictures and you can get the pictures and right here, right there. This is a beta tech preview that is put up by my research group, I have spun out of Stanford. They started this company called Mobysocial Inc, not a particularly creative here. And if you download this app, you will see this picture and I just exchanged it to you with you. And by the way, if you take a picture of me, I get it too. I don't usually get pictures of myself leftering, so please put some pictures in there, I would have enjoyed that. As a matter of fact, this is what we found when we talked to some 16-year-old girls and then she said, when we go to a high school dance, everybody is dressed up. We want our pictures taken. But unfortunately, I can totally take pictures of other people and people take pictures of me and I will have to wait for my friends to upload the pictures to Facebook. But who knows what pictures your friends would be uploading. Maybe they are too lazy, maybe they are not a big friend of yours, maybe they don't upload your picture, you will never get it. So that's the reason why everybody hands the picture to the waiter or to somebody is like, please take a picture of the group of us. But now here, I have just made it possible for everybody to exchange pictures, just like that. And it's on your phone immediately. So that's an example of friction that we can eliminate because we have phones and it is with us. So let's talk a little bit of technology here. So how do we eliminate friction? If you look at PCs, we have files that we have directories. And sharing is kind of like an afterthought. It's like, if for me to share something with you on Dropbox, I create a directory and then I put pictures into that directory and now I share it. Do you want to do that on a phone? That doesn't seem right. If you look at the other option, it's the web apps. What do you do with web apps? You will go to one app and you put the pictures up there and everybody joined there. If you go to run another app, you have to go to another, you will have to sign in. And all these data are siloed in all the different places. So if you ask me where the pictures are, it could be here. It could be there. It could be anywhere. And what we're doing here is that when it comes to mobile and social, we are saying that people have to come first. It is not the files. It is not the apps. It's the people that come first. Once I have created a group of people, I want to be able to do everything with this group of people. Any data I want to share, any app that I want to run, I should be able to interact with that same group of people. I don't have to go through app and I log in Facebook connect one after the other. And by the way, do you know that if I just go and play, for example, a Scrabble game on Facebook connect with like you, when I do Facebook connect, they see all my 1000 apps. Why? Well, why not? It's a close from the perspective. But that's how things are built in the past. And that's what I suppose computer science people are trying to do is to say this is not how we need to build things. So for us, the groups come in first and we build on time this architecture, the open social mobile architecture, which I talked about before, where at the core is just a messenger. Oh, by the way, do you know how to say that word? OSM? Yay! It's awesome. Alright. So we do groups first. And groups become the first class object. It is something that lives on your phone and you can apply it to any app everywhere on your phone. And our mission is to make every single app of your phone social. And let me just illustrate them with use case examples. So what I did with you just now is that I am sharing pictures with you instantly and collaboratively. So this is the front screen. It has a bunch of chats. I mean, I suppose you've seen something like that before. Each is a group. Maybe the first one is a dinner party that I'm at. I may be with an individual. I may be in a group and so forth. And these are the groups and then each one of them will have a lock of all the things that people write. And if I want to share this with a group, I click one button. I invite people nearby. And what does it say? It says, I share openly or, which is what I just did because I'm at the university, or I can also protect it with a pen. When you click that, I get the pen number. I tell you it's 1, 2, 3, 4. Then you and I can exchange on the spot without other people looking at the data. And so right on the spot, then the information shows up. If you guys download the app, you will see that under nearby, I have an ETL group. You click on it. We are sharing right away. So after you create a group, you can add email messages. You can add individuals to the group just like you do email messages. We want to make group formation as fast as writing a bunch of email. And you know how it is, right? Once you have a bunch of people in the group and you can reuse this over and over again and at some point. And in some of these groups, you just sent one message and it's over. But some of these, you use more and then they just become persistent. So it is very, very easy to create groups. And what is interesting is that, so suppose we are here at a party and we are taking pictures of each other, I take a picture, you take a picture. And for me to take a picture is very simple. I click this button. You get a set of apps that are relevant to this context. And say I click camera, I take a picture. When I finish taking the picture, it goes straight into that group. So it's automatic that it is shared with that group. It has got contextual sharing. I don't have to take a picture, upload it and say this is shared with these five people. Because by the virtue of me clicking this button inside this group, I already specify what I want to share. And these are apps that you may want to use with the group. And we have done in such a way that some of these apps, for example, camera plus, is a third party app. So you can just say here are all the other apps that are compatible. And you can just use it with your friends. So what we found is that when your apps are contextual, they get used a little bit more often. Okay? It is like, if I want to, so for example, here is a blackjack game. I was like, oh, maybe I want to share, I play a game with these guys. I want to interact with them. The point is not to play the game. The point is to interact with them. And these are just things that I can, just activities I can interact with them with. So once you get the pictures, so what we have also made possible is that the corner there is that if you click the button of that corner, then it flips over, it becomes a photo album. So now you actually have a joint photo album that you can, you are creating at the same time. You don't have to wait for upload download. And the model is like, you go to a party, everybody takes like five pictures, you get 200 pictures, and then you pick the ones that you want, you save it into your gallery, and of the pictures that, you know, of yourself, usually, and people that you like, and that's how you can share. So what we are doing here is that you create these joint folders based on these group and sharing purposes. From a computer science perspective, this chat is nothing but a transaction lock-up database updates. And when I send you a picture, by the way, I'm giving you a thumbnail, but it can point to the large high definition picture or video that I have in my backup service. And now we are sharing data straight up from our backup services, and now we can choose which one we want to use. So that's an example of a collaborative collection of data. What about collaboration? I said collaboration, remember. So here's an example. Somebody sent me a picture, and maybe I just want to say congratulations and put up a meme, and I want to send it back. So how do we do this in this model? So here is a picture. I click this button. The button opens up. And it says, oh, I click the picture. The picture opens up. And here are all the things that I can do. Remember the groups come first. It's not the apps that come first. Given this picture, all these apps are meaningful too. So the apps show up. So I can use a filter. I can put a sticker on. I can put a meme on. I can do whatever. I don't have to go to the gallery back and forth. Now I can do a whole bunch of things at the same time. And when I am done with decorating this picture, I say finish, and then it is shared right back. So everything is all people first, and we're just interacting with each other using all the apps we have on our full. Give you another example. Suppose we want to play a game here. So I say, look, I want to play a game with TJ. And I click on this button, and it says, oh, here are all the things that we do. You see that this is a change in UI here. This is our university version. This is on Android. And here are all the things I can do. Now I want to walk through this and show you some of the examples here. The third one is called e bento. What is e bento? E bent? Well, we have a Japanese visitor. And when they say event, they say e bent. And so e bento is kind of like, e-vite for events. Get it? Anyway, so it's a quick way of doing e-vite. But this e-bento is very different from e-vite because you click on it, you set up the invite, and it just goes to your friends. There is no third party that holds all the email addresses and do whatever they wish with it. It just happens. It is really quick, really easy to write as well, that app. Building a scalable e-vite is not so quick. Another example is slide bento. This is the web app, basically. Here are my slides. I put it into my list. And if you are not able to be here, I put your name in like an email address and you see me. And then you can pick up the same slides. And as I run through the slide, one by one, you know, it's great for tablets. Then remotely, the slides also move with it. And this is all just done in a distributed way. We don't have to create a whole new company, I mean, a whole company just to collect everybody's slides and distribute them for people. So it just completely changes. This is a distributed model of things. So in this case, suppose I want to click the button word play. This is the Scrapple game. How does this look like? I say a Scrapple game. It shows up on my screen. It shows up on my friend's screen. And my friend may not have even downloaded the game. In our case, we can go ahead and click the button and we can play the game. And we finish playing the word. And my friend then goes downloads the code because I got an invite. And I have already been playing this game. And then he download the game. And then when he finished downloading the game, he realized that I'm already in motion. You know, I'm already in, you know, playing this game. And then they click, they continue. So this is what I was referring to about human synchronizations. I can get started with a multi-party interaction even before my friend has downloaded the software. And the reason why we were able to do that is that the group is a first class object. We passed that around. And this is how you can just eliminate the human synchronizations. And the effect of this is very useful for app creators because now the app can spread through friends before having this overhead of asking friends to download this code. So this is something that is interesting to app creators because spreading the game is probably the hardest thing on the earth. Another example, this is an integration with pulse that we did. Here is an example where here is a story. How many people here know pulse? So you subscribe to these new stories. And one thing with the integration, you can now subscribe to a social feed, the social story. These are all the stories that my friends share with me. I don't have time to read all the other channels. Also many channels. But my friends may run into some things that they want to share with me. And sharing new stories is one of those things that oftentimes you really don't want to broadcast it because it is very specific to the interest of the individuals. You know, it is not exactly for the sake of privacy necessarily. But it is just, I don't want to spam everybody with something that I know only one third of my friends care about. So now you can say, oh, this is a story I want. You click and then you choose the group. And then it just shows up on the other side. All the messaging is done by the messaging system. And in that way, pulse can get the social function done within like an afternoon. Because they don't have to put up the social function. They don't have to put up the messaging. And they don't have to put up the servers. So this is a totally different way of separating social from the apps. The app creators can just focus on the apps. And then the social can be taken care of very, very easily. So what we're creating here is a platform that gives something, you know, it's a two-sided platform. On one hand, you have users on the other hand, we have the app developers. For the users, they say, look, this is frictionless, multi-party interactions. I like the fact that my friends are not, I'm just not spreading my friends email addresses all over the place. And at the same time, from the app developers, this is, oh, great. I can take my solo app. I can add social to it in a couple of hours. I don't have to stand up as servers. And I get social functions. And at the same time, because the apps are placed in these contextual groups, they get used more often. You know, there's a lot of times I download an app. I look at it and I'm done with it. But now it reminds me to, it's like, oh, your friend is playing this game. I was like, okay, I'll play that game, too. Or, you know, there's just a lot more interactive games that can happen with this model. And finally, the ability to spread across the friends before they even download the game, because I can start playing, even before my friend has downloaded the game, is something that helps people play with these multi-party collaborative apps. So this is a very different model of how we built social compared to the old way. And with that, it also brings about a different kind of company. So the company that we're doing will be social ink. It's really a new breed of companies where we say, we are not here with the agenda to steal your data. Okay. We just want to facilitate a new open way of doing social. And if, you know, it is not interesting to us. We have made the architecture low cost enough. That, you know, because we are just sending the messages around, we are not holding the data forever. We don't have to build these very expensive data centers. And therefore, we can recoup our expenses in a very different way than the companies that focus on hoarding users data. And the goal here is to really build and leverage an awesome community, the open social mobile community. And the people, you know, there are all kinds of potential partners from individuals, who don't want to give the students away of interacting without worrying about privacy concerns, companies, app developers. It's a simpler way to do social, potentially reaching a lot more people because it's on the phone. It is also great for cloud service providers because now they can participate in providing data. There are lots of cloud services out there these days. They can, they can all compete to provide this open social networking model, device manufacturers, carriers, and so forth. Anybody who is interested, who has a strategic interest to see a more open environment would be a good partner for us. And we believe that with this open competition, it will fulfill the promise of mobile, which means that you can free to socialize with anybody. And I think what will happen with that is that you would generate a lot more apps. There are a lot of apps that I have to do with that are too small to turn into a app company. There are a lot of micro interactions that are made possible. This is better for education. There are things like finance, fitness, those things don't go too well on these public social proprietary social networks. So that's what we're up to. One thing that we said was that with this model, it's really easy to build social games or social interactions. So how easy is it? So last summer, we have seven high school students working with us. And this is the Mego High School project. And with between the seven of them, in six weeks, they built five multi-party games. They all had one class of computer science before. They have never seen HTML5. We taught them whatever it takes, actually, they learn a lot of them themselves. And we got them building these games themselves. So here are some examples of it. But it was Truth or Dare. That's a funny game portal. It allows you to check into games to tell your friend that I'm already checked into the Xbox. Please come and play. The crossword puzzle that allows you, actually, helps you review your class material. The last one is actually particularly interesting. It's the nose game. What's the nose game? Who wants to go buy Coca-Cola, or maybe buy coffee? And the last one, you have to go buy coffee. Can you imagine building an app to do that? Can you imagine? And it was like, oh, I want to play the nose game. Could you first download that game? All right. You finished downloading the game? All right. I'm ready to play. That doesn't work. That's a micro interaction. In this particular case, the groups are set up. They're chatting with each other. And all we are doing here is a little HTML5 web page that you just send around. Everybody touches the nose. Games over. All right. It's kind of thing that we can do as a result of our totally different way of building things. So I would say that nose game is like the best example of an AFAP app. And I mean, I would never have come up with that idea. I can tell you that. Do you know why? By the way, all these games, the students came up with them. And that is because I found out that the high school students, they are really experts in wasting time. And so they came up with things I would never have come up with. Anyway, so what we are seeing here is programming simplicity. From the multi-party games, you can run it on the 2 plus chat, just like web pages are run on web browser. It will open up a lot more multi-party social apps. And just one more thing that I want to bring up is that while we are working with a high school students, we discovered something that is very horrifying for the CS professors. Because they were telling me what CS people look like. They think they are not creative, solitary, CS is tedious, no impact, exclusive, nerdy. And there is a lot of, we really want high schools to get students again to computer science. But somehow we have a very bad stereotype. And so by the way, the high school students had a great experience because we allowed them to be creative. And as a result, we actually started a program to say maybe for us to get high school students into the program, we really have to break the stereotype. Tell them that computer science is actually really creative. That's why I am in computer science. And so what we are doing is running a video competition to start and getting the high school students thinking about things they want to build. And we think that if they figure out things that they want to build and we show them it is actually quite doable, then maybe they will go take more computer science classes. So that was another project that we are, that there was kind of like a spin off from the work that we have done. So let me just summarize here is that what we are talking about is a different way of building social and mobile, the awesome way of building it. And it is kind of like a new social 2.0 is what I think. Where it is a phone based social internet, you don't have to belong to an environment, to a proprietary network each time. You get to be free to socialize with anybody. And I invite everybody here to join the awesome community. And I truly believe that open competition rules. I don't know if some of you might remember AOL and AOL is a very proprietary system before. And when you have something open, it is really hard to compete against. All right. I think that leaves us a few minutes for discussions. And maybe I'll just open it up to the audience. So Tina, I'm going to have some magic. So your professor and a co-founder of these companies, what kind of role do you play? And how much time do you spend on these ventures relative to the amount of time you spend teaching and doing research at Stanford? Oh, so the question is, how do you combine teaching and research with entrepreneurship? So it's a standard system that universities, let professors take sabbaticals every seven years. And you get at Stanford, you get at most two. You can be off campus two years out of seven. So it's so happened that way, by the way. I did not try to do all the researches to start a company. We worked on some of the hardest problems. And it's so happened that after some number of years, in this case, five years, my students wanted to start a company. And I was able to do because I can take a sabbatical leave. And at that point, I can really work full time with the students for a couple of years. And the interesting thing is that you learn so much when you leave an academic environment to do something different. And you learn different sets of skills and different kind of interests. And I think it is a really good system because every time I come back from a sabbatical, I have new ideas that I really want to pursue. Yes. This is your first spin on what were the lessons learned from that time that you're incorporating now into this new spin-off? Very interesting question. The kind of spin-off that I do are not the ones that I necessarily recommend to everybody here. Because we started these projects as computer science research projects and they are usually very disruptive. So the first company tries to, what we did is that we let people have custom process of course in ASIC chips. So it's a great idea, but it takes a while because it is so disruptive. And by the way, this is TensorFlow. They just sold the company to Cain's. And it's successful, but it takes a while. And the second company was company called Mocha 5 where we use virtual machine technology for computer management. And it's a huge problem again. And it is very disruptive and it also takes time. If I look at what happened in those two times in research, we try to solve the problem in the optimal way. But the minute you leave the university, you'll find that nobody is ready to absorb what you are trying to reach. So you have this go-to-market issue. And that is that the first thing you have to do is to take where you're going and reduce it down to these bite-sized pieces, something that they can possibly absorb. And then you build your way back up. So the work that we did in the university is research for the next 7, 15 years, you're writing how you look at it, and then you work your way back up. And we were lucky because I think the problems we solve are real serious ones. They're not the fickle ones. They don't change. And even though we take such a heavy-handed approach to them, it's the time of the test of time. We have the time to keep working and then it will come in after a while because we were looking after, because we were focusing on the trends. So for example, in this one, we're focusing on the trends that there will be a lot of distributed computing. And this will be the right architecture as a result of that. I don't know when this is going to come in, but it is true that in the last three experiences, it's getting faster and faster. But there is a very interesting relationship between university research projects and startups as a result of that. Yes, they have a question. It's not a business question as to how this is going to permeate to the market. It seems like something that you would do in collaboration with either one of the manufacturer foam companies or the networks themselves. Although I can imagine it being an app right now in the iPhone. Yes. Accesses other apps. What's the, do you have some sense of the power? It's all possible. And again, it goes, oh, the question is, how is this going to go to market? I mean, is it going to be an over the top app? Or it's going to be a partnership with device manufacturers or carriers. And there are all possibilities. I mean, we are very early at this stage. And we, there is a lot of interest because the problem is so big. There are a lot of strategic interest in this space. And I personally think that there should be enough players that want an open system. I mean, of course, there are a lot of very, very large companies wanting to own the space. But at the same time, there's still a lot of large companies out of those competing companies that would like to see an open system. And hopefully something like this may happen. What do you guys think? Is there a chance? Would you be interested in using something like this? Yeah? Really? I mean, I would use it like at a big conference or like at a concert. You get people sharing your nearby photos and stuff. So one thing we want to do is to see if the dorms will use it for communication between people in the dorms. Just, you know, there are so many things happening in the dorms and they just keep each other up to date of the things. And then it's like one of my, one of some of the students were telling me, I was like, I don't want to friend all my dorm mates on Facebook. I don't want to unfriend them. And so here's just an example. There is a need for coordination. And here's just one way of making that happen. Well, if you guys can use it, that will do it for us, actually. I think that's one of the most important things. I think there is a question over there. A hand down. Just about the technology of it. How much does this require in terms of actual phone resources, like battery and processor and stuff like that? It's, I think the question is the resources on the computers. The biggest difference that you should note is that this is a push-based network so far as opposed to a pull-based. In the Facebook world, it's like gazillion people are talking and then you will, you see a fraction of whatever, first of all, what Facebook feeds to you and at the same time what you pull. But here is for more of a genuine network where you are sending people, sending things to the people that you think they want to read. And as long as you are reading them, then there's not that much of a difference between Facebook and this in terms of resources because you still have to read them. But it is true that there is a lot of data that is, that you are not fetching if you don't want to read it on Facebook because that's a different model. All right. Over there. And I'm going to stay behind so if you want to talk to me, we can do that. What social needs do you think mobile technology is serving good? Is there a limit on which when people, because people's obviously still appreciate face-to-face interactions? So, you know, isn't there an interesting limit to what mobile technology can do to our socialize? Or you think it's going to replace dinners or whatever coffee chance? So what is the role of mobile? Does it replace physical interactions? No, it doesn't. I mean, the use of collaborative software has existed from the beginning of time on, you know, PCs. If you imagine the following, these are phones, think about the tablets. We're getting to a point where people, where kids have nothing but tablets and not the PCs. Basically, every piece of software that you have, I mean, you, we will be seeing them on these mobile devices. And there is just need for collaboration. We work together. We build, we make a video together. We do things together. And if you are, if you need a device, you want to do, if you need software, you want to do it socially. That's how I would think about how big social is. There is interactions with doctors, teachers, all this, and it's like a group of people making a trip to a conference. Everything is social. So we're social animals. So I think that it's big, but it does not replace physical, of course. On behalf of Bases, DFJ and Stanford Technology Munchage Program, I'd like to thank you, Professor Lann for coming out and giving you a wonderful talk. Thank you. Thank you. You have been listening to the Draper Fisher-Jurvis and entrepreneurial thought leader series, brought to you weekly by the Stanford Technology Munchage Program. You can find additional podcasts and videos of these lectures online at eCorner.stanford.edu.