 You are listening to the DFJ Entrepreneurial Thought Leader's series. Brought to you weekly by the Stanford Technology Ventures program. You can find podcasts and videos of these lectures online at eCorner.stanford.edu. We're honored to have Craig Barrett of Intel here today as our speaker. Over 40 years Intel has grown from a startup that helped put the word silicon and silicon valley. To now it's a household name with its products in over half the households in the entire world. Craig Barrett has been part of Intel for 35 of those 40 years. And I'm proud to say that Craig started his career here at Stanford. Where he got his bachelor's, master's, and PhD in material science. After he graduated he stayed at Stanford for another 10 years. We couldn't get him to leave. And taught as part of the material science faculty until 1974 when he joined Intel. He became an Intel Vice President in 1984, a senior VP in 1987. An executive VP in 1990 elected to the Intel Board of Directors in 1992. And named the company's chief operating officer in 1993 and became its fourth president in its history in 1997. And then CEO in 1998 and chairman of the board in 2005. Just an illustrious career for Stanford alumni. Craig retired from the board in May 2009. And with that I give you Craig Barrett. Well, it's indeed a pleasure to be back here. I showed up on this campus 52 years ago as a freshman. And I can tell you a few characteristics about the university at that time. One is there were still trolley tracks from downtown Palo Alto, a palm drive to the campus. You could drive your car and park it anywhere without a parking sticker at that time. And we used to joke and it's probably still true today. You could tell the difference between the faculty cars and the student cars. Student cars were more expensive than the faculty cars. And perhaps even more significantly the tuition was $250 a quarter when I started. I understand it has increased slightly over this time. I ended up in Stanford a little bit by mistake. My life's desire was to be a forest ranger. As I grew up in high school and wanted to be a forest ranger. And I only applied to a couple of schools and I applied to Stanford quite frankly on a lark as I knew I couldn't afford to go to Stanford. But I was accepted and Stanford doesn't have a forestry department as you may know. And so I had to major in something else. And so I kind of chose engineering as as close to forestry as I could get to at the time. But I didn't know what to major in the engineering disciplines. So I asked a good friend who was in my high school math class at Carlmont High School, which is just a six or seven miles up the road from here. What he was majoring in, I know he was going to San Jose State who's going to be an engineer. And he said metallurgical engineering. And I said, that's really cool, Tom. What's metallurgical engineering? And he didn't know either. So my next obvious question was, how do you spell it as one L or two Ls? And he didn't know that either. But I did choose to write down metallurgical engineering on my application to Stanford with two Ls, which is the proper spelling. International NICL company had a scholarship for someone who chose to major in metallurgical engineering. That was probably the only person in the history of Stanford that said I wanted a major in metallurgical engineering. I got the scholarship so I could pay the $250 of tuition, a quarter, and come here. And then that led to other things. So that was the first really serious decision I made in my career was how to spell metallurgical engineering. I came here and I majored in metallurgical engineering. And it turns out that this was near the Sputnik time frame and every metallurgical engineering department, the rule changes name to material science. So I actually majored in material science and the predecessor to the material science and engineering department that exists here today, the other MSE department in the school of engineering. You guys can't figure out how to have unique acronyms for your department names. We wouldn't allow that at a place like Intel. But the second decision that really impacted my career was I actually fell in love with material science. I fell in love with the concept that you could figure out why materials had the properties that they have. Why distill sometimes soft, why is it sometimes hard, why is it sometimes brittle? What gives electronic properties, magnetic properties, optical properties, materials, how do you relate the microstructure to the physical properties of materials? And I was intrigued by this. Probably the thing that really got me going in this area was one day that I had an old 1949 Ford convertible and the owner of this car, part of myself, had modified it such that to get in the trunk there wasn't a key latch and anything to go to. There was a little solar anoid button under the bottom of the car. You had to press and activate this solar anoid and open the trunk and you could get into it. That thing ceased to function and it was the fact that the spring didn't have the right properties inside. It was going to be really smart. And I got out my little propane torch and I heated this copper alloy, spring up and I can tell you it ceased to become a spring very quickly. And I wondered why that had happened in my whole life and then I got in material science was able to figure it out. But a major in material science fell in love with it, had the opportunity to get three degrees here and then go to Europe and a NATO post-doc fellowship and come back here and teach for ten years, which was magnificent time. And when I came back and was teaching and this was 1965 now to 74, something else was happening here and that was Silicon Valley was being created. It was a semiconductor industry which at that time had worldwide sales of about a billion dollars. And so it was relatively small but it was centered to a large extent here in the Valley as fair child, national, a few other companies were growing. And one of the things I learned very quickly was in fact that material science was kind of at the core of all of this semiconductor processing, semiconductor technology. It was really microstructure, complex structures you made in creating transistors and properties and turtles. So I did a little bit of consulting with some of these companies and I can remember spending many long hours in the Peterson building which is, where is it, it must be over in that direction somewhere. And the X-ray lab there and doing X-ray topography which is a very simple imaging technique to image defects in silicon vapors and you can map out entire silicon wafer. People were interested in the introduction of defects into their processing technology and the function of thermal cycles and chemical doping and all that things. So I did quite a bit of consulting and met a lot of people in the industry. And one thing led to another and one day someone phoned me up from Intel, one of the gentlemen who I had met at Fairchild and he was looking for a ceramic engineer which I was not but we also had no ceramic engineers in the material science department. Still pretty much a metallurgical engineering department. And I said well we don't have any of those that you're looking for Jean but how about a frustrated associate professor who would like to do something else so there's life and teach because my interest had kind of migrated more towards application of technology. So I ended up at Intel and I leave of absence and ended up there for 35 years. And there are two things that occurred to me at Intel. One was a continuation of the observation I had made when I was at Stanford consulting for the semiconductor industry which was that material science was kind of at the basics of all of the things going on with semiconductors, the manufacturing, the technology, the printing smaller transistors, the lithography, etc. And the other thing that I found quite intriguing was in fact there was this thing called Moore's Law. And how many of you have heard of Moore's Law? How many of you read the original article in 1965 in electronics magazine? That's kind of what I thought about one. Anyway Gordon Moore was founder of Intel but he really had written the paper about Moore's Law when he was a fair child and is really at the head of their R&D effort there. And I just noticed that integrated circuits started in about 1960. It was now 1965, five years later. He noticed a certain trend and if you're part of the number of transistors per integrated circuit over a five or six year period it looked like it was a log plot or a linear plot in a log scale. So it kind of meant that you were doubling every 18 months or so in terms of transistors and transistors related into functionality performance a whole bunch of other things. And if you read the article it says very simply hey I've made this observation it can't possibly last but it's interesting that it's gone so far and maybe it can last for another five years or so but it nothing continues to double for very long in nature. And I then had the pleasure when I was working at Intel interacting with Gordon Moore for 35 years and every year I would ask him about Moore's Law and every year he would say it's going to die soon and we are now you know 40 some years later and it's still going and it's pretty cool that it looks like it's going to go for another 15 years or so. So Moore's Law will probably end up having 60 years or so of history before you have to change that basic transistor structure. And it will change. There's no question about that just as vacuum tubes kind of died when transistors came along. Transistors will die when the next electronic switch comes along. We just don't know what it's like you're doing lots of research here at the university on that it's a great entrepreneurial effort something will have to happen. But Moore's Law is very interesting and the pursuit of Moore's Law has been interesting for the last 35 years. I have to take you back a little bit to the founding of the semiconductor industry and it turns out it was founded by a bunch of chemists, physicists and electrical engineers and I don't want to demean any of those categories of people because they're probably represented here in the audience for some degrees. But I can tell you almost uneprivically that most of the folks that I dealt with in the early days of the semiconductor industry had no idea of material science had no idea of the relationship of microstructure to properties and what could happen. So if you happen to be a material scientist and you know about dislocations of vacancies and diffusion and phase equilibria and all these cool things that we study in material science you could be a superstar in the semiconductor industry. Besides that I got in condom to writing a textbook when I was here, the principles of engineering materials and so I got to go to Intel and they thought that I knew something. I didn't know very much but I knew at least a little bit about material science and so it was a really fun time. Now what's Moore's Law and what to do? It says you double something every 18 months or so. You double the number of transistors in an integrated circuit. When I went to Intel in 1973, 1974 the state of the art circuit was something called an 1103 which is a 1K dynamic RAM, 1000 bit and each bit was basically a capacitor. So it had about a thousand capacitors and a little decode circuitry on the edge. Roughly a thousand transistors or so. And today we have a couple of billion transistors. So we've increased the functionality quite a bit and as I said you get another 15 years or another six or seven doubleings and you can take yourself up well beyond a billion transistors or so functionality. And along with the functionality you've got all sorts of devices, you've got dynamic RAMs and static RAMs and CMOS clock chips and CCD type devices which are really imaging type devices and then you've got microcontrollers and microprocessors and all the analog circuitry. So incredible functionality increase over that time period. But also pretty interesting along that time period is you scale transistors down, everything good happens. They get faster, they consume less power, you can pack more of the men, you get more functionality. So it's really kind of a self-fulfilling cycle. The other interesting thing is when I joined the industry the manufacturing plants that we had were considered to be fairly sophisticated. They cost a couple million dollars. Today our manufacturing plants are pretty sophisticated and they cost several billion dollars. So we've scaled up the cost of the plant very substantially over that time period. It's roughly a thousand fold increase in the cost of the manufacturing plant. But if you look at the underlying cost aspects of this technology, the cost to create a square centimeter of silicon in 1970 is about the same as the cost to create a square centimeter of silicon in 2009. It's a couple of bucks a square centimeter. So in 1103 that 1K dynamic RAM I mentioned that they were producing in volume and didn't tell when I joined it would sell for three or four dollars. And today you can make a microprocessor or microcontroller with maybe a hundred or several hundred billion transistors to sell for exactly the same amount. Now how did that happen? How do you get a thousand fold increase in the cost of the plant and the cost of the output stays the same and absolutely the dollar? That is pretty easy. This is all you went from very small wafer to very big wavers. So you got roughly a 10 or 15 fold increase in the area that you process on each wafer. The yields went up by a factor of 5 or 10. The throughput or the size of the factory went up by a factor of 10 or so. So you got three factors of 10. You get a thousand fold increase out of a plant that costs a thousand times as much. It translates to absolutely anti inflationary static cost. If you want to relate the cost of processed silicon to something it's roughly the same cost as real estate in Tokyo. And you calculate a square foot of real estate in Tokyo. That's about what a square foot of processed silicon costs you. That was really when Tokyo was at its high point from a real estate value. But it's quite an amazing feature that you can have that same cost for that same unit area of silicon. Every 18 months or so you're able to cram twice as many transistors into it and get twice the functionality into it. We've now been doing this for 40 years or so. That's been quite an accomplishment I think for the industry. Now, I mentioned before that when I joined Intel it was populated by a lot of physicists and chemists and engineers in general. And they were great technologists and then then it also sort of new circuits, new devices. But frankly, we in the initial stages of the company were not very good at manufacturing devices. We were great technologists and we were bringing new circuits into the marketplace. And we'd make a few of them and we'd make some money on the first few that we sold. And then other people would come along and manufacture them and give us stiff competition. And the only way we were able to survive is continue to go to the next generation of devices, the next generation of technology. And the Japanese based companies were especially competitive in this respect. They had really learned how to manufacture in volume. And we're very cost effective and high quality in their manufacturing capability. In fact, in the year now, 25 years ago in the mid 1980s, here at a time frame when the Japanese based companies, NEC, Toshiba, Fujitsu and others were really, if I can use an indelicate phrase, kicking, but really taking it to the American manufacturers. Companies like Intel were in serious trouble at that time. In fact, I can remember very specifically at time frame when many noted academics, I don't think any here at Stanford, but certainly a lot at Harvard. And on these coasts, we're telling us at Intel that you guys are crazy to be in the manufacturing business. You ought to just design circuits and leave the manufacturing to someone else because you will never compete with the Japanese based companies. And that was in about 1984, 85, that this pronouncement was made. It also is when companies like Intel were starting to lose money because we could not adequately manufacture devices. So our company was faced at a serious decision at that point in time. What do we do with our future? Do we follow this academic advice and get out of the manufacturing business and just become a designer of circuits? Or do we, in fact, try to become a manufacturer? We actually chose the latter approach. And I can remember leading airplane load after airplane load of our executives and our people to Japan, touring Japanese factories, talking to them about manufacturing technology. Seeing what they did on their manufacturing floor. And after about two years of that, we went into a huddle when we concluded that they weren't doing anything very sophisticated or anything very secret. They were just applying good engineering principles and engineering discipline, statistical principles and statistical control discipline. And they had set a series of high expectations on what manufacturing lines could produce. So we came back to the US and committed ourselves to that training entire company on statistical process control design of complex experiments. All those sort of things that are good engineering discipline, but we're lacking on the manufacturing floor. And by 1988, 89, 1990, we had improved the situation quite dramatically. And probably one of the most proudest moments of my professional career was when after having visited Japan about 20 times to learn how to manufacture in the mid-1980s, we had a constant flux of Japanese executives who intel headquarters to see how we were manufacturing in 1990. We had completely turned the tables. And so that's really the company became, I think, noted as a manufacturing powerhouse of sorts. But it was really the application of engineering discipline and engineering principles to the manufacturing floor. And it was not the sort of thing that scientists and engineers automatically bring with them out of school to a manufacturing floor. But we'll get a little bit to that later on. One of the topics that we became known for in that time was something called copy exactly, which was the fact that we had half a dozen big manufacturing facilities. And each one of them had a plant manager. And each one of them was really king of their domain or queen of their domain, looking at the audience. And they had absolute rule over what went on in their manufacturing plant. A little bit like a department head here in the school of engineering. I presume that you have absolute rule over what goes on in your department. Of course, at least you think you do. But the problem we had was we have the six manufacturing plants, nominally running the same technology with different sets of equipment, different processes, different recipes. And if you ever tried to move a product from one plant to another, it was next to impossible. And these people, none of the plant managers were willing to give up their autonomy or their control. So I can remember a meeting that we had one day where we had there were 21 senior manufacturing executives at Intel. I was running manufacturing at the time and I called a meeting and I projected that we would change the way we would do business in the future, rather than having independent factories. We would have very closely linked factories. Every factory would look the same, would run the same recipe, have the same equipment. And I was basically telling the managers who were there that I was taking a lot of their authority away from them. And one of them raised his hand and basically said, you know, this is a different style of management you're suggesting Craig. Do we get to vote on it? And having counted the number of participants in meeting 21 as they walked in the room, I said, yes, we're going to vote, but I have 22 votes. And that's how this concept which has given some notoriety called copy exactly, which is every one of our factories today looks the same, has the same paint, the same tile, the same air conditioning, the same equipment, the same recipe. And they all operate absolutely identical. It drives a lot of our people nuts because they think that you should be allowed to twist knobs, to optimize at the local level as opposed to running a common recipe across the board. But we kind of do it the McDonald's way, you know, if you go to any McDonald's around the world, the French fries all taste the same. If you come to any Intel facility, our products behave the same and our manufacturers the same look and easily transmit them from once one area to the other. So along this 20 or 30 years that I've tried to capitalize where there were really three things that I thought were very, very important. One was Moore's Law and Moore's Law has been the roadmap for our industry. It's run since 1960, so we're approaching 50 years. It's not a law, it's an empirical observation, but it is the roadmap. And it is so ingrained in the industry that in fact people are fearful of falling off of Moore's Law's extrapolation on their watch. You know, the senior managers all say it's not going to die under my watch. And the new young engineers we get into the company don't know any better and they think it's going to continue forever. So for the last, probably the last 30 years we've been saying Moore's Law is going to last another 10 or 15 years. We'll still say that today. It'll be wonderful to come back in 10 or 15 years and talk to you again and see where we are in that respect. But Moore's Law has been the direction dictating the industry forever. Now, there are a lot of naysayers to Moore's Law and they usually fall into one of two categories. They either fall into the category of financial analysts and the press who haven't a clue about the industry and a clue about the technology. And they all say, well, this can't continue because nothing continues to double. Besides, it costs too much to do that. And I told you the thousand fold increase in our manufacturing plants with these guys don't ever recognize is you get a thousand fold increase out for that extra thousand fold increasing putting the cost. And the other category of naysayers are competitors who don't like to spend money who would like to just put a manufacturing plan in and then run it like a petrochemical plant or a power plant that is amortized its output over 20 years rather than having a two year cycle of technology. But the leadership companies in the world have adopted Moore's Law as their technology strategy, their technology roadmap. And we do all sorts of things to perpetuate it, including a lot of research in universities like Stanford. They help drive that forward. The other thing that I think has been cost in the industry is when the engineering effort that's involved to follow Moore's Law. And it's all sorts of engineers is not just material scientists, but chemists, physicists, mechanical engineers, computer scientists, double ease. To go from a thousand transistor device to a two billion transistor device is not a trivial effort. We used to design devices with two people. The first microprocessor was designed by basically three people. And then a half a gene and a stand mazer. But today, one of our microprocessors may take a team of 500, 600, 700 engineers to do the physical design and layout. And then you have additional hundreds of people are doing the simulations and doing the verification at the end. And then you can see that the engineering is not just a computer, but it's all predicated on strong engineering talent, which is why we hired essentially the only masters and PhDs into the company to come in the work as engineers. And the third thing that has driven the industry very simply is the usage models. And you are all familiar with the usage models. These age models are PCs and then various varieties of cell phones or smartphones like this buckberry device. And the fact that you are selling hundreds of millions of PCs a year and a billion or so cell phones or handheld devices a year consumes an immense amount of silicon. And I want to just stop for a moment and personally thank all of you in the audience because you represent the generation that says you don't have enough processing power I want more. You don't have much communications capability I want more you don't have enough imaging capability I want more. You are really at the lifeblood of driving our industry. So thank you for that. But it is really that usage character six and the invention of the internet or the deployment of the internet kind of helped along the way because that's allowed electronic communication to you know you can sit beyond a terminal and reach a billion people easily. And when I was in your position sitting in this room, you know 40 or 50 years ago I mean we had mammograph machines and we had handwritten documents letters back and forth and we had telephone calls on us about all we had. But everything has changed and that usage model has really driven capability along with Moore's law and all the engineering talent that went into that. So enough of history let me let me transfer. Provisition myself to just give you five simple bits of advice and then try to take your questions and these are bits of advice that I've noticed in the industry and 35 years or 40 years of watching the industry and going through 11 recessions. Not as all severe as this last recession or as severe as a dot com bubble of 2000 but we've had 11 or so full blown recessions in the electronics industry in the last 35 years. The first is very simply there is no replacement for sophisticated problem solving methodology in life. And you can describe problem solving methodology in a whole bunch of ways but engineers are good at problem solving because that's what you do. And there's perhaps also is the reason why if you look at the most common educational background of Fortune 500 CEOs it's not law it's not business it's engineering. So I think the training that you get at a university like this in problem solving is absolutely fundamental to success in life in whatever you choose to do entrepreneur effort work for a big company whatever it is. And problem solving methodology whether it's a plan do check a cycle like Walter Schubert proposed in the 1920s and is still very valid today or just getting people to agree on the definition of the problem or trying to solve is one of the most important things you can do in all business world. If you don't believe that the case just look at the health care debate in Washington DC today and try to get any two of our elected representatives to define the problem they're trying to solve and you find that none of them will be able to define the problem and if they do define the problem no to will define the problem the same way. So problem solving methodology and getting a common definition of where you're trying to go is absolutely critical. By the way you learn little tricks along the way like if you are faced with a problem in life or in business or in technology just start asking why it's impossible to not get to the root cause of something by asking why four or five times. But you have to make sure that you don't get a bullshit response along the way and people always give you answers which are related to not the fundamentals not the root cause but they'll talk about something perfectly and say no no why did this happen and then you give me an explanation why that okay what caused that to happen in this way. So you ask why about five times you do very well. Another fundamental business tenant I think is always changing the rules. Often people feel that they are captive to the environment that they find themselves in that they have to continue to do things in the same way but quite often you can just artificially change the rules. And if you change the rules that quite often will give you a heads up in the world and I'll give you one very simple recent example of changing the rules. How many of you have an iPod? What did Apple do to make the iPod so successful when the generic MP3 players around everywhere. They changed the rules by all of a sudden making downloading music legal with iTunes and so now you could buy a device. You could go to their website you could download music legally or illegally but they changed the rules and how MP3 players were sold. And we are an incredible success and they also had great industrial engineering and you know one thing with the Steve Jobs and his team is fantastic is the user interface and the industrial engineering that goes into that user interface. But they basically changed the rules of the device. Have you heard of a company called Nokia? What did Nokia do to change the rules? So this happened many years ago when a company called Motorola was the premier communication company in the world. It was still selling analog cell phones and Nokia decided there's an opportunity here. Nokia had actually done some work in computers and they were digitally literate and they said probably digital communications is going to be more important in the future and analog communication. Motorola sat on the old analog systems for a long time. Nokia moved over the digital side, changed the rules of the game and you look at their relative positions in the market today. It's really related to that decision they made at that time. And you could go on and on. Kodak, how many of you have heard of Kodak? How many of you have a film camera that you use? What's the matter with you two guys? Kodak, bless their heart. They did recognize that the rules were changing around them with digital photography. But they were really wed to their business model which was film and paper business model. And they let the environment change around them and Kodak today and Fuji as well are near shadows themselves. Because they didn't change the rules, they let the rules change them. Companies like Intel, we've done lesser things along these lights. How many of you have ever seen an Intel inside logo? It's probably the most successful ingredient branding program ever in the history of the universe. It changed the rules. Intel, we don't interface with anybody who buys our stuff directly. We do it indirectly. To deal with them indirectly, we had to have an indirect advertising marketing branding campaign. Intel inside working through computer manufacturers. Change the rules gave us a leg up competition. We also at one time, and computer companies in the US and around the world found themselves to be kind of continually outsourcing their engineering and doing less and less R&D. To move the technology ahead, computer technology ahead, we found that as manufacturers of microprocessors, it was important for us to do their research for them and then give them that research for free. How could we sell our products if they weren't going to do the research in the engineering and the next generation computer? So we created something called Intel Architecture Labs which was basically an Intel Finance Computer Industry Research Organization. Doing research for the computer industry as a whole. And lots of examples that you can go through in that area of changing the rules. Anytime you can change the rules ahead of the competition or change the rules before they get changed on you, well, do very good things for you in the marketplace. The third observation I have is no matter how big your company is and how good you think you are, you do not own all the smart engineers in the world. Lots and lots of smart ideas and smart engineers that don't work for you. So how do you capture their talents? How do you use them? We talked about this a lot internally in the early 1990s and said, well, one of the ways you can do that. And one of the ways you can use all that smart engineering talent to your advantage is in fact to become the world's largest high tech venture capital company and to fund research and startups in your general computer internet area that complement your own work. Intel is today the largest high tech venture capital company in the rule of billions of dollars in our portfolio and hundreds of companies in our portfolio. And the process of thought there was simply a lot of bright engineers out there. We would like them working around our general space creating technology into the marketplace that compliments our own to grow the market so we can grow our sales of microprocessors. Again, it's kind of a change in the rules of the game but also recognizing where the talent resides. And we also recognize not just Intel but the industry as a whole that universities like Stanford and Berkeley and Michigan and many others are top flight universities with great researchers. And that's why we put together basically a hundred million dollars a year where we fund university research activities to complement our industry to make sure that Moore's law continues to move forward. But it's that basic concept that you're not an island. You don't own all the resources you need to figure out how to make use of those resources to your benefit even if they don't work for you. And if you're if you make intelligent venture capital investments you not only get the output of those people but you get the benefit of in fact their success that flows back to you as the equity investment you've made in them. Along those lines I'm always drawn by the power of universities like this type to be disruptive influences on industry. And the way I usually like to describe this is Intel Corporation has our D budget of about six billion dollars a year which I think is even bigger than the Stanford School of Engineering research budget. Microsoft has a budget probably of seven or eight billion if there's a Microsoft person the audience you can correct me but in that range slightly more than Intel. And every time I look at those two companies and I'll pick Microsoft as an example here and look at the challenges that those companies have with their huge R&D budgets. Absolutely huge R&D budgets. What are the life threatening challenges that occur and where do they come from? And the life threatening challenges the Microsoft have not come from IBM or Hewlett Packard or SAP or Oracle or any other big company with a big research budget. But the three near death experiences for Microsoft came from one or two researchers at a university with a bright idea. Netscape, Internet browser, University of Illinois or the Illinois super computing consortium whatever was called and Yahoo Stanford University, Google Stanford University. Each one of those instances was one or two graduate students, bright engineers with a bright idea able to challenge a company with a multi billion dollar research budget. And that's why I think research universities like Stanford are so important and that's why it's so important for companies to maintain good relationship with you guys. And we're going to be able to do eating or lunch routine basis. We'd like to have access to your ideas before you take them out in the marketplace. But the individual idea is in fact really the key strength around the world. And there's no underestimating the value of the single smart idea. We've gone the largest corporation and bring it to its knees almost overnight. And it doesn't take a big research budget to do that. I want to say one other thing about if any of you aspire to become an executive in a company someday. Start growing the thickness of your skin right now. You will be a constant target for commentary from two directions. One is the press and the other of the financial analysts. And I don't want to sound defensive, but neither one of those categories of people knows anything about our industry, but it never hesitates them from writing about our industry in a continuing basis. I'll give you two examples. By the way, there's a standard rule in the industry if you're a CEO that you're never as good as the press says you are and you're never as bad as the press says you are. When they're saying good things about it's really cool and they say bad things about you does get under your skin a little bit. It helps to have thick skin. But two really simple examples from my own personal experience. One was in 2000. There was something called the dot com bubble burst when valuations of companies like Intel went from three or four hundred billion dollars to a hundred billion. Microsoft did the same thing. Cisco did the same thing. Every company lost about 75 to 75% of their capitalization and dropping hundreds of billions of dollars in the marketplace almost overnight is not a good thing for your shareholders and not a good thing if you're CEO at that time. But what we did at that point in time is we thought we understood our industry better than the financial analysts who are saying you guys are dummies don't you understand there's a recession don't you understand demand for your product just dropped you should have big layoffs you should stop capital spending you should stop investing in R&D you should just recoup. You know go in a corner and sit there until things get better and we said no no no we follow Moore's law and what is Moore's law says is new technology every two years and double in a capacity and besides that Gordon Moore our founder uttered a famous saying one day which says you can never save your way out of a recession. You can only invest your way out of the recession because the only way to get out of a recession is with new products and new technology so how do you get new products and technology it means you beef up your R&D budget you beef up your capital budget to be able to produce that new technology. So for 2001-2002-2003 the press and the analysts had an easy target to shoot at it's Intel and at CEO for this ridiculous fact that we increased our capital spending and our R&D spending and the worst recession our industry had ever seen. 2004 everything turned around and we had one micro second of glory when they said you know we've been criticizing Intel for the last four years or three years on their stupid decisions turns out they were right. So okay Intel now they turn around and started criticizing us on something else the next day but you have to get used to that and have kind of a thick skin associated with that. The other area that associated with the dot com bubble collapse was well industry valuations what way up and a lot of people in the industry went on acquisition sprees because it was going to be no end you know the internet traffic was going to double every 30 days which was the common. I did that point time so telecommunication sector was red hot electronic sector was red hot and Intel did a series of acquisitions and we bought about $10 billion for the companies our market value at the time is about $400 billion that works out I think about 2.5% of the market cap of the company went into acquisitions it was kind of a a de minimis trivial amount if you were managing the company and saying what's the big deal but the press and everybody said yes this can't believe this they spent $10 billion on acquisitions and what do they get for it never pointing out that in fact it was a 2% of the value of the company and we were required technology to make the company successful in the future grow a thick skin it's part of the management deal let me conclude very simply following which relates to what you're doing here and relates to international competitiveness there are only three things any company or any country can do to be competitive and you're part of two of them what makes companies and economies and countries competitive is smart people people with good education that can add value to what they do that's why you're here smart ideas and that's the R&D budget that is creation of the ideas for the next generation of products services companies startups and then the right environment to put smart people together with smart ideas and you actually see some of that here in Silicon Valley although perhaps less and less as we go forward what happened in Silicon Valley was that you had smart people and smart ideas coming out of Berkeley and Stanford and elsewhere you had venture capital money here which was funding startup companies venture capital basically started here the Valley Act back in tail was the first I think officially founded company with venture capital from a guy who still does work in San Francisco or the rock but you had smart people smart ideas and the right environment for people to invest in the world and the right environment for people to invest in innovation so if you're managing a company smart people smart ideas and the right environment to be successful if you're president Obama and managing the country it's smart people smart ideas and the right environment to get people to invest in innovation there's no other formula that works I think by and large a lot of the high tech companies have done it right over the years I'm not so sure about it about Washington DC with that I'll open it up to any questions you might have. So correct thank you as I mentioned that some of our audience knows part of this audience is our MSME 278 class the spirit of entrepreneurship which surrounds this class and they get the first couple of questions so I will read them I'll translate them and then we'll open it up to the rest of the audience you alluded to in fact a couple times in the speech the importance of a educated workforce to Intel and I know Intel under your tenure had a even more sharp and focus on education you know now that you're out of Intel what would the three things you would change about education in America if you had a magic wand? The three things relate not to university education a university education I think works perfectly well for all the reasons that public education does not work well you get well qualified teachers or faculty in universities you set high expectations and you have feedback loops feedback loop is if you have a researcher and you can't get research funds in the university that's a feedback loop which you would understand if you look at K through 12 public education in the United States it suffers from a lack of quality that's teachers. In fact if you look at math and science teachers across the United States the probability of getting a math or science qualified teacher is you know 60 or 70% at best and I'll let the audience do the mathematics if you need to have 12 good math teachers in a row in the probability each year of getting a good math teacher is 70%. It's a near perfect filter you can do the math it's 0.7 to the 12th power it's less than 1% chance of getting 12 good ones at a row on average so you need better teachers especially from math and science you need higher expectations we have dumbed down the education system in the United States if you look at nearly any state that has an exit exam for high school graduation there are joke they're designed on 8th and 9th grade and you guys have taken them you know how bad they are. So we've dumbed down the expectation level and then as far as a feedback loop or have a system responds president Bush tried to institute one of the simplest feedback systems a real cold no child left behind which is just a study of our kids succeeding our teachers succeeding our schools succeeding our administrators succeeding you know if you're an engineer and you run a company you don't do things without measuring things you don't make this a lot of things. So you can do decisions without data and CLB was an attempt to make data available so you make decisions so if you look at K through 12 basically poor teachers low expectations and no feedback loop other than that is some great shape. I'm glad I have. The next question actually was focused on your career path most way through it you were running manufacturing or in the manufacturing side but when you became president CEO and chairman of the board you had to make allocations between investments in the process side investments in the product side in architecture how did you tell think about that balance of constantly having to renew capital investments in the process. It's a challenge if you if you choose to rigorously follow Moore's law which is two year cycle on process technology which means you have to redo your plants every two years big big ticket item. The thing that we've done is we first of all we do the financial analysis doesn't make sense to follow Moore's law and unequivocally it always makes sense to follow Moore's law that doubling you get in capability more than pays back for the cost of the investment. The other thing we did is to make sure that everybody in the company understands that the success of the company is more slow. You follow Moore's law you have leading technology leading products you're successful if you don't you're not. So when we get in tough times. There are two things that we don't touch or cut the R&D budget. And the manufacturing capital budget. And even though we're laying off finance guys and marketing guys and gals and human resources people who are never cutting those two items because everybody in the company knows the only way the company is successful the only way my stock option is worth something is in fact if we're the technology leader can't be the technology leader unless you invest. So it's never any animosity. Never any second guessing you got to keep the R&D budget whole and then the investment in the new technology. And last question from the last question from the class and then we'll open it up to the audience was given that every generation of computing platforms seem to switch processor technology. Mainframe to many many computer to desktop Intel on the desktop and the mobile platform now emerging. How much did Intel worry and how much investment was it that Intel was going to break the mold of some new entrance owning mobile rather than Intel? Well we in fact concentrated heavily on computing side. And you know we kind of flipped that trend that you mentioned on its head it used to be there was a different technology for mainframe different technology for minis and servers and different technology for desktops and laptops. We find that turned that around there's a by and large a common architecture now with some exceptions everything from the smallest laptop computer up to the biggest you know petaflock machine super computer. It fortunately is mostly built on our architecture which is nice and other people have experienced negative that we quite frankly did not pay much attention to the cell phone industry for really for two reasons. One is we were concentrating on processing power because that was what was driving desktop and big compute and processing power carries with the burden of electrical consumption and that's contrary to what you have in cell phones. So we didn't focus heavily on the low power devices and much of that market got seated to arm and other architectures. We're now more serious about going to low power Intel architecture devices and going after that market but we didn't pay much attention to that for an extended period time. By the way the other reason we didn't pay much attention to it is that during that time frame the 1990s in early 2000s the average selling price for an Intel microprocessor was you know 150 to 200 dollars the average selling price for an arm processor to go in a cell phone was five bucks. It was not a difficult decision to make. Let me open it up to the class in the back. How did you convince the Japanese electronics manufacturers to let you come in and observe their process? It was a combination of things really. First of all the industry is pretty open to that and those sort of visits and I think the Japanese were incredibly proud of their capability and didn't think anybody else could copy it and so we're proud to share it. The other thing you have to remember is there was maybe don't have to remember because you're not that old but there was pretty much of a trade war going on between US and Japan at that time and I think the Japanese folks were trying not to exacerbate the nature of that trade war by being open and inviting people into their country. But they were very open and sure and much as we were when they came back to this the desk later on. Next question. Why do these vehicles dig at the end of what comes after most of them? The biggest death threat is that as Andy Grove would describe it only the paranoid survive so the death threat is that you lose your paranoia. You stop the relentless advancement of Moore's Law and technology. Every time we have had problems in the market it's usually not so much competitive threat as it is we did not meet our own plans. We had a development program that didn't meet its criteria for some reason. So usually we would say our biggest challenge is our own ability to do what we plan to do. What comes after Moore's Law? That's for you guys to figure out. I think Moore's Law is good for another 15 years. I retired in May. You're just starting your professional careers at your challenge. What comes after Moore's Law is pretty critical. A switch is going to replace the transistor. And the question is what switch and nobody has decided that yet? Yes. Following up on that point I was curious what you thought the role of the Internet distributed computing and that it computing is going to be playing towards moving beyond physical limitations. Well there's no question that everything from the Internet which was a huge driving force for computing for every reason possible. Also gives you the possibility of a more distributed computing capability cloud computing and all that. But I think fundamentally what you have is the human desire for a personal computing element. That's why a PC is called a personal computer. It's not a dumb terminal like the PC replaced. So I don't see us going back to dumb terminals which are always have to be connected to do something. But you will see consolidation of server farms and things like that for higher utilization of that resource for sure. I might have been self-carsers and everyone uses them but then you also like competition. So another use concern competition in this space for your Denmark. And I think of Americans I think of them as very competitive but in US space the desktop space that we actually know competitive because you've been so good. Do you think competition should be more competitive and how would you want to stimulate some thinking because sometimes everyone is like, I'm not quite sure how to phrase this question. Well, we'll forgive you from Europe. You know the American antitrust issues are designed to protect the consumer. The European antitrust laws are designed to protect the competitor, not the consumer which is why we have problems in Europe because Nelly Crowes and the competition commission are designing their data. So we have a lot of different decisions and their actions to protect competition. That's point one. Point two is if you look at this industry from any objective measure it is the most anti-inflationary, most competitive industry known to mankind. If you don't believe that go to the Department of Labor which tracks 1,400 commodity devices including one of those 1,400 is a microprocessor. We have, well, and we compete fiercely and have done for 25 or 30 years. And you know it's every time I hear that question in one form or another I think back okay, we've been following Moore's law for 50 years. How much more competitive can you get? Moore's law is actually we're kind of speeding it up rather than slowing it down. And that is because of the inherent competition in the industry. Ergo, how can you say there's no competition? I tried to say that to Miss Crowes to no avail. Let's take two more actually one more question and right back. So you mentioned that engineering discipline was critical to Intel's success in manufacturing. Could you give an example of what you mean by engineering discipline? Oh, very simply if you look at a typical process technology where you take a bare silicon wafer and turn it into a high performance microprocessor, probably 200 manufacturing steps or 200 variable steps involved in that. And the control of each one of those steps, you know, it may be that you're laying down a thin gate oxide and it has to be four monolayers plus or minus zero. How do you, and this is not kidding. And that's what you're doing across a 12 inch diameter wafer. Now how do you achieve that? How do you measure that you're achieving that? How do you measure that you're in control? If you want to change one of those 200 variables, how do you do it intelligently when natural drift and some of the other variables may be bigger than the variable that you're changing. So how do you design the experiments with that many variables to make sure that if you change something, you really have the right answer associated with what you change. And you can then just take it to the more mundane stuff of scheduling. It's a batch processing industry. How do you schedule effectively to get maximum utilization of your multi billion dollar resource? Every step of the way is engineering discipline associated with it. So correct. Thank you very much. You have been listening to the Draper Fisher-Jurvis and entrepreneurial thought leader series brought to you weekly by the Stanford Technology Ventures program. You can find additional podcasts and videos of these lectures online at eCorner.stanford.edu.