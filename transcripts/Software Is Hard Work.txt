 Who you are defines how you build. This is the OddPattern thought leader series brought to you by Stanford E Corner. On this episode, we're joined by Edith Harboff, CEO of Launch Darkly, a platform that helps software teams make data-driven decisions about software functionality. In March 2019, Edith led the company on a $44 million series C funding round. Here's Edith. Hey, it's great to be here. Thanks for having me. I'm Edith Harboff. I'm CEO and co-founder of Launch Darkly. We are a feature management platform and we actually have a thousand customers now. Stuff moves rapidly. And we have names, even if you haven't heard of Launch Darkly, I hope you will have heard of Atlassian into it and BMW, who are some of our customers worldwide. We're a new category. What we say is that software powers the world. We power all teams to deliver and control their software. One of the things I'm most proud of as an engineer is that I get to visit customers all over the world and I go and talk to their software developers and they talk about how Launch Darkly has made their life better. Like made a material difference in their happiness. They say with Launch Darkly that they have less trust for releases, we save their weekend because when something broke, they can just turn it off instead of having a scramble and do it off-fix and they say that they get the right feature to the right person at the right time. This is an engineer. It's pretty much all you want. It's a feel like you built something great and that people appreciate it and love it. The other thing I get more and more proud about as time goes by is every time we hire new hires we have, I call it, culture and values, which is if you're a new hire, you spend an hour with me. And the reason why I do this is I think that culture is only as strong as the most recent person you hired. There's everything that you know, all this tribal knowledge, facts, fun history, just why something happened that the new buyer has absolutely no idea. Like all the jokes that you think everybody just gets like, oh, there's a pool on the roof. They don't get it. So with all the new hires, I sit them down for an hour and I say, this is your time to talk to me. I'm going to walk through the history of the company and you can ask me anything, just don't tweet it. You know, this is your time with me. And the thing that touched me really deeply is I was telling them about how happy I was about how LaunchDarkly was changing the lives of people, of our customers. And a new hire said, you know, the reason why I joined is because the person who interviewed me, LaunchDarkly Longtime employee, said it had changed their life for the better. So employee engagement is something I play a lot of attention to that are employees, say consistently that LaunchDarkly is a great place to work. That feels really good. Okay, this is me. This is all the great world now. 20 years ago, I was a graduating senior and I had no idea what I was going to do. And that's the journey I'm going to walk you through today is going from somebody graduating in 1999 to now. So in 1999, I was a Harvard Mid College graduate in engineering and I really wanted to work at a startup. Like I wanted all the things I just described. I wanted to work at a passionate team that was building something really cool with people I really liked working with. So I went and interviewed at a couple of companies. One was a six person company that I thought would be pretty cool. And they said, well, you don't really know anything. You know, you're, you know, this kind of went behind the ears, you know, 20-year-old, but I was like, can't really disagree with that. And I went and interviewed at another company which was this high flyer at the time called sciat, which did dot com consulting and they're also going, no. The job you want does not always want you. And this is the number one takeaway I hope you all have is that just because you don't get the job you don't, you want out of college, life still goes on. You're getting a lot of notes. So what I actually did is I went to work for a 30 person consulting shop in Oakland. And what we did is we would go out to like a big insurance company and this was before there was Web 2.0, this is Web 1.0 and we didn't even call it Web 1.0, we just called it dot com. We weren't big with numbering back then. And we would consult with them about how to get more modern and get on the web. It was my first drive out of school and I was absolutely miserable. And I had a really hard time ticking a part whether I was miserable because they just didn't like working or it was miserable because it was the kind of place where I would be sitting at and make a computer and somebody would walk in and rip a laptop off a desk and say so and so quit and then I fired them. And I was like, oh, this is not a great environment. So after about five months, I too quit. And that was really hard because as Robbie said, I like sticky with something. So the lesson I had to hope you take from this is if you're really, really miserable at a job, it's okay to quit. It doesn't make you a failure. So then I went to work at a flashy skyscraper downtown in San Francisco where I did the opposite thing before we were trying to get old companies modern. Now I was a dot com consultant and there would be these bright Stanford MBAs who had funding and they would hire us to go actually build the product. So there was this idea back then that like all you really needed was the idea and then you would hire a consultant firm to build the actual thing. This was great. I had a blast. Like I was taking the train down a mountain view. I was hanging out the soft bank incubator. I was like, this is kind of finding the life I want to live. You know, I went out to the Pac-Fell Park, they called the Pac-Fell Park back then. And they had a box where the owner of the company took us out and then he drove me as Porsche and kind of crammed the back seat on the front to the bar station. I'm like, wow, this fun ever stop. He's like, no, you know, we write off the box's entertainment expense. The fun will never stop. That was baseball season. Thanksgiving that year, the dot-cromb crash has started. So all these startups at Stanford MBAs had gotten money from a lot of Silicon Valley names, you know. And the bottom fell out of the market. Like all these bright ideas were just kind of propped up by hope. And when the money's big, it turned off, all the people who used to pay us money to build their ideas didn't have that money anymore. So I got laid off, I think around December. And this was pretty hard. I was like, wow, I've been out of college a year and three months and I've had two jobs. I'd like to go to a holiday party once. So then I found my third job. A friend from the first job referred me and I went to work for a company called Epicentric. And this is I think is where my career really, really began. Epicentric was a software company that was building something called Portal Software. It was a new category. It was really fun. It was an engineering and it got to build these new systems. I got to see what it was like to actually run a release beginning to end. Before I was a consultant where you kind of came in and built something to the left. When you're actually building a release, you learn all sorts of stuff. Like how does scope requirements? What happens when you miss scope requirement? What happens when you over-skip a requirement? What happens when a release goes really, really bad? What happens when two teams build APIs that don't talk to each other? What happens when all of a sudden you have to cut out five features that you promise to somebody because you just need to ship that night? I had a blast at Epicentric. I really learned how to actually build software for real. I got named as an inventor on some patents, which doesn't get you any money, but looks good when you tell somebody sometimes. I learned a lot about building software. Unfortunately, or fortunately, the really other cool part about being an Epicentric was, I told you before there was this high-flyer named Science that didn't give me a job. Epicentric moved into the old science office because Science was out of business. Every day I went to work at one market and they hadn't done it read on any of the decor, so it was this really commy carpet with all these green dots on it. I was like, huh. I got the job I wanted after all. They're all out of business. So again, life has funny turns sometimes. The funny term that happened then was an Epicentric got bought by a Texas company called Vignette. Vignette was this public company based in Austin. They saw a lot of the cool stuff we were doing about software and they wanted me to transfer down to Austin and help run projects down there. So I took the move. It went down to Vignette and I worked down there. I was an engineering program manager and I'd kind of risen to the top level. I was a staff engineering level. I didn't really see what was next. So then I made a lateral move and I became a product manager. This was hard because I basically reset my career. I became a product manager. When managers build stuff, product managers decide what to build. Or at least though it's the way I thought it worked. When I became a product manager, I learned that product managers take it requirements from a lot of people, munch them together, try to satisfy various constituencies and then decide. Vignette was also really fun because I got to talk to a lot more end users. So Vignette had customers all over the world. They had big newspapers in England. They had banks in Italy. They had a lot of media properties in New York. They had media properties in Chicago. And we also had really marquee customers that I was proud of like NASA. So my job at Vignette was I would fly all over the world. It could go these really cool locations and get absolutely screamed at by unhappy customers. Vignette had a lot of really bad bugs at the time. And there were bad bugs like not like a really trivial bug like this should be green and it's actually teal but a bad bug like we're a newspaper and you just delete it all of our content. Or we're a hotel chain and hotels actually have a lot of content. They have the pictures for the property they have that blurbs. We're a hotel property and none of the blurbs go live. So we haven't been able to book hotels for a couple of days. Really unhappy people yelling at me. They choke us that I learned how to get yelled at in several languages. But the reason why they were yelling at us is because they bet their selves on it. Like I vividly remember going to Chicago and somebody said you know I picked you as a vendor. You're not doing well. I'm getting fired because I picked a bad vendor. I was like oh this is real. This isn't like some toy. This is something people actually believe in. So from this I really learned the importance of if you build software you need to take it seriously. People are if you build software people are actually going to use it. And it's not just you sitting in your nice shiny skyper scraper and SF like oh maybe it should work this way like people really depend on it. All right so I had been at Vignette. I was a product manager. I was having a good time but I kept looking back at San Francisco. So this is 2007 where they started it kind of be this research of Web 2.0. And I would see what my old friends were doing. I would read TechCrunch and be like whoa that's kind of where I want to be. But I'm like well I make more money here in Austin. So I kind of wavered for about six months about you know should I move back to SF for staying Austin. And the thing that finally made me decide it is I was a single person and I have any responsibilities and I was like why am I acting like I'm 50. Like why am I like oh I can't quit as too risky like what's the real risk. You know the real risk is like we're grading that I didn't do this. Like I want to actually go work at a startup. I don't want to keep working at this big public company. So I quit and it felt like the best feeling of the world. They were really surprised but it was really fun. And I then took a break at the summer of 2007 where I biked cross country from Bellingham Washington to Washington DC. I decided I'd been working for a while and I just kind of wanted to reset and do something fun. This was really fun. If you ever have a chance to take a long period of time off between jobs I really recommend it. It's a good way to get yourself back into a new head space. All right so I got back to SF in 2007 all eager to go work at the cool job I'd been wanting for forever. You know it was like now is my chance I'm going to go work at the flashy startup. I'm going to be that person. This is going to be awesome. And I went in and interviewed at these flashy startups and the reaction was well you've really only been a product manager for about a year and a half. I said well what about all this engineering experience. They're like well you've only been a product manager for a year and a half. And I said but I could do all this enterprise engineering stuff. They're like we want somebody who's really good at consumer product. This was really brutal to me. Once again I learned that the job that you fall in love with does not always fall back and love with you. Like I went and interviewed at Flickster which I very much wanted to work at. I really remember their quote. We want somebody who's done consumer and you have it. So it didn't go work there. And when I worked at the job that actually worked one of me. I went and worked at monster.com and I actually learned a ton. So I got my own P and L. If you don't know what P and L is it's profit and loss. So at the time my division was making about $10 million. They said we want to make $15 million. Make it so. I learned so much from that. I learned all about this was kind of the dawn of Google ads. I learned about how do you email sends. I learned really how to do consumer marketing. And it was not the flashy company I wanted but I learned a ton. So the lesson from this one is even if it's not the job you want you can still learn something. Around then I finally finally finally got the job I had always wanted. Except for I didn't know that this existed because there was a new category. There was a company called Easy Bloom and they made a plant device. And this was before there was really Wi-Fi or even like reliably like it is now or iPhones. It was a device which you put in a plant and it would measure the soil, the temperature, the light. And you stick it into your computer with the USB port and it would tell you what to grow. As an engineer I thought this was really really cool. And also it was something that I killed many plants. I thought this was really really cool. So this company at the time was eight people. They had just come out of manufacturing and they were about to go ready to launch. And I was like this is the perfect job for me. So I went and worked there. And it was the perfect job for me because it was fun. It was also the perfect job for me because we launched it at probably the worst time you can launch a gardening product. So we launched this product in November of 2008. So the students here are too young to remember this. But 2008 was right at the beginning of a global meltdown around mortgages. So everybody was giving up their houses, cutting in discretionary spending and not buying household goods. Plus November is a terrible time for a gardening product. Nobody governs. The bright side of the story was so the first month we'd expected to sell around 500 units. We thought it was bad, 1,000 units if it was good. We actually sold 12 units. Like 12. Like we had made all these plans for like what if there's a huge surge of people calling and asking for help. How do we get more units from China in a hurry if we need more units? Plan is a elaborate launch. We'd actually sent the support person like to and like a bunker to get through all the support calls we anticipated getting. And so we got 12 calls. I mean, so we got 12 units total. So the bright flip side of this was, I was the product manager at the time. And I told the boss, the founder of the company, like, hey, maybe I should try doing some marketing. It's like, oh, marketing. And I was like, I know how to run Google ads. I could run some Facebook ads. Maybe I could also whip up some other stuff. And he's like, here's my credit card. And so I got us by trying different stuff. And I got us so that we made a million dollars in sales in a year. And it was all because things were going so badly they could only go better. And also because it was a brand new company and they let me experiment. Like just any success at all they saw is a success. So let's say from this is even if you're working at a failing company, you have this great opportunity. How worse could it go? Okay, so it was an easy bloom for about three years. And then I decided I wanted to go work for Trippit. Trippit was a mobile app and they were extremely popular around consumers. They had about, when I joined about 5 million users of the super app. And I really like Trippit because I like traveling. And they hired me because they wanted to start up a business selling a business. Before they'd been strictly downloading for consumers, now they said we want to ask what's the other businesses. And they looked at my resume and they said, oh, this is really great. You have all this business background. Like you're from enterprise. This is cool. So like all this experience which I thought was completely useless was suddenly very useful. Like it's really cool that you know how to talk to businesses. So I joined Trippit and launched Trippit for business. Got it to around a million dollars in revenue. And concur which was this big giant software we were doing and acquired us for roughly, this is public knowledge, roughly $100 million. So this was the second time I went through an acquisition. The second time I thought I was working for this cool consumer company and all of a sudden I was working for concur. If anybody has ever done expense reports, concur does expense reports. Not the funnest thing in the world. The thing I really liked about concur though was it was this 18 year old company based in Seattle, very different than most of the companies I worked for which you were considered an old timer if you'd been there three years. And they really invested in their people. Like if you were considered a good manager or a good director like I was, they kind of gave you a lot of training because they wanted to get you to the next level. And I know that at some companies training is seen as a punishment. Like I've heard at like a net scape it was like, oh, you're a bad manager. We're sending you to manage your training. It's like a punishment, like a timeout. Concorded a really brilliant job of saying this is a treat. This is us wanting to invest in you and get each of the next thing. Like it's not that you're a bad speaker, it's that we want you to be a better speaker. It's not that you're a bad manager, we want you to be a better manager so we could promote you from manager to director. So I loved this. Like every class they could take there I did, I really liked that they invested in us. So the lesson in this one is even if you're working at a big company that you don't necessarily like it as big company-ish, you can still learn a lot. Okay, so in the background this whole time, I didn't want to start a company. Like I'd worked at these really small, EZ Blum was the smallest about eight people. I worked at big companies. I launched business divisions and I was like, well, this is great. I know that I could go from zero to a million, but I want to do it for myself. Like I don't want to do it for somebody else. I don't want to do it as part of a spit out. I don't want to do it as part of a division. I don't want to do it for me. The issue was I had no ideas. Like I was like, I'm a very boring person. All I really know how to do is build software. That's it. Like I'm not like somebody who's like, oh, I also know how to do crazy ideas while my friends were doing. I was like, all I really know is software itself. Like I know how to ship a release. I know how to design a release. I know how to bring it to market, but just software stuff. That's what I love. I love software. You know what I mean? My friend John Cotamol and I who'd gone to college together, we would hang out. He was an engineering. We were just sit around and talk about software. You know, like how should agile be implemented? Do silly stuff we'd seen product managers do? How to build better releases? Release management? What was all we talked about? So John and I kept trying to come up with an idea to start our company around. Finally we decided that we would just start working on something 10 hours a week. So if there's ever anybody you're considering joining a company with, practice it first. You don't know what it's like until you actually work with somebody, what it's like to work with somebody. Sounds obvious. So what we started doing is we started working for 10 hours a week. We both kept our full-time jobs. John was at Atlassian. I was at Conqueror. We were working on our idea for 10 hours. And we cycled through about, depending on how you counted, like three to seven ideas. Initially we thought about doing an app for children. Apps for children are actually very hard because there's a lot of regulations around what content you should show children. We thought about doing a productization of his PhD thesis, which was around static analysis. When we actually worked on this for a long time, we worked on this for about a year. So I was out there talking a lot of developers. It didn't feel right. And then when we were talking to people about ideas, suddenly it became really clear to us that we should do something around future flags. I was talking to my developer friends. They said, you know what I really like and miss is the framework that I used to have at Facebook or the framework I used to have at Amazon. Or I could see what people at Dropbox are building. I also had an internal framework at Tripit. We had this internal framework where we could roll features out to different users. We could control it. We could see who was using a feature well. I had always complained about what I was at Tripit. Why is it this a product? Why do we have to keep doing it in-house? Even when I was back at Monster.com, I remember we had this catastrophic release once where I really wanted to try two different versions of something and then be able to do a kill switch and there just wasn't a way to do it. I was like, why don't we build a product that makes software development better? And John said, that's it. That's our idea. Like finally we have found an idea that takes advantage of what we're both really good at, which is software. Like the stuff that we thought we were, you know, was important was actually really important because we understood software. Like John had been at Lassiany at a PhD in software, CS. I knew software inside out. So we started to launch it darkly. And I remember starting it because Ravi, who's sitting right here, actually saw one of the very first time we pitched. I had convinced John, my co-founder, to leave at Lassian. And I had been applying to a bunch of accelerators. And we got turned down by YC. We got turned down by 500 startups. And I never heard back from alchemists. So I was just going, oh, cool tape. And I remember because I was going up to Tennessee Valley to run. I love running and I was training for a 100-mile race. And all of a sudden I got a phone call and I pull over to take it. Don't take a phone call while you're driving. If you're a student, remember nothing but that. And it was Ravi. And Ravi said, hey, you know, I've been trying to email you. I want you to come in for an interview to be in my partner, my accelerator. Why haven't you responded my emails? I was like, emails? I'm going to. And he's like, yeah, this is a lot of Thursdays. Like, can you come on on Saturday? I mean, yes. And then I had to go call John, who had his big going away party from Lassian on Friday. So he'd been at his company for about eight years and he had this blowout party plan. And like, John, actually we have to go down to Palo Alto at 8 AM on Saturday. Sorry. Sorry. So we went down. We went down to Alchemist Accelerator with Pitch Ravi. He saw our very primordial, I'd say, kind of crummy pitch and he accepted us into Alchemist. And that is the beginning of our company. So the very first investor we got was actually sitting right here. So thank you, Ravi. For being the first to believe in us, he saw that we had this spark of something. And I say, thank you, Ravi, because nobody else saw it. We got turned down by every other accelerator. We didn't have any customers. I'm still shocked to this day that he saw something. Okay, so it's sort of this company. We had some money from Accelerator. Everything is just magic then, right? No. Now came the really hard part of going out and getting customers. John would go build. John was my co-founder and I would go out and try to get customers. It took us about a year to get nine people using it. And that was with a lot of hard work. That was with if somebody said they were remotely interested, like, John and I would go show up at their office and say, okay, you're going to install it now. And we're not going to leave until it's installed. Sometimes it's still a couple days. So the first year was incredibly hard. We were this new product and the new market that nobody had heard of. And if they had heard of it, they'd built it in house. The one thing that really kept us going was that the people who did use it seemed to like it. So after the first year we had nine customers. In the second year we started charging and this is a different metric. So I say nine customers the first year, what I really mean is users. So when I asked people to start paying, two of them said, we were actually only using this as a favor to you and John. And I said, well, can you pay like $5? So I can claim that we have customers. They said no. But they had used it. So this is the hard line that you have to learn if you're going to start a company between users and customers. Like it's sometimes better to ask for money because then you quickly figure out whether somebody is using it for a favor or for real. However, we did have five customers. This made me really happy. One of them was a company called Auction.com. We'd put up a lot of content, a landing page. And they were the first person that I didn't know who we got to use us. Like they signed up for more information. I gave the director of engineering a phone call. He said he wanted a system like he'd used that LinkedIn that would help him with releases that had some sort of A, B testing and segmentation. I said, we have exactly that. He said great. So one customer that we didn't know that was willing to pay us five figures at the time gave me a ton of hope. Like startups are sometimes a slow slog of just like you just look for these little tiny sparks of hope. I'm like one person will pay us some money. Another customer I was really happy about was so that happened in April. In September we had about seven customers paying us. And I know it's seven because every month I had my spreadsheet where I would put down what customer sort of pain is. Every month I'm like there better be another name or I'm going to be very unhappy. And what made me extremely happy was that somebody signed up and paid that I never met. I just got this automated email. Somebody put down their credit card and paid for it. Cool. So like if you're starting to start up it is really hard to always look for some flicker or cadence of stuff is happening and it's starting to move. So people ask me how do you get these customers? We just put out a ton of content. I'm not a fan of stealth. I know some Stanford company just got like 50 million out of stealth. That wasn't our style. We were like if people don't know who we exist nobody's going to use us. So I wrote a ton of blogs. I did the podcast which we talked about. I would post stuff on Kora. I would go to give a talk anywhere that would have me give a talk. And this was really hard to me in the beginning because I was super shy. I was just all about getting a word out. And it worked. Like people started to say hey I read your article. This looks really interesting. We like to use your software. We did a big product launch and we put a ton of effort in this product launch and we expected to get around 400 maybe conservatively 200 customers from this big launch. Because these are the numbers we've heard from our friends. And said we got one. One customer. But one is better than zero. You know we got one customer. So it was in vision software. And again this was somebody that wasn't a personal friend of us. And I remember the first time we had a real call with a vision. So vision is design software. And they were calling because they had a question about something. It's we're on this call with them. And then also all these head stop start popping up on our screen. And it was because all the engineering managers are like this is really important to me and I want to also talk to the vendor. So like we're talking John and I and my co-founder are talking also. And some of the 20 people all talking to us like hey we want help with this. Can you help us? Whoa, people really care. This is important. The final early customer I'll talk about was true car. This was a really cool customer. They came in cold. I didn't know them. It was a guy who was named very poetically Joshua Goh, which is good for a car company. And I talked to him and he said we built this in house. I actually built it. I really like the internal framework. But we want to be the best car buying company, not the best infrastructure company. And so they started using us very early. And they were the customer I referenced before when I went back about two years after they've been using us. And I talked about how happy they were and that it had changed their life. This feels really good. So my takeaway from all this is it's really hard to get early customers of B2B. I think you always hear about these overnight success stories. I know that snap is a Stanford company where you put something online and you get 100,000 people the next day and then a million the next day. And then you just go buy the Lamborghini. That was on us. B2B could be a long slow role of just getting a customer, getting a customer, getting a customer, it can also be really slow still cycle. So who here has heard of QVC? So QVC is a television channel where you can buy stuff. I knew QVC because actually when I was back at the plant company we'd done an infomercial. So I'd actually gone down to their headquarters and taped this infomercial which completely flopped. So QVC was interested in using us lunches, and they went out and talked to them. And they're like, well this is really interesting but we don't really understand future flying your technology at all. And that was an 18 month sales cycle from beginning to end because they had to really get on board. But once they got on board they were happy. So the nice thing about B2B is it sometimes takes a while but once you get people they're usually very, very loyal. So categorization is really hard. I think the takeaway I hope you have from this is find something that you really understand and love. And it's okay if you don't know what you know and love right away. All this stuff I thought had been like kind of this dead knowledge that would never be used again. The fact that I was really good at building software, the fact that I've been an engineering manager, then I knew B2B SaaS that I knew how to do content marketing for my time at Monster. Suddenly I became really useful later in life. So all these skills that you think you're like, why did I waste 10 years building software when I still pay the same as if I just got out of college? It actually really helped you. Networking can help you. It sounds really obvious but I got a lot of jobs just because there were let people know that I was looking for a job. Like saying to people, hey, I got laid off was not the Christmas card I wanted to send in 2000. But telling people that I just got laid off helped get me a job of somebody who's like, oh, you got laid off. Come join my company. So ask for help and ask for help from people who you know you all because they'll love sometimes to give it. And my final, final takeaway is it's not too late. Like I think there's this mythology that you have to be 21, you know, fresh out of school to have a great idea and that, you know, there's this mythology of the founder as you can't do it if you're over 30. We were over 30 when we started the company. We've done great. And I think part of why we did great was that we did have all this knowledge. To go back to the thing I said before, we had this toolbox of different things we could pull out of. Like John, my co-founder, like knew how to build software really well. He and I both knew how to manage people. Like, we knew how to actually execute and run a company which was something that I think sometimes only comes after you've worked for a little bit. So thank you all. I hope you learned some lessons and now I'm happy to take questions. You said down the right up for the event that you could build the right thing but if nobody knows about it, it doesn't exist. I learned this a hard way at Easy Plume. Like I said, it was this cool working sensor that we all thought was really neat. Nobody knew it existed so we didn't sell any. I'd say the transitions I made in my life were when in an engineer you just think you build stuff. When you're a product manager you realize it's all about building the right thing and when you're a marketer it's all about figuring out how to get the word about the thing you built. Something I learned from various jobs is that you need to have a toolbox of marketing techniques. At Tripit we tried to write a lot of content around travel and it just utterly flopped. People have been writing about travel since Marco Polo. People love blogging about their trips. They love showing off travel articles. There was a ton of competition. We couldn't break through that. Same when we were a gardening company. Every newspaper in America had a gardening column. When I started working at lunch darkly about getting the word out about this kind of infrastructure tech product, there was not any real content about what we were doing out there. Articles that I thought were pretty basic got a ton of attention. One of my most popular articles was one I called a Kill Your Staging Server about how you should shorten deployments and it was actually a reaction to a patent I had gotten years before and how I thought it was worthless. My best advice about marketing is to not have just one technique to not say like, hey, we're just going to do Facebook ads and only that, but to have a mix of different things you could try and see which one works. For example, Facebook ads worked really well at the gardening company. Really well. I figured out our target user was a 55-year-old woman who was really into gardening. A really good target Facebook ad was somebody looking for a gift for their mom. Every mother's day, like, every day, like, oh, what should I get for mom? She likes gardening. We had all these ads like gardening mom, green thumb mom, and we were targeted at people in their 20s as a gift. Same with Google, like, one of our best running moments was we would always try to buy it Mother's Day gardening around Mother's Day and we would get a lot of good clicks from that one. So, in summary, marketing is not just one thing. It's just everything about getting the word out. Are there also any other lessons to share about the rest of your fundraising, especially when you were opening a new category and the task of the action in your fund? Oh, yeah. So the question was around fundraising and it was hardest in the early days and, again, I think, Ravi and Alchemist and also a threshold who's one of the sponsors who did our A. It's hardest in the early days when you're a new category because you don't have any market size. It's not like, hey, I'm going to go into the database market and there's an established category where people can say the database market is 3 trillion if you get the share from Oracle, you'll be worth 3 billion. In the early days, it was just finding people who really believed in us and then as time went by, it got easier for us because we had more traction. Instead of just saying, hey, trust us, believe us, I really think our early investors took this huge leap of faith. In the early days, we'd say, hey, we have five customers but we think we're going to get more. When you have actual traction, you could just kind of say, I know this is going to be a big market, our customers talk for us. I'm a former Facebook software engineer, so I'm here because I was curious about learning more and more about how to actually, but I bet your sales process is optimized to convince the software engineer and the company that they need your service, the not decision maker that controls the budget, I guess. I'll do you overcome the issue because I'm sure that once someone tries a system, I nobody wants to go back, but how do you get another company to convince the people who can control the budget? This is a good idea for the first man. Yeah, well first, thank you for coming. So let me paraphrase. You have the individual developer who's using you. You also have the person with money and budget who might be a VP or director, how do you think it could be some both? That was one of our big challenges to do both. We went about it in both directions. John McOuth-Founder and I gave him a ton of credit all the time. He made our SDKs, our software development kits that you plug into a developer's code like full-up proof. Super easy to use. You can just drop the minute and use them within five minutes. This was a lesson we learned from Trippit. Trippit was a super company and we said we need to have delight within five minutes. If we take that paradigm and we put it into software developers, the documentation also has to be super easy. Like developers do not want to pick up the phone and call somebody. They want to just get it done. So bottom-up motion had to be very smooth. Then we also had to get budget from a decision maker. And how we usually did this was the early days different than how we do it now. In the early days it was a lot of people who had either come out of a Facebook or LinkedIn or something. So one of our very earliest customers, Auction.com, I referred to it as a director who'd left LinkedIn. And he'd been brought into a new company and basically said where is the system I used to have? Like I need this. Like I need this to do my job. So that was a little bit more of a top-down where he had to convince all the developers it was good for them. The other situation we usually had is more of the true car situation where they built a system or an envision also. They built some sort of internal system that worked well enough. But they started to look at the cost of maintenance. There's a long-term cost of hey, if I've pulled three to eight developers off to work on this, it's not only that we have three to eight people working on this, there's also the opportunity cost that they're not working on something else. It starts to really show up more and more over time. That's definitely how we had to get both on board. And what I learned, and I should have mentioned this before, from being an engineering, is that you absolutely have to have the developer on your side. Like if the developer does not want to put something in their code, they will not put it into their code. Like I remember arguments, I was going to say fights, but arguments they had at Tripit when I was a product manager about something very simple, like a tracking code. And the co-founder of VP of Ingeniority is like, I don't trust your tracking code. I'm like, no, it's just a pixel. What's the worst that could happen? But like engineers have to have to have to love it if they're going to use it. So I'm an engineering-going product manager to dislike you. And I was wondering at what point did you know that you had to do your own thing just like when you came in here in the product management, you got to know that you had to do the tracking of the cycle. What point did you know that you had to start your own company? Yeah, so the question is, when did I know I had to start my own company? Well, I wanted to do a 1999. I just didn't have the skills. Like I always wanted to do it. It was just always, it was like, oh, I don't know what I'm doing. This is a really terrible economy. And the economy in 2002 was terrible. And then it was, well, I have this really comfortable career, why give it all up. The thing that finally tipped it is John, my friend and I were talking and we'd already wanted to do this for a long time. And I'm like, I don't want to be talking in another 15 years about why we didn't do this. Like I would much rather us say, hey, let's try this for two years. And if we totally fail, we'll probably not be friends anymore, which will make me sad. And you'll go back and get your old job. And I'll go back and get a similar job. And then like, that's really the worst that could happen is we'll burn through our savings and we'll go back to our old lives. And I'm like, I would much rather take this bet than be sitting around and be like, why didn't I do this? The entrepreneurial thought leader Syrians is a Stanford E-Corner original production. The stories and lessons on Stanford E-Corner are designed to help you find the courage and clarity to see and seize opportunities. Stanford E-Corner is led by the Stanford Technology Ventures program and Stanford's Department of Management Science and Engineering. To learn more, please visit us at ecorner.stanford.edu.