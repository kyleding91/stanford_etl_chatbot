 Who you are defines how you build. This is the Auditorial Thought Leader series brought to you by Stanford E Corner. Today we are delighted to welcome how we loop to ETL. How we is the CEO of Air Table, inspired by his own experiences learning to code and inventing his first job by building customized business apps. He co-founded Air Table to democratize software creation. Air Table's mission is to enable anyone to build the software tools that they need to meet their needs. And I should say that how he is another powerful example of how first generation Americans are at the forefront of entrepreneurship. He was born in Texas to Korean parents who came to the United States from China. And how he went on to study at Duke where he was a double threat. He double majored in mechanical engineering and public policy for all of you that like to straddle fences both on the social sciences and the engineering sciences. And how he jumped into entrepreneurship fairly early after Duke. He spent a year on his first venture, which was a next Gen CRM company called E-Tact. Then he spent a year stint in product at Salesforce. And then he started Air Table in January of 2013 with fellow blue devil classmates Andrew Offsted and Emmett Nicholas. Air Table has raised over $600 million in funding and has several hundred employees. So with that, please welcome how we do to ETL. How we lots of virtual ETL and Stanford love for you. Thanks so much for having me. How I wanted to start off because it is rare for us to have a founder that jumped into entrepreneurship right after school. We oftentimes see these stories of people who finish their degrees and then they pay their dues, so to speak. And they become entrepreneurs in their late 20s or their early 30s. Or we see people who drop out of college early and just jump into entrepreneurship before even finishing their degrees. And I know a lot of students wrestle with this question of how do I know when is the right time that I should be a founder or to start a company. What advice do you have for students that are wrestling to understand when they should start a company? Yeah, I don't think there's a one size fits all answer, but in my experience, you know, I actually really wanted to find an idea that I could drop out from school to work on. And so throughout high school and high school and even throughout college, I really kind of pivoted or iterated through a lot of different ideas. I prototype some of them, you know, I was learning kind of build web apps. And you know, at the end of the day, I never found one or I never ended up building an idea out to a point where I felt very high conviction that this was not only something I could build a product around, but also could build a business around. So I was always sort of interested around not just, you know, kind of building a, if you want product, but thinking through a few more chest moves ahead on the board and saying, you know, how can you get scale with this? You know, what would the revenue model for this business or product look like long term? Are there any, you know, kind of reasons why this product might get early traction, but then kind of get shut down or not, you know, asmto early on, right? So, you know, I went through lots of ideas ranging from, you know, some stuff in real estate and finding apartments, you know, to, you know, apps that were more consumer and internet social. And, and long story short, you know, it was very important to me that if I was going to drop out, which, you know, felt like a pretty big, you know, decision and commitment. I wanted it to be for something that I had really, really high conviction could be, you know, a viable long term business. And, you know, frankly, never, never was able to define that thing during college. So somewhat disappointingly graduated, got a, got a proper degree and then headed out after college and was about to go and actually take a job doing basically consulting for tech companies and getting to prototype apps as part of that job. But then at the very last minute had kind of this impulse to just instead go and go full force at that point in starting my first company, which you mentioned. So, I don't think there is a right or wrong answer, but, you know, for me, it came down to finding an idea, you know, and validating it enough to where I felt like the, you know, the risk-reward ratio was worthwhile. But I find interesting though is that the idea validation that you're speaking of is different than what a lot of founders speak about because a lot of what I found speak about product market fit finding something that, you know, that's that's that's a pain killer, not a vitamin and something that where people tell other people about your product. But it sounds like the gating factor for you was not that short term product development or product market fit, but it was the standard of something that was going to become a long term success. If that's true, how do you know what's what's the equivalent to know when you should jump in if there's long term, if there's a long term fit? Yeah, no, it's a great question. I think there are two ways you can build a company and one is to just try to get that initial product market fit and then kind of ask, you know, the longer term questions later, right? And obviously sometimes that works, right? I think Twitter is probably an example of a company that, you know, maybe didn't have a ton of long term thought fleshed out around, well, how are we going to monetize this thing and what does this look like in five years and so on? And I think it just, you know, kind of emerged from effectively a weakened hack project out of audio, you know, from which it's fun. And it just sort of took off, right? And so I think you can sort of build first, get traction and then ask questions later. I think there's also a different way, which is you kind of try to go and and de-risk the long term, you know, kind of outcome for the business by saying, you know, what, what is the business plan basically? And you don't literally have to write a business plan. I don't think I ever wrote, you know, a formal business plan, but asks us a lot of the same questions that one might, one might, while writing one, right? Like, you know, how do we, you know, beat competition? Like if this is such a great idea, why aren't there other people doing it? And like, you know, even if there aren't any right now, if we go and kind of build this product and get some traction, what's to stop a competitor from coming in and doing the same thing better, right? Or beating us, you know, to win the market. So I think it is important to, you know, if you're going to pick the latter path and de-risk more of the opportunity upfront to ask the right sorts of questions. And, you know, probably there are some great resources out there around, you know, how, how do you kind of write a business plan or where the questions you want to ask? I'm personally a big fan of the Peter Thiel class lecture essays that talk about, you know, these, you know, various questions or ways of thinking about, you know, sort of ideas. The zero to one. So I just want to really have people grok this because I think everybody right now, the mantra is always around, you know, having some proxy for how much people love your product, either by a net promoter score or Sean Ellis has this growth hacking methodology. But this methodology is a long term lens and it sounds like the checklist that you're talking about is the questions that Peter Thiel will put forth on thinking about how you network effects sort of in the long term. And it sounds like it's, you know, it's maybe it's a combination of doing something differently in the short term that leads to lock in in the long term. Are there any other specifics that I say this because I know our students always have this question about they're going to have jobs to join and they're going to think about, you know, is what is compelling enough for me to say no to a six figure or seven or not seven figure, like these six figure salaries that are being thrown at young students these days to jump in and start a company. And I think the wisdom that you're giving is is is is fresh and different. And so I just want to make sure that that gets heard. Yeah, for sure. I mean, I think in a way it's it's sort of your shifting risk between, you know, tam risk, you know, if you build this product and even if you get traction, will you have a large enough tam. And when you be able to capture enough of that tam to make it all worthwhile and build a large and enduring business versus, you know, initial product execution risk, right, like can you even get the traction in the first place, right. And I think both are, you know, kind of valid forms of risk that you know, you should think about. But in a way like you, you know, the worst case scenario is if you haven't thought about either, right. And so neither do you have a product that's kind of taking off in the short term, nor have you, you know, kind of gone and make sure that once you get traction that there is kind of a light at the end of the tunnel that will be fruitful, right. So I think you kind of have to at least, you know, that one of the two and like, you know, if you're going the, you know, kind of build product market fit first, you know, approach. Then I think it's really just about, you know, prototyping things, building them and then being able to like get early customer feedback as soon as possible, right. And I think this is something that probably the seed link, you know, kind of methodology really as perhaps you, you know, you just go out and try to get, you know, customer validation show, you know, rather than tell that this is going to work versus the pay, let's plot out, you know, what this business looks like long term, right. You know, what's the five year road map. So if we build this first, how are we going to sequence that to get to a winning outcome in the long term. And I will say people have revisionist history here. They will say, you know, when we started, we had this big vision. But usually when we dive into the details, the reality is different. It's, it's a lot of fumbling towards victory and co-creating things through luck. But are you saying that you actually did when you started, you knew where you were going to go. You have this vision and you were playing for dimensional chess in terms of understanding the different stages. I don't know if you were playing for dimensional chess, but, but we definitely had had a clear idea of where we wanted to go. Right. In 2012, we made an internal vision deck that also kind of had like a rough business plan around it. And it basically described more or less like our five plus year road map. And I would say in, like, kind of rough terms. We have been, been executing a denset, right. Like we wanted to start with effectively a relational database that anyone can use sort of like a Microsoft access or a file maker pro reincarnated. But then we would eventually build the ability, you know, layers of greater customizability around, you know, logic, right. So now we have something called automations in air table, which only just came out about a year ago, where you can say, you know, if this then that, you know, type logic inside air table, right. At some point, we're going to allow for interface customization on air table. So these were all parts of the original, you know, vision that we had set out to execute against. And I think we also had some idea of how we thought the market would evolve around us. Right. So, you know, we described our position against project management tools. And, you know, we've kind of watched over the past five years. Like, you know, since 2013, so almost eight years now, how, you know, the project management tools like the sauna or smart sheet, you know, et cetera, had evolved in the landscape. So I think, I think we did sort of do do a lot of that legwork up front. We ended up spending almost three years building the product before even launching it. Right. And so, you know, just the amount of time and investment that we put in before getting real, you know, kind of at scale, you know, customer feedback loops. I think what was the function or kind of what was was feasible because we had done more of this upfront, you know, kind of a tam and kind of market validation. So we needed to dig into this because I think this is a singularity in terms of what we've seen. And I think it's very, very refreshing to and I think, you know, it's almost like old school entrepreneurship of actually having a vision, a long term vision and then executing against that. And I should say, you know, everybody these days calls themselves a platform. It's almost an overused term. But you guys truly have built a platform. You're building software that builds software. It's very, very meta. But it's true. And you've legitimately done it. And so I want the perspective founders to really grok this or understand this because the conventional wisdom of these days is launched yesterday or launched today. And then, and then the and the weapon that you have as a founder is to iterate quickly. And you guys took three. How long was it before you launched? Almost three years before we launched publicly. Now we were getting some form of, you know, external validation throughout. So early on it was prototypes or mockups that we get feedback on it. And then we built, you know, kind of semi functional, you know, you know, kind of, you know, kind of data or alphas, etc. But, you know, we didn't see in earnest kind of launch the product for almost three years. And so then how what is a minimally viable product then if you take this tact or does the is that even the wrong conception is that the wrong way to think about it. Yeah, I think no, and what is the right way to think about it? You know, I'll contrast it also with my prior experience. My first company, Etax was around for literally a year from start to finish, but you know, from when we founded it and sort of working on it to when we sold it, you know, to Salesforce as an acquisition. And I think we probably only spent 10 to 12 weeks building the product full time before we launched publicly and got a tech crunch article into the whole thing we were in my sea. And so just very, very different approaches, right between the first company and the latter. So I think I've kind of, you know, at least with one data point each experience both, both approaches. And I will say like, you know, first of all, emotionally, they're very different, you know, kind of journeys, right? In the first case, it just felt like this constant, furious sprint to try to get to the next milestone. You know, we didn't really know what was, you know, what the future would hold. Like there was never really any, you know, kind of clear or certainty around like what the next five years look like. But, you know, what the only thing that mattered was getting some form of four progress. It was almost like we were these simple vector machines that were just sort of pivoting around and trying to find what is the right direction to go to to descend the gradient. And then with their table, you know, we had just a lot more patience, maybe even arguably to a fault where, you know, obviously time is precious. I mean, we all would rather get to where we want to be, you know, in terms of, you know, impact success, you know, kind of product growth sooner rather than later, right? All those equal. So I think, you know, we almost had this level of complacency or serenity around knowing that, okay, like here's, you know, here's what we're going to get to. We kind of know what the mid game end game looks like. And we just have to like methodically build the product that we think, you know, will unlock that or will be a great starting point. So to answer the question more specifically for air table. In that case, we were fighting against a few things that made that MVP much, you know, a much higher threshold to pass, right? One is that, you know, we were trying to build a product that individuals and hopefully businesses would actually entrust with valuable data and important workflows, right? And so this is different from, you know, being, for instance, a consumer, you know, kind of social product where the stakes are fairly low, you know, somebody can just go and try out a new product like that with little ramifications, if it doesn't work out. Whereas with air table, you know, we're trying to get companies to, you know, people and companies to actually put, you know, kind of important business process into air table, right? And, you know, if we went down, we went bankrupt, if we lost their data, you know, that would have serious consequences for them, right? So that was already one reason why the stakes were higher. I think the second was that, you know, we were also trying to replace existing, you know, kind of behavior, right? So, you know, we weren't just trying to add a new thing into people's lives as sometimes again, like, you know, consumer internet products, they're trying to add a net new thing into the, you know, kind of suite of products that you use. You know, TikTok isn't necessarily directly replacing your usage of Instagram, YouTube, et cetera. It's kind of adding a new thing, right? And so, you know, you don't really have to worry about, you know, replacing one for one all of functionality of the existing product. Whereas for air table, you know, we were trying to get people to displace other products with air table, whether they be, you know, project management tools that were more task-centric, trello, et cetera, or even spreadsheets, right? And spreadsheets in particular were a challenging one to replace because, you know, we were trying to get people to display other products with air table, whether they be, you know, project management tools that were more task-centric, trello, et cetera, or even spreadsheets, right? And spreadsheets in particular were a challenging one to replace because, you know, if you think about Excel or Google Sheets, they're pretty sophisticated products with a ton of, you know, complexity and, I mean, the number of lines of code and, like, you know, countless, you know, probably millions of person hours of engineering effort, if not more, that have gone into Microsoft Excel over the past three decades to form the product that it is today. I mean, it's gargantuan. And there's no way that we could get to perfect feature parity against that product. And yet, we wanted people to replace their existing usage of Excel, especially for non-numeric workflow use cases where they were really kind of using it as, you know, almost like an app, or an app builder, as opposed to a number crunching tool, we were trying to get them to replace that existing behavior with air table. And so, I think there was a higher threshold, like, we couldn't just have, you know, a weekend hack project version of air table that people would use instead of, you know, a traditional spreadsheet, right? So, I think, we just, the nature of our product and the bet that we were making around, why people would use us over the prior art necessitated a much higher, you know, MVP threshold across. And then how, and the reason why the shift occurred is because, you know, previously, you would have people that would hunker down for years, work really, really hard, pop their heads up and then realize that this beautiful product had no match. There was no product market fit. How did you still maintain were able to act with was the difference here because you knew what the target was that you were dealing with these antiquated old existing incumbents and so the specs were really clear, or how did you avoid that pitfall that has pushed the whole community in this other direction now. Yeah, for sure. And we certainly didn't want to just be so arrogant as to believe that, you know, we could sick our heads and, you know, huddled down and like, see jobs just come up with like a magical new product that for sure everybody in the world would want. So, I would say that we were pretty iterative in terms of de-risking the product market fit, even if it didn't entail actually launching the product. So early on in the earliest days, we were going out and just talking to lots of other people who had worked on similar products, right? Whether it's, you know, see what's an off ski from Microsoft who would work, who had overseen office and windows and, you know, kind of getting his feedback on on our idea, right? Or other people who had worked on similar products, right? You know, there were a number of low-code companies that, you know, existed 10 years ago, right? And never quite made it. And so we kind of wanted to go and talk to these founders and other operators and figure out why isn't there already a product like this? That's mainstream. That's successful. Why did your company not, you know, kind of ever quite, you know, kind of hit that ubiquity, right? And so we did a lot of that, that kind of early research just like trying to figure out like, you know, what was the prior art? Who else has thought about this idea in the space? Subsequently, you know, we kind of develop our own thesis or it kind of corroborated our thesis that, you know, none of these products were good enough. Like I think there was a certain threshold we believed where, you know, if the product was hard to use, if it was too complex, if it just wasn't a viable replacement for Excel or Google Sheets, then people wouldn't use it, right? So there was always kind of like, we believe that there was a binary of either your product is, you know, better enough and intuitive enough to kind of replace existing favorite or it wasn't. And then if it's not, then you just kind of die this very slow death where like you have a few people who are kind of enthusiasts of your product, but it never quite catches on in a mainstream way. So, you know, that's kind of what the conclusion that we came to, we had some validating conversations with, you know, people who did, you know, work on products like this and actually felt pretty strongly that this could be a thing, you know, that we were onto something, right? I think Stephen actually had had pretty positive feedback for us and we also talked to somebody who had led Microsoft access within, within Microsoft, kind of shared their perspective on on this product genre. So that was kind of the first step. I think thereafter, we just realized like, okay, it's going to really come down to our ability to distill a lot of the complexity behind, you know, kind of a relational database, low code app platform into something that feels effortless, intuitive, even delightful to use, right? And has to be as easy or arguably even easier to use than, you know, kind of the status quo, right? So the friction to adopt air table had to be minimal relative to using a spreadsheet. So we started working on a lot of, you know, client side or front end only prototypes. We were just prototyping the design of the product and some of the interactions and the UX. And we would build these initially just mocks and then later, you know, functional prototypes, but fake the back end, right? So we wouldn't actually persist data, but you could kind of click around and we started testing those with, you know, different types of knowledge workers in different use cases industries, you know, saw how they use their existing tools and then asked them to kind of replicate a workflow or see if they could understand how our product worked. And, you know, there were just kind of these subsequent milestones like that where, you know, we would go and validate the next big risk, right? Like, can we design a product that actually is intuitive enough? Okay, if we can do that, then can we actually get people, even if the product, even if the UX is theoretically intuitive enough, can we actually get people to shift their data over to our product, right? So then build a back end that's functional enough to actually persist data and like get people, you know, even on small scale to see if they can actually start using our table and if not, then why, right? So there were, I mean, I would say like every three to five months, we were probably derisking a different question about the viability of this product market fit. But leading up to actually launching it and then just crossing our fingers and seeing if, you know, people, you know, now that anybody could could sign up for the product, it was out there whether people would actually come in and, you know, sign up for and hear about and talk about our product. So there was still these user interaction feedback loops that you're doing constantly. It's just that it took a lot longer to get to the MVP or the actual product. Yeah, exactly. And you know, the form of customer feedback was not necessarily, you know, just putting out a production ready product that anybody could self serve sign up for, but really kind of testing specific hypotheses or betting specific questions, you know, in sequence with with customers or users. And it was built sequentially or was it also built in parallel where you're doing the front end and then the back end with a different team and then combining them to the two at a point in the future. It was, I mean, early on we, you know, so it was just Andrew and myself and we were just working on the front end. So I think there was a long stretch where we didn't even touch back end code. I think at one point, you know, we even like tried faking a back end by using local storage or cookies to persist the data. So it was completely hacked, right? Like you would open up the browser and you know, it would literally, you know, if you opened up a different browser or a different computer like your data wouldn't be there. There was not even an authentication system. So it really was just kind of a hack to test like, you know, the front end UX. And then at some point we built a back end and you know, but it was very deliberately just a minimal back end. Like we didn't over invest into the infrastructure. Even though we knew we would need to go and like at some point, for instance, we, you know, once we validated that we thought this product would work from a UX standpoint, then we invested into building like, for instance, the real time, you know, architecture that would allow, you know, multiple people to collaborate on air table for the handle, you know, kind of merge conflicts, etc. But we didn't want to work on that front because we knew it would be hard. And it also wasn't the crux of, you know, whether people would would ultimately adopt air table, right? You know, we knew that real time collaboration was a solve problem, a hard problem. And yet, you know, the difference of, you know, kind of building that up front versus pointing it till as late as possible before we launched. That wasn't going to give us useful signal like, you know, having real time or not in this prototype. And your investors were on board with the, did they sign up knowing it was going to be three years before there was going to be a product release or was that, you know, I don't think we ever committed to a specific timeline. And truth be told, I don't think any of our investors expected it. I don't think we expected it to take three years from start to launch. Now, to be fair, I think the first year, over a year of that three years, we haven't raised money. So it was just, you know, kind of two people bootstrapping, you know, kind of burning our own savings on a ramen diet and working ourselves on the product. And can you talk about that? Can you talk about the role of co-founders when you're building these how we lose endeavors, these big, ambitious endeavors? Is there a difference in terms of the role that co-founders play? Did they, and was everybody on board with, was it one of these things for people we're thinking it's going to be a year and end up being three or did was everybody on board from the beginning saying we're going to go invest three years of our life before we were. Yeah. So to answer that last question first, I think it was somewhere in between. I mean, I think we were, you know, very committed to building a long term company. We've gotten fully on board with this vision of, hey, if we pull this off, this isn't just like a, you know, kind of a little marginal product in the world. Like we might actually build a really meaningful platform that enables, you know, people around the world to create useful software applications in a way to like kind of open up the power of software as a medium for building useful value to, you know, an order of magnitude more people that it's currently exposed to. Right. And so I think we were excited enough about the long term possibility and then, you know, financial upside, believing that, you know, the, the, you know, kind of ultimate. You know, kind of success of this company could imply, you know, building something on, you know, on the level of a, you know, of another Microsoft, right. If we are the platform that every company, every individual out there in the world uses to build useful applications. So, you know, we were excited enough about the end game to be very patient, I think, in kind of the short term. But I also don't think we went in and ever like thought, you know, it would take three years to actually launch this product. I mean, if you had asked me, I probably would have said very naively. I mean, as entering timelines are, are certain to always, you know, kind of end up inflating with the fractal of complexity that you don't see up front. You know, we probably assume we would launch the thing in like six to nine months, right. And so it definitely ended up expanding far beyond what we expected. I think if I could go back and do it again, I would also. You know, probably higher more aggressively up front because hiring great people, you know, first co-founders, but then later, you know, employees is one of the greatest forms of leverage to building, you know, quickly building a successful business, right. And it turns out like, you know, hiring great people, you know, isn't just a way to execute on what you already know you need to do. But those people help you figure out what you need to do in first place. And they kind of help shape. You know, the product itself, not just implement the details of the product. So, you know, I think it's critical to hire and hire really well early on. It's not easy, right. Especially when you have no brand as a company and you have no real attraction. And maybe at best you have some funding that you've raised. But it is hard to attract the very best talent. Right. So I think hiring co-founder or finding the right co-founders is really important because, you know, the co-founders are the ones who are going to be, you know, fully bought in, you know, to the, you know, kind of To the vision to the company. Even if there's, you know, kind of no clear indication that it's going to work. Right. I think that's almost like, definitely what makes somebody, you know, kind of a founder, as opposed to, you know, somebody who's an executor, both of which are important. But the founder is kind of like willing to take this giant leap of faith and like almost like, you know, stretch their imagination or stretch their disbelief against all odds that this thing is going to work. So I think that's critical. I think and part of the value of having co-founders beyond obviously, you know, having people who can help you think through all the hard problems and actually execute, you know, just be another pair of hands. Doing all of, you know, like you're going to wear so many hats and building the company in the early days. And, you know, if you wear 30 hats, well, if you have co-founders, maybe you can like divvy those 30 hats up. So each only has to wear 20 or 10. But I also think another part of it is just the emotional, you know, kind of the sharing of the emotional toil of constantly being in this uncertain phase of the company. Right. Before you've actually hit that real, you know, growth curve and product market fit. Like it's a very nerve wracking experience. Even if you have conviction about, you know, the town, you know, you wake up day to day and you do sometimes wonder, you know, what have I spent a year of my life or even six months of my life on. And so I think having founders that are really there as your partners in crime and kind of emotional support throughout the process is also critical. And when was the moment when you knew that air table was going to be big beyond just your own conviction in the vision. When did that occur? Did that occur before you launched. Yeah. I mean, no, I think there were there were like, I'll share a few of the key milestones. And I don't think, you know, I think there's always still questions of how big is it going to be right. You know, I think. At this point, you know, obviously we have a fairly scaled business. We're doing real revenue. And we have, you know, kind of larger enterprises than we probably could hope for in the earliest days, you know, this soon, using the product in really, really substantive ways. Like, you know, in the case of Netflix, for instance, it's wall to wall. Effectly, and we power a lot of really important, you know, business processes for them. But, but even now, you know, I think like we don't take it for granted. I don't think we sit on our laurels and say, Hey, we're for sure on the path to become, you know, a Microsoft size company. I think there's a lot that we're going to have to figure out and fight for over the coming years. So I think it's always, you know, I think you kind of at every phase kind of there is a moment where you're like, OK, I think finally, like I feel conviction that we are, you know, we've gotten to this phase of the company. And sometimes there's a lag where, at least I've always been a little bit not a pessimist or a cynic, but like just kind of, you know, somebody who is more conservative in terms of, you know, how I think about the company, how I describe the risks to investors, for instance. And so, you know, for me, it always takes a little bit of time to sink in to let sink in, you know, that we've actually kind of for sure achieved, you know, this level of success as a business. But, you know, one of the earliest, you know, kind of real unlocks for us, I think was, you know, literally just we didn't even have a working billing system in the earliest days of being a public product. We launched the thing. We kind of faked a payment entry form. We wanted to convey to the market that we were a real business. We got a real pricing model. You know, and therefore you could trust us. But we didn't actually bother to build the billing logic. You know, to actually start collecting payments and, you know, charging people on a recurring basis. And so we basically think to this like payment entry form, you actually could put in your credit card and we would collect those details and strike. But we weren't actually charging people's credit cards. And I think there was this like big moment of truth when we started seeing people actually put into their credit cards, even though we weren't there was no reason to upgrade. We didn't actually gate any functionality in that like super early time. But people and real businesses, I remember seeing like real company names pop up and being kind of like amazed that people would, you know, kind of voluntarily enter in their credit cards, thinking that they're going to pay real money for a product. Right. So I think that moment of not only can we get people to sign up for the product and use the product, but also like to pay for it. I think that was a big leap. And then once we started actually billing, you know, doing real billing and then started seeing the revenue actually grow in a significant way. I think hitting like the, you know, million dollar air, our threshold was was probably a significant milestone. You know, obviously hitting like 10 or 20 million ARR wasn't even bigger one and kind of I think made us feel like, oh wow, like this thing is scaling. There's a real like business that we're building here. It's not again, just kind of a product that has engagement, but can't, you know, there's also a business. There's also monetized ability to this product, even though, you know, some might argue that, you know, why would somebody pay for this product when you can, you know, when the status quo is spreadsheets, which are free. Right. So I think, you know, we definitely, and we still feel like there's a lot to prove going forward. You know, can we actually scale this to become a billion dollar revenue business? That's kind of our next big, you know, target that we want to achieve in the next five years. Can we go and actually kind of also deepen the capabilities of the platform and start serving even more complex use cases? And can we build an ecosystem around the business? I'm going to go to questions in a minute, but all these examples how we are after the product launched, but for those, those three years, you never had a moment where you said, oh, this is going to be big. And I should stick it out because I do think founders also wrestle with whether to give up or not. And I want them to get a cue as to when you know not to give up if you're pre-product launch. I think the, the cost of like the, you know, the user feedback was pretty critical. I mean, I would say like the biggest moment pre-launch was we actually got, so we have kind of a very janky back end system working. And I think it was so janky that literally we would deploy a separate instance of air table onto a different like server for each, you know, customer, right? That's how we isolated different customers instead of having a multi tenant system. And so we deploy air table to a different service, kind of nightmare to manage because we'd have to, you know, go in an SSH into each, you know, kind of server independently and unlike, you know, kind of make updates or changes whenever whenever we update the code base. But, but I think, you know, we were actually able to get a few real customers. They weren't paying us. But the fact that they were able to actually shift really valuable workflows onto air table. Like one of them was a nonprofit that started using air table as an alternative. They were otherwise going to consider using Salesforce to manage their donors and their volunteers and the programs. And they really didn't want to do that because it would have been really expensive to hire a Salesforce admin to come in and build, build out their setup. And they would have been, you know, helpless to make changes themselves. The UX would have been slower and less intuitive for their employees than they would have wanted. And so they actually really wanted to use air table despite our, you know, kind of fair warnings that the product was super alpha, right? And they actually started using it and honestly was probably pretty buggy. I don't think we ever lost data. But like they were using it in a very, very raw state. And the fact that despite the buggyness, despite the rawness, they were actually getting real value of it. And they actually got really excited about committing to use it. I think that was, you know, kind of this really exciting, you know, kind of early milestone. And then, you know, we probably got other, you know, customers like that before we launched publicly. You know, and then after that, you know, I think just just seeing more customers come in very organically and do the same was was really a heart. That's terrific. I'm going to go. Thanks, how are you? I'm going to go to the questions from the audience. So this first question is to what extent do you think that air tables ongoing growth and success thus far can be attributed to the quality of the product itself rather than an ability to effectively sell the product? How do you balance these separate but important components of growth? Yeah. So I think, you know, until very recently, it would all, you know, it should all be attributed to the product in the sense that we didn't have. A very so I think we hire first sales person in either 20s probably 20 late 2017 if I recall correctly. So it was well into having launched the product and we were actually doing real revenue. I think we didn't hire that person until I believe we were already out around 10 million in ARR and you know, 10 million while while, you know, kind of so early days as a business. Like I think is a sizable amount of revenue. And so, you know, and it was growing organically. So even if we hadn't hired that sales person, it would have continued to grow. And even to this day, you know, I think half of our revenue is still completely self-served. So people just signing up the product organically, figuring out how to use it on their own pulling out credit cards. And you know, not really the result of sales. And even some of our sales or a lot of our sales revenue today is also the beneficiary of organic adoption of the product. Because, you know, these users, especially within companies or enterprises, are organically adopting the product. And at some point they may ask to talk to sales to negotiate larger scale license or to ask questions about, you know, enterprise functionality that's only available on the sales touched plans. So I think it's been, you know, still kind of the primary, you know, reason why we've grown. Going forward, we do want to put more thought around, you know, driving growth more proactively through sales and marketing. And so, you know, I think there's a huge market opportunity for us of, you know, every company, every enterprise could be using air table. And we could either wait for them to organically discover and adopt it on their own. Or we can find ways to profitably go and target them through sales and marketing. So that's definitely something we're going to do. But I also think in the long term, having a really great product matters a lot. I mean, you know, we're not going to become a really large business. Unless a, we maintain differentiation via product animation. So at some point we're going to have competition that tries to catch up to where the product is. They can replicate everything that we have to date. But the, you know, the key is going to be for us to keep, you know, to be a moving target and to continue bolstering the functionalities of products so that at any given point, we are the best product. We do have this edge and this lead against competitors. And then I think the second thing is, you know, that's kind of how we're going to unlock more tam ultimately. So, you know, we're going to unlock new use cases, new customer types going forward by continuing to invest in the product. And for us, there's kind of this interesting challenge of it's not just about making the product delightful. It's also that we have to build real functionality that actually enables that, you know, those other use cases while at the same time, I do think usability, delight, etc. Is also critical or else we kind of lose that, you know, that kind of binary threshold, you know, kind of clearing ability that we talked about earlier, which is if the product isn't intuitive enough, intuitive enough for people to adopt and figure out and want to use on their own without having to read a giant manual or hire an administrator or a consultant to set up. Then we've instantly switched into a different category of product and the adoption model is going to be completely different. And frankly, we lose a lot of the magic and the growth engine of the business. So, balancing those two especially in this kind of genre of bottoms up adopted, you know, but B2B SaaS, I think is challenging. And also really important. That's excellent. Thank you. So there's a question about how essential or non-essential do you think an MBA is for an entrepreneur? I'm not sure if you want to comment on that. Yeah, I have to think that one. I mean, I personally didn't get an MBA. You know, my co-founders, Andrew and Emmett did not either. So, you know, data point of one for us at least, it wasn't an essential factor. That being said, I do think there is a lot of value to the MBA style of thinking in a way. You know, I think what I described earlier in terms of trying to vet out the risk factors of the business, kind of fleshing out the business plan instead of just coding up a product and kind of focusing on the UX, I think that is a really important skill set. I don't know that, I mean, I think you can gain it from actually getting an MBA. I think you'd probably also find a lot of materials, read a lot of the business books, you know, et cetera, that teach you that same thing without necessarily going through the MBA program. But I do think that that perspective of business strategy is crucial. And maybe, you know, I think there was a point where, you know, during the Web 1.0 bubble, there were a ton of MBAs who were kind of flooding into the startup environment. And then I think, you know, after the Web Bubble collapse, it almost like, went full circle the other way. And I think there was almost like too much of anathema against MBAs, right? There was also to sustain for MBAs and kind of this reverence towards, you know, engineers, or pure engineering talent. And I feel like now, especially with the rise of, you know, B2B, you know, SaaS companies, Fintech companies, et cetera, these companies that are not just about building a beautiful product or a usable or, you know, kind of a viral product, which doesn't require as much MBA thinking. You know, but instead, like, you know, you're building a real business, you have to think about strategy when you build something like a payments or a Fintech company. I think that the pendulum has once again swung to a balance where both are important, right? And so, you know, ultimately, I think it probably doesn't occur to get an MBA. And the skillset underneath it is crucial for sure. How significant was your one-year stint at Salesforce? Would you recommend people get they stint like that before they do something entrepreneurial? It was critical for the formation of AirTool. So, you know, I think I was in a very fortunate position within Salesforce where I got to learn a ton. I think partly that that was a result of, you know, coming in through an acquisition, you know, having great mentors while there. But I also just think, you know, going to Salesforce and we were sort of intentional about selling our company to Salesforce as opposed to, you know, being acquired by, for instance, a consumer internet company. Because I just, you know, had this excitement or wanted to learn about, you know, B2B software, you know, SaaS, you know, cloud, you know, kind of cloud in general. And so, I thought Salesforce would be a particularly fertile round to learn from, as opposed to, you know, kind of one of the big consumer internet companies. And it turned out to be totally true. Like, I just learned so much more than I ever could have, like, there's no way I would have gotten the insights that were critical to the formation of AirTool, you know, if I didn't work at Salesforce. So I think, you know, kind of getting Peter Thiel describes it as secrets. And I think it's very valid, like, you know, ultimately, there's got to be some reason why you're going to become the founder who creates a company that, you know, nobody else could, right? And maybe it's, you know, it's usually you have some insight or maybe you have some talent that allows you to have an edge. But one of the best ways to get that insight, to get that secret is to go and work within some other company that especially is aligned with your interests, right? And you can go really deep into an area and have some imaginative leap that nobody else did. For me, it was seeing the power of the Salesforce platform and then realizing, hey, what if I could go and basically, you know, consumerize this or, you know, in kind of the Clayton Triton sense, low end disrupted with a product that is massively more accessible, you know, but even if it doesn't have all the same power and bells and whistles as, you know, the original did, right? And so, and that belief on that, on that thesis, that was a belief, that was a vision that you had internally, it wasn't like a focus group that told you to do that. It was, it came from within, came from within the founders, right? Yeah, I think often the best, I think ideas do come from having, you know, tangible, you know, context or insights, right? Just for me to understand Salesforce's app platform and how it worked and how powerful and how valuable it was, but then to have some leap, some creative leap of imagination that no focus group, no deterministic process, you know, you can't spreadsheet your way into a calculation that shows you this is going to be it, you kind of have to have that leap of faith and imagination. That's so good. Because you are the poster child of the low code movement, I'm going to ask this question, how can aspiring founders who don't necessarily have the skill set to code enterprise grade software succeed in their entrepreneurial endeavors without funding to hire people? How important was it to have a co-founder that can do more technically beyond prototyping, especially in the early stages or at what point did you have to hire that? It's a great question and I think the answer has changed a lot over the past 10 years. I mean, when I started, I just, I came to the belief that it would be really, I actually tried to go and find throughout college, I think, you know, people to team up with who were better coders than me. And I would focus on the idea and kind of the business strategy and like, you know, somebody else would focus on the coding. And then I just realized, at least for me, at that point, I wasn't going to be able to convince anybody to like code on my idea like, why are they going to believe me? And why do I get to come up with the ideas? And so I realized it was really essential, at least for where I was, to just go and become proficient at especially web application development. I had learned some C++ programming in high school, just kind of audited tactically, but decided it was really important for me to be able to code up any of my own ideas at least to prototype form. Because otherwise, it would just be too hard to convince somebody else to do all the work for me. And to communicate the idea even effectively without a prototype. So I just committed to becoming a proficient, you know, kind of app developer, you know, because I didn't think it would be feasible for me to, you know, it would be an easier path for me to learn how to do that than to like go and convince somebody to join me. That being said today, I think the landscape is a little bit different and I think especially for an idea that's not a pure software place. So air table is a pure software play in that, you know, our entire competency is building this fairly complex piece of software that we sell, you know, on a license basis, right? You know, I think there are other types of ideas where the innovation is more from like a business insect, right? Like let's say you want to create a marketplace for tutors, right? Or it could be a marketplace for childcare or whatever they be. The crucial insight there may not actually be in like how the app is coded, right? It may not be in any kind of special software sauce, but more of like some insight into how to attract better, you know, the talent on the supply side for tutoring, right? Or how to better vet them, or create a better rating system, etc. And so I think in those businesses, there are now like rate low-code apps, where we're kind of platforms, you know, there's for instance, bubble to build kind of interactive front ends or webflow, etc. Air table certainly is used by a lot of these kind of upstart companies as a backend. You can do things like, use things like Zapier to kind of, you know, create, you know, kind of logical workflows so that, you know, every time, you know, a new tutor signs up on the platform, you can automatically send them an email or, you know, or do something, you know, post a message into Slack for you to approve their, their, you know, their sida, or whatever you'd be without having to code that with lines of code yourself. So I think there are more low-code tools now than ever before to kind of get, you know, especially a non, or kind of a more business-oriented idea, you know, off the ground without necessarily having a full-time program. Terrific. There's a final question on equity dilution on what's, what how should an entrepreneur decide on the amount of equity they should give up on precede or seed rounds? Yeah, I think the short answer is, I think it's just, it's all kind of a little bit relative and, you know, the valuations and therefore the amount of dilution you have to absorb in the early rounds, it's just changed dramatically from the time we started Air Table to now, right? So to some extent, you're going to be at the will, whim of just the market conditions and, you know, even if you were the best company, you know, back, you know, 10 years ago, you were just going to get a different valuation, almost by an order of magnitude, maybe more than you do today, right? I think if I were caught correctly, Dropbox raised their seed round at something like a $4 million, you know, kind of valuations, right? And I think probably today they could have raised even with the exact same level of progress and team and, you know, product, you know, at 10 times that, right, for their seed round. So it just kind of depends, I do think what actually matters more than dilution is, you know, the dynamic of investor expectations and value ads. So finding the right investors who are going to be aligned with your vision and the timeline it's going to take, right? The fact that we raised from investors that even though we gave up a lot of the company early on, we're patient and didn't kind of put a lot of pressure on us to launch too early or to sell the company when we hadn't launched after, you know, kind of two years or, you know, I think that actually ended up being more important in the long term than the marginal, like 10, 20, even, you know, 30 percent difference in dilution that we could have taken or not taken during that time. The entrepreneurial thought leader's series is a Stanford E-Corner original production. The stories and lessons on Stanford E-Corner are designed to help you find the courage and clarity to see and seize opportunities. Stanford E-Corner is led by the Stanford Technology Dentures Program and Stanford's Department of Management Science and Engineering. To learn more, please visit us at ecorner.stanford.edu.