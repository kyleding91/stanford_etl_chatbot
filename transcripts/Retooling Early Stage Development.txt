 You were listening to the Entrepreneurial Thought Leader series, brought to you weekly by the Stanford Technology Ventures program. You can find podcasts and video clips of these lectures online at edcorner.stanford.edu. It is my sincere pleasure to introduce our first speaker of the year, first speaker of the quarter. Steve Blank, Steve is a fabulous person. In fact, I had an opportunity to spend the last hour with him chatting about his career. And I promise you, this is going to be incredibly enlightening talk. Steve has been an entrepreneur for 30 years. He's been involved with eight startups. And I believe that four of them, he's been a founder or on the founding team. So he has lots of different experience, both of fabulous successes and some interesting failures along the way as well. And he has recently, well, recently retired from that, but he's doing a tremendous number of other things. He works here at, as part of the Stanford Technology Ventures program as a professor, as a consulting professor. And in addition, he does a lot of community service. He is the chairman of the California Audubon Society. And also Governor Schwarzenegger appointed him to the Coastal Commission. So I'm sure you'll hear about some of these things. With that further ado, Steve Blank. Thank you. Thank you, Tina. Though when listening and that introduction, it makes me realize that I'm going to be an introduction, it makes me realize that eight startups, 30 years, means I'm a slow learner. That's a joke. And hopefully it will only take you one to three startups before you could be standing up here and we could be telling your story. I don't think my story is that much different than others you'll hear, but let me share a little bit of my background with you. My parents were immigrants. A bunch like a number of you, how many of you weren't born here in the United States. I'd say it's about half or two thirds. They came over in the early part of the 20th century to seek a different life for themselves and their families. They grew up in New York City. I grew up in a 600 square foot apartment in New York. And during the Vietnam War, I spent four years in the Air Force, two of them in Southeast Asia. And so my background at your age was I was doing something slightly different, which maybe involved a little more chaos and a lot more uncertainty. But for me, it was actually, I think, a wonderful training ground for entrepreneurship, which by definition is chaotic, unpredictable, and will change for a minute to minute. And actually, to be honest, after the Air Force and Vietnam and Southeast Asia, nothing I faced in entrepreneurship was ever that chaotic or challenging. And I'm suggesting that you all enlist. I'm just making an observation about what the struggles are for those of you who will actually going off and starting your company. It's by definition unpredictable, which is maybe a recursive definition. I came out to Silicon Valley in 1978 and joined my first startup called ESL, which was then bought by Tier W. And its only claim to fame was the founder Bill Perry became Secretary Defense. And I think it's now still part of the Hoover Institute. My second startup was ILOG, a semiconductor company. And in there, it was interesting. I actually started talking to customers and end users. And our customers were computer manufacturers who were trying to design our products in. And the end users were engineers. And this was my first experience in a marketing department trying to understand what it was that would convince people to use their product and buy it. My next company was Convergent Technologies, a workstation company. And this was the first place where I encountered something called an OEM sales channel, where we sold in directly. We sold to other companies who put their names on our product. And then they added some value or not. And we sold it to their customers. My second chip company came after that. It was a company called MIPS Computers. It started in the offices of Mayfield, which venture capital firm, Stelon Sandhill Road, with John Messer, a Skipsdritter, and a very junior associate professor named John Hennessy, which some of you might have heard of. We all believed John actually had another career ahead of them. The bets were absolutely 100% that John would end up at Kleiner Perkins' Adventure Partner. And he fooled us all and he got a much better job later on in his career. After that, I did a super computer company called Ardent. In the customers there, we're universities and R&D labs as customers. After that, my first graphics consumer company called SuperMac, it made Macintosh Perifles. Again, another indirect channel, but this time to consumers. A video game company called Rocket Science Games. And this one was a great lesson. Since Rocket Science was such a deep crater, it's left its own aridium layer. And they'll be finding it 65 million years from now as well. Huge crater. And out of failure come success. I took everything I knew from Rocket Science and its failure and helped start a company, which actually started my living room called the Piffney, which was an enterprise software company. And three other great founders, one of which I worked with for three separate companies. And we took that public in the middle of the internet bubble. And my best skill was knowing when to go home. I retired the day before the IPO went effective. In September 99 saying this bubble can't get any bigger. I was off by six months and went home. And now I'm on career two up. And career two, what Tina was alluding to. I retired in 99 as an entrepreneur and now teach. And what happened was I had time to think about, finally in 1999, about what happened in the previous 21 years. Excuse me, I'm going to take off my jacket. I realized that when I looked at what I had done and what other entrepreneurs had done, that there was a pattern. And it was interesting thinking about what was going on with startups. I realized that traditional ways to think about startups. Have an idea. Raise some money. Do product development. Go through alpha test, beta test, and first customer ship. Was the canonical model of how entrepreneurs thought about early stage ventures. In fact, in my class, I kind of used to ask, can anybody draw this model? And I used to say, even the waiters in San Francisco could draw this model. Tell somebody raise their hand and said, well, we're waiters in San Francisco because we used to be CEOs of .com companies. So I no longer make that joke. But the canonical product development model, idea, raise money, develop, alpha, beta, first customer ship, is the one that this valley grew up in. And when I looked back at it, I realized that it really sent me up for a fundamental question. Is if you all follow that model, why is it that some companies are opening bottles of champagne at their IPO or at their acquisition? And others who almost did the exact same rules are selling off their furniture. What was the difference here? And is there any way to predict other than you got to work hard and all the war stories you would hear? Is there any way to predict successor failure? And even more importantly, was there any way to reduce risk in early stage ventures? Because I had done, not only eight of them, I had sat on a ton of advisory boards and by the end of my career I was investing. And these patterns kept coming up. And I'll tell you what the biggest pattern was for me. And observation number one was that most entrepreneurs, whether they were engineers or the CEOs or part of the founding team, were focused on one thing. And that was getting to launch in first customer ship. The board was driving them to that. Engineering was driving to that. Everybody was focused on, that's the box we're heading to. Well, that's interesting. Product development. Concept, develop, alpha beta, first customer ship. I started asking a heretical question. Whose diagram was this? What's the product development diagram? Well, that's interesting because in the product development diagram, we seem to be hiring and staffing sales, marketing, and business development people based on the timing of events on a product development diagram. Turns out if you look at canonical model around alpha or beta time, you start hiring marketing people, start getting ready for launch, start doing positioning and data sheets, maybe hire an ad agency, start writing blogs, start communicating, all heading to that big launch event. And if you're doing something not on the web, how many of you are doing or will do non-web products? Okay? How many are you going to do web products? Assume that there's a world outside the web. You start thinking about, maybe it's time to hiring salespeople, start staffing, getting early customers. And if you're thinking about business development, you start thinking about deals. The observation that I had was this was all heading for a party. What do we do at first customer ship? Anybody know? What? Party. Party. It's a party. Who's having the party? Anybody know? Anybody ever been in a company that had a first customer ship party? Anybody? Trust me, a whole company party. If you really think about it, who should be having the party? Who's done at the end of product development? Sales done? No. Marketing done? No. This they have done. Not really. The only people who are actually done is engineering. But somehow we end up inviting everybody else to engineering's party. While that might seem a little facetious, it actually drives a lot of company culture, spending, burn rate, et cetera. I realized that this might actually be a fundamental problem with most startups. Is that actually startups were burning money by starting sales and marketing and business and development activities, either on the web or physically in the real world, way too early? Because if you think about it, here we are in Silicon Valley. At least those of us not, those of us physically here, not those watching on TV. And for those of us here in the valley, we take technical risks with products all the time. Investors put huge bets on all of you to do innovative things. Anybody have any idea what percentage of startups fail because their technology fails? I mean, I do not think it's over 50% of startups fail because the technology didn't work. Over 50% over 25%. I mean, I think it's over 25% fail because technology doesn't make it. Turns out less than 10% of startups fail because the engineers were just wrong. Turns out most startups and I'll leave life sciences aside for a second. Most startups in every other field other than life sciences, over 90% fail because they didn't find a market and customers. Full stop. Big idea. Well, if that's the case, and go ask your favorite venture capitalist or next guest and you're going to have a lot of them in this class and other class, go ask them. If that's the case, why is it that we have tons of methodologies to measure and help us getting the product right, but no methodologies to help us get the stuff about customers and markets right? Anybody ever been in a company in product management or know what product management people do and some people in the back of the room? There's entire tool sets on how to manage technology risk. Tons. But there are almost no tools to manage customer and market risk. Well think about this. You're an entrepreneur. I have a great idea. Good. Let's go build it. Oh good. Let's go raise money. Oh, let's go sell it. You want the next step is? Oh, we're out of business. Because most of us grow up reading these wonderful stories about all the people who made a ton of money at Google and Facebook and other companies that like these are great examples. Do you ever notice they don't bring in the people who you didn't hear about? Because you wouldn't come. How about bringing in the people who said, you know, I created my last seven companies. Let me tell you why. You'd go, well, I don't want to be one of those. I want to be Google and Facebook. That's whose presentations I want to hear. Any idea what the ratio is between the Googles and Facebook's and other startups? Now how many companies fail every year in Silicon Valley? And then I want to guess. Know what the ratio is? I'm sorry? Over a thousand to one. Now one of the nice things about human nature is every one of you is going to be convinced that you're going to be Google and Facebook. You have to be, right? I mean, that's the passion of an entrepreneur. You have to be convinced. You know those other 999 companies, they were just idiots. I'm much smarter than them because I have a better idea and we're cool. But actually life isn't going to be like that. And what I'd like to offer today is some heuristics or rules about how to reduce risk for companies that are going to depend on finding the right market and getting lots of customers. Or else it's just a random walk, just brownie in motion. Does this make sense so far? One of the things I observed, can we turn on the slide, the projector per second? Thanks. Is that if you imagine the product development diagram, you know develop alpha, beta, first customer ship, think of that as an internal engineering methodology. And in reality if you're doing a web based company, I'm sure hope and you're doing some type of agile methodology where you're releasing often, hopefully several times a day. But outside the building, you should be thinking about how do I turn every one of my hypotheses into a fact about customers? So let's start with that. What's the real definition of the word hypotheses? You might know. What's a hypothesis? You went to Stanford, so you're allowed to use that word to your parents. But what is it really? Anybody come on, what's a hypothesis? Remove the educated. Remove the educated. Again, you went to Stanford, I'll let you use the word educated. But you're guessing. Unless some of you have been working in a specific domain for the last 20 years or so, the odds are that anything you're thinking about customers and markets are nothing more than a guess. And you go, oh no, the buddy's in the dorm, they like what I did. And look, I put it up and I got 300 hits. It's not a business. In fact, the eristic is, if you can't get 10,000 hits like in Silicon Valley, like your server's not connected. But it's not a business. The real notion is, how do you take your idea, size the opportunity and figure out whether your hypothesis, your guesses about customers, about the problems you're solving, about your product are correct. And the first thing I teach students and coach young entrepreneurs is while your hypotheses are great, have all of them you want. You got me excited. The next step is get the hell out of the building and test them. On a web company, you could do that virtually. You could get users to click on your page. If it's a physical product, you physically leave the comfort of your dorm or your office and you go out and you talk to people. And the first step you want to do is leave any notion of your slides or website or whatever at home and go out and test some of the fundamental hypotheses that you have about your business. And you have two that are just absolutely essential. One is in any company that you're making a product or service, you believe you're solving a problem or a need that a customer has. Great. I'll believe you. Now show me that there are customers out there who have agreed with you. Who have said, yes, this really is a problem and it's the most important problem we have. And in fact, it's so important we'd actually pay you money or use your service. Or if it's not a problem, you could convince me that it's a need I didn't even know I had. And I'll rush and go use your site or buy your product. And while you're out there, by the way, you could find out millions of other things about customers. And this is hard because if you're a passionate entrepreneur, you look at somebody like me and go, Steve, you don't get it. I'm right. I'm passionate. I got it. I've nailed it. I've talked to 20 people. They're all over me. I'm done. We're launching. And I'll usually go. Great. So this ought to be a very quick exercise. In about 20 minutes, you could go out of the building or get some people to click on your website and confirm just what I said. For those of you thinking about companies and particularly those of you building web companies, you could run this exercise in a week. And trust me, it will be very sobering. The goal is not to convince you not to do a business. The goal of a customer development process is simply to take the hypotheses about your business and product as is and see if there's customers in a market outside the building. I love doing this because it's the most sobering exercise that an entrepreneur can do. Because if you're a great entrepreneur, you're driven by passion. I'm right. Let's go. Let's move, et cetera. This is not about convincing you you're wrong. This is in fact about this first step, about putting you into continuous contact with the customer. Continuous. Great ideas are not built into companies in a dorm room. Great ideas are built into companies with continue. Act in feedback from customers. The second step is once you actually have some input from customers, the most radical thing I make companies do is actually sell the product. Now, web product, you could decide you're going for eyeballs for users, you could go for ads, you could actually decide to do something radical and actually charge money for something. For a physical product, that's almost a giving. Before we do anything, let's see if the founders could go out, not a sales team, but the founders can go out and generate some revenue with this company. That's what I call customer validation. I want you guys to actually sell something. How many of you were an engineer? How many of you have actually sold something? Not just a pencil, not Girl Scout cookies. Tina asked me earlier, what was the best advice I think I've ever gotten or given? That was, even if you're an engineering, if you decide you're going to be part of an entrepreneurial startup, if you've never been out trying to sell your idea or be part of a sales team, you will never, ever be a great entrepreneur, ever. I really want to get all of you angry, you're a great engineer, great architect, great that's great, but you'll always be dependent on someone else. Standard engineers understand what customers need. I don't mean you need to learn how to go to dinner and drink and whatever, but you really do need to understand how people buy, why they buy, how they process information, and how they think about your product, and also how they think about the problem you think they have. The two last pieces here are customer creation and company building. They're kind of interesting. Customer creation is about how do we create demand for companies? Now, if you read TechCrunch, if you read some other blogs, what's another good technology blog? It's a lot of them. It's an engagement, it's an engagement, etc. Isn't it cool if you start your company? The first thing you do is like TechCrunch mentions you. Wouldn't that be the coolest thing ever? I've got to tell you if I'm on your advisory board or board, I'll break your arms. And you go, whoa, what's that about? Why would I say something like that? For me, any type of press, any type of PR, any type of talking about your company is not done over here. Because on day one, your hypothesis about what your company is about, what service you're offering, what pricing, whatever, trust me, will be radically different after you have some contact with customers. And while it might make you feel good, being able to show your mother or father a picture of you in the press or a mention, I'll do that for free. I'll take your picture, we'll hold up the New York Times and then we'll send it to your clients. But I'd rather any press you get for a company is part of a strategy not a random tactic. And that's typically done after you've understood what business you're in, who your customers are, and how do you need to scale demand for your company. The last step in customer development is about company building. And for me, company building is the Shakespearean tragedy of an entrepreneur. Anybody ever hear stories of entrepreneurs whose company has gone public and they've been thrown out of it? Oh, a couple of hands. A lot of hands. It's almost a Lauren Silicon Valley. Gee, the VCs took their company away from them. Oh, they lost their company. Oh, they were great entrepreneurs, but then they brought in the suits. Almost a Lauren Silicon Valley. News out that what most entrepreneurs don't understand is what companies are becoming successful, all the skills that made them great entrepreneurs. May or may not be useful in the next phase of a company and in turn, scare the heck out of investors. Because while you might be great at starting and finding new businesses, typically when your company gets to this phase, you're growing the business and you're doing something repeatable and scalable. Might not be the same skills that worked early on. And I call the Shakespearean tragedy is because world class entrepreneurs here are not necessarily the same people who build the company. And yet another irony is the largest technology companies are run by their founders. Microsoft, Oracle, Jobs at Apple. Interesting conundrum. But then there's a gap in between. So for me, this process turns out to be something that's now being adopted in Silicon Valley called the Lean Startups. I'm going to hear of a venture capitalist named Mike Maples. You guys ever see any of Mike's videos? Mike's a good example of a VC who actually will tell you that 500 grand is the new 5 million. That startups in fact need to conserve their cash and are able to do things in a way that 5 or 10 years ago just would have been impossible with hundreds of thousands rather than millions of dollars. And a Lean Startup combines customer development with agile methodologies for internal development and puts them together and very quickly iterates customer feedback and massive numbers of releases in a day and a week. So that's some of the process and methodology I wanted to share with you. But there are some war stories. I don't like to share with you as well. And some of these are about customer discovery. When I first started at conversion technologies, the founder, Alan Michaels, had left Intel and he believed he was going to be making a single board computer. Computer that fit on one circuit board back in the early 1980s was a radical notion. And what Alan did was he went around to computer companies and said, look what I got. How many would you like? And they all kind of knew Alan from his work at Intel and said, wow, that's great. We'll take three for our DLAB. Alan went, no, no, no, I'd like you to take 3,000. And he said, first company, he went to sit down. We're looking at a new type of computer but it doesn't even have a case. It doesn't have an operating system. It doesn't have applications. It's a nice building block. But maybe we'll take three and maybe we'll license the design from you. So Alan went to another company, this time in CR and he gave him the same pitch and they said, Alan, we'll take 5,000. He said, 5,000? No, we'll take 5,000. Gave him the same start. It doesn't have a box and whatever. And finally, Alan went to the third company, company called Burrows at the time. And they said, Alan, we take 10. He said, oh, you mean you take 10 boards? Absolutely. But would you like to see my box? And they said, well, you didn't mention a box when you're, oh, let me draw the specs of the box. It has an enclosure and they said, oh, great. Doesn't it have an operating system? Absolutely, it has an operating system. What else does it have? What else do you need? Oh, does that have word processor? Has a word processor? What else does that have? Well, what were you thinking about? Oh, has one of those? Right there in discovery, Alan finally realized that what he was hearing was that what he had was good enough to get three, but was missing a couple of zeros. Now of course, he had to go back to the rest of his company, which had all seven people and said, good news. I just got an order for 10,000 computers from Burrows. Bad news is we need an operating system and it said applications. And his co-founder, Bob Garrow, looked at him like he had been, you know, somebody hit this guy with a brick because he was clearly, you know, said, Alan, you know, this is like a 1980s, you just don't like off the shelf get an operating system instead of applications. And so Alan, being a great entrepreneur, said, well, where do you get them? And Bob said, we're in Silicon Valley. I don't know. 0x park, what are you going to do? Higher 0x park? He hired the head of the advanced system, the division of 0x park who came with an operating system and the guys who wrote the Bravo word processor became the convergent machine. He went from a company that potentially would have sold, you know, 25 boards in the first year to one that actually sold its company four years later to Burrows for 400 million bucks. Now that's an interesting story about discovery was that Alan was good at listening. But what's even more interesting is what happened at his next company called Ardent. Alan was now a successful CEO. In the early 80s Alan Michaels was well known in Silicon Valley, bad boy at Silicon Valley. Enter Perkins everybody wanted a fund his next company, anything he wanted to do. Alan decided he's going to build a graphics supercomputer, a cross between a cray and a silicon graphics, which in hindsight turned out to be the exactly if you were making a floor wax and dessert topping and what. It's the null set, but we only found that out later. And this time Alan Michaels was not in the field talking to customers. What do you think he was? Any idea? Second company successful CEO, where was he? In the office, who was he talking to? His investors. Who was the people in the field talking to customers? His VP's. Particularly his VP of marketing. You're a truly. And customers were saying, Steve, this is the worst combination of product features we've ever seen. But if you ripped off this piece and just gave us the server, the price performance of this stuff is really, and if you changed the vector unit to do this, it was great. Well, I went around, I went around to almost every national lab, I went around to the NSA, I went around to a lot of excitement for something about 20% different from what we were building, not completely, but different. So I went back to headquarters feeling really smart. I actually found out what customers want. What do you think happened? When I went to Alan Michaels office and told them, hey, guess what? Our baby's ugly. In fact, you're a baby's ugly. What do you think he said? You're fired. In fact, I was fired three times that day. So important, you're a stick here. If you're going to do customer discovery at all, and by the way, he never listened. He went out of business painfully. One of the wonderfully enjoyable failure sunglasses, Silicon Valley, I had two hours, I would tell you. But here's another heuristic. If you're going to go out and discover whether customers like your idea or not, this is not an outsourcible problem. The founders need to do this. Particularly, the people capable of changing strategy need to be the ones hearing good news and bad. Why? Because it's like hiring some consulting agency. Ah, what do they know? Or worse, Steve, you're just not explaining it well enough. Can we ever hear that one? Oh, you're just doing it. We just need to explain it harder. Getting feedback from customers is the most valuable thing you will do is entrepreneurs. It is not outsourcible. And if you're a technical founder, don't believe that, oh, I'll hire a professional salesperson and they'll sell it for me without you ever, ever leaving the building. It doesn't work that way. If it does, it's just pure random luck. You need to be out there and be listening to this. The other sorry I love to tell is customer validation. And to me, this is where you actually want to get some early orders. And what Alan was doing is a combination discovery and validation. And I remember at Epiphany, I realized that Schwab would probably be a perfect customer for us early on. And Mary Kelly, who was nice enough to be on an advisory board, kept inviting us in and kept throwing us out. She'd invite us in, listen to us, and keep saying, you know, this is the fourth time invited you in. You still don't get what Schwab needs are in regardless of whether I'm an advisor to you. And this stuff until you figure it out. You're engineering people just don't get what, you know, database marketing is all about. And I'm a little slow, so it took me truly four meetings to hear that. And I finally said, well, Mary, maybe I'll bring our VP of engineering up to the next meeting. And I brought my partner Ben up, Ben listened to all Schwab's PhDs in database marketing and analytics who were spectacular. I mean, the best in the business. And they finally convinced Ben, but just describing it to him that we really didn't understand something called householding, which is just a basic element of database marketing. So on the drive back, my partner Ben who I had worked with a long time, sitting in the car and just like, always, Ben doesn't say anything. Trying to back from San Francisco, passing the airport, Ben doesn't say anything. Getting to Palo Alto. Ben doesn't say anything. Our office is in Mountain View. Getting off the exit. I've worked with Ben for a while, but this is kind of a lot. And finally I said, Ben, what are we going to do about Schwab? He said, well, what about Schwab? I said, well, they asked us to change our spec or goal of customer development. There's never changed the spec. Unless, you know, the customer's really convinced us that we just missed something about the product and the market. I said, what are we going to do about the database marketing? He said, well, Steve, you obviously haven't read page five of the spec. I said, Ben, there's only four pages in our spec. He said, none anymore. Customer validation sometimes requires you to re-engineer the product. And it requires you to bring engineering in as a partner to do so. But you only want to do that when you're convinced, convinced that you understand enough about the customer in market so you're not just tweaking it for random customers. So in summary, my business career, well, it did an interesting set of startups. I think it really has morphed into something for me which is even more interesting. And that's this ability or this maybe need to explain that the way we see how early stage ventures works maybe requires a different view. That requires a view that just passion, just agility, just resilience, just all the personal skills of an entrepreneur aren't enough. They're not sufficient. While you need passion, you also need logic. And you also need to be thinking about how do I keep reducing the risks? Not that I personally wouldn't take a risk, but how do I reduce the company risk? So with that, I want to stop and take some questions about entrepreneurship, customer development process, any of my class, et cetera. Full stop, question. Thanks, buddy. Observations that had similar experiences that you start up to. I'm wondering what your perspective is on. Once you have a hard set of feedback from a few different customers and you go back to some really hard headed founders who are leading the company typically with technical background, how you overcome that challenge and what case you said the company what that business. So you've listened. But what in your later years now have you been successful in convincing founders and sometimes board members to apply more resources to fix product for the customers? So the question was how do you convince the technical founders, which I'm sure there's no one in this room who's hard headed and wouldn't listen to customer feedback? But how do you convince people that maybe this customer is trying to tell us something rather than you're trying to get the next sale? And I guess my experience says you as entrepreneurs have to buy into this and your founding team from day one. If we're having the discussion of how do I convince my team or my board, it's already too late to be honest. It's I would be updating your resume or stay around for the ride, one of the two. But unless you're doing this from day one and I mean doing it from day one saying it's an integral part of what we do. We're not doing a launch when we're done with engineering. We're actually, we might actually be done with the product and still don't have enough information or enough customers to launch. Unless we're having that discussion, it's kind of tough to add on later. It might make sense. It might not feel great, but that's how human nature works. A lot of this is about behavior, not about technology. If I'm a technologist and my model of the world is X, but we haven't agreed that as technologist I'm not spending time outside the building, nothing you say is going to convince me. Now, what I ended up doing is part of this model is the technical people and the customer development people spend a huge amount of time synchronizing with each other. And half the time I used to get feedback that says, well, Steve, you really aren't explaining it right. If that's what you said to them, gee, you should have said it this way. Or I would say, you know what, I'm probably not hearing it correctly. Why don't you come out with me and talk to this customer yourself. And the deal always with the VP of engineering was 20% of their time was going to be spent in front of customers. Now, that's a radical notion. And that's not something you could add on later to retrofit into culture. Am I making sense? Question? You said in the beginning that there are a lot of that sort of tools or technologies to get for technology right. But there are no groups of great technologies to getting marketing and minimizing customer risk right. What would be some of the tools that come across for getting marketing or minimizing customer risk right with CRM? Do you want to return or what would be some good technology? You know, one of the, this is a great question. One of the problems with entrepreneurship and I'll, I think I'll kind of answer your question, is that we treat startups as junior versions of large companies. I mean, just fundamentally, that's wrong. Think about it. When a startup, like a big company, we say, oh, big companies have VP's or sales, we need VP's or sales. Be companies have VP's and marketing, we need VP's and marketing. This is just a junior version that if we water correctly, we'll grow into a big company. This is just like IBM but smaller or just like Google but smaller. It turns out that until you have your first customers, all the tools and tricks that large companies use are divided by zero. They really don't work in small startups because you're actually a different type of animal. And so, and I'm just riffing on the, what, you know, should we use Salesforce.com or other CRM stuff, that implies that you actually have a Salesforce that's just a smaller version of a larger company. And my experience is no, actually the titles are wrong. If you really want to get into it, one of the first tools I do now with startups are really VP's sales? No, you're not. You're marketing? Nope, you're on the customer development team. Holy cow, what's a customer development team? Well VP's sales assumes that all we have to do is drop in an additional sales person and sales will go up at a fixed increment. Customer development says, we don't even know who our customers and markets are. So therefore the titles that says VP of sales, which implies we're scaling a sales organization, is just wrong. I don't know if that answers your question a little orthogonally, but I just want to make that point. All right, question. How do you prevent future items? That's a great question. Question was how do you prevent future items? I just taught a case this morning. It's the in-view case of any of you seen it. The story talks about the founders of a virtual world company who just came from there.com, which had spent $40 million and five years in development, that's what the case says. And they finally released the product. And guess what they found out? Oops. Oops. They were wrong. Not that they were stupid or bad or evil or whatever. They had spent five years with a vision and adding every possible feature and then when they were about to really add some more features. The founders of that company or one of the founders after that said, hey, my experience was, that wasn't a good idea. Why don't we start with a minimum feature set? And their goal was to discover what the minimum feature set was. And then because it was a web-based product, do a actual development and do AP testing on features. And so the goal at InView was discovering minimum feature set. I'll give you a MIPS computer example of feature-ivest. I remember the VP of marketing a MIPS went out to anybody in chips, any semiconductor people in the room. Went out and actually talked to customers about this new chip, this new risk architecture. And one of the questions that engineering asked them was, go out and find out what buy-tour customers would like. Little Indian or big Indian, which was just how were the bits arranged. And the genius marketer came back and said, hey, they want both. Hey, well, that was great. Marketing came back and said both. And unfortunately, one of the Silicon guys said, oh, little Indian, big Indian, that's only a thousand gates. We could do that in hardware. And the software people said, do you understand what this is going to do for 30 years of software architecture? And the marketer said, no, not really. But stick it in. So for those of you who actually know the MIPS architecture, it's stuck with this bit that has little Indian and big Indian and hardware people love it. And software people want to find the idiot marketer who stuck it in. Hey, that was feature-ivest. Right? It was like, well, I don't know. And every one of the features. Now, in hindsight, we're still arguing 30 years later whether it was a good idea or a bad idea. But the answer to your question is, go for a minimum feature set. And you won't know what minimum feature set is inside the building. It will just be an argument about engineers. I don't want you guys arguing with each other. Tell me who the archetype is of your customer. Ooh, what's an archetype? Well, give me a model of who's the customer. What do they do every day? What do they think is important? Why do they think it's important? How do they buy product? Where do they pay for it, et cetera? Once you're talking about archetypes to engineering, then all of a sudden minimum feature set just kind of falls out of that kind of discussion. Sounds your question. Good. There was another one. Yes, in the back. Can you talk more about customer development in CleanTech, particularly business to business and business to utility? I could. So the question was, can I talk more about customer development in CleanTech, business to business or business to utility? And so that's a broad subject. Probably it's on the lecture. You have a specific question in mind. Give me a. Well, I've heard of a lot of CleanTech companies who really admire customer development in terms of business to business. But I haven't heard it talked about as much in business to utility. I'm wondering if you see any types of applicability there. Or if you think with power purchase agreements and pre-sales, but it doesn't have as much relevance in a given established. So let me go all the way to the top and remind you where customer development fits. In areas where there's market and customer risk, customer development, or it's equivalent, will become, and by the time you're at a school, a fundamental part of your toolkit. You're going to have to do it. In markets where it's technology risk, again, like life science and biotech, listen, if you have a cure for cancer, do you have a customer adoption problem? Yes or no? Is there a customer adopt, I solved the, I cured leukemia. Do we have a problem in customers adopting this drug? No. Any of you in life sciences, right? Your problem is not at the end of phase three or four, right? Your problem is, was your paper published in science, nature, cell, or something else? And gee, how may VCs are lining up at your door? And it's the next 10 years of, does it work outside the test tube in human beings? That's not a customer development risk. And I will get back to clean tech in a second. Some problems overlap. Some technologies, let's take semiconductor or thin film solar cells in clean tech. Some problems are technology risk at first. Some of the things thin film semiconductor actually work and reproduce it in volume, and then become customer development problems. Gee, now how do we market it? In fact, am I ever read the E in case you know about E ink? They're now the screen inside of the kindle. For the first 15 years, E ink was a technology risk problem, though they thought it was a customer problem. They couldn't produce the darn thing in scale or in volume or at cost and figure out where they were in the distribution chain. And then in 15 years later, it's a customer development problem. Again, I'll go back to your clean tech example. You'd have to tell me, are these regulatory issues, are they marketing issues, are they customer adoption issues, or are they technology issues? And if they're customer and market issues, then customer development is the right process. If you're telling me, well, these are regulatory and technology issues, then I'll tell you this is the wrong tool to be using. Does that answer your question? Well, for some pieces of your business process, it actually might make sense. In others, you don't have to do this if that's not the risk you're trying to reduce. Make sense? Other question? What if you're dealing with, for instance, a place where people writing the checks and the engineers and the people who are in the day-to-day are not the same people? Ah, happens all the time. So the question is, you know, if the users and the financial buyers are somewhere different, you need to understand that entire food chain. So that's part of customer discovery and validation. What field, give me an example? Specifically pharma. Pharma. I mean, happens all the time. In fact, happens in pharma, happens in implantable medical devices, which is my favorite of that. Gee, if I'm going to put an artificial hip in your body, who's the customer? Who's the customer? I'm putting an artificial hip in your body. Who's the customer? Old people. Old people, really? Who pays for it? Insurance companies. Oh, well, who's installing it? Doctors. Who's the customer? Old people. Old people. Oh, one more. Who has to approve it? Medicare or Medi-D? Who else? The FDA. If I've 10K, anybody in implantable medical devices, you need a two-year process. Now life becomes really interesting. Wait a minute. We got a two-year government regulatory process. We got insurers. We got doctors. And we got old people with bad hips. Really comes interesting. So customer development might be part of that process. Gee, there's a whole regulatory process. This makes sense. And in pharma, so yes, some part might be customer development. But in pharma, you should be so lucky to have a customer development problem. If your drug is now working, you're probably sold in license to the darn thing for a billion dollars after your phase three approval. Right? Other question? Yes, in fact. I get your point on how it is important for founders and engineers to be out there in the marketplace to understand customer needs. But what often happens is that customers themselves need to be driven to accept a product. And at that time, what you really need is knowledge of the customer's business. And often as engineers as founders, you may be lacking in a certain way relative to probably a sales guy. How would you bridge that gap so to speak? Are you an engineer? No. Okay. So you're assuming engineers can't figure that out? No, I'm not assuming engineers in particular. I'm saying as basically as a product developer. See, I mean, I'm not an engineer by qualification, but I work in internal control. So we face that problem sometimes. So I have a maybe a bizarre, unique philosophy, but it's one I execute it. If you look at my career, I was never in the same industry twice. Maybe semi-conductor. There is nothing about a business that isn't rocket science to understand well enough within a certain period of time. I'm not asking you to become a heart surgeon, but it's not that hard to understand the tools a heart surgeon might need, but you won't do it from inside your building. But as the job of a great entrepreneur is to become a domain expert enough to understand the day in the life of their customer, their buyer, and anybody else in their organizational chain. If you can't do that, you are just tying one hand behind your own back. And if that sounds like too much of a burden, don't do it. And be like every other entrepreneur that goes out of business. And why are your customers by? What's important to them is past. G.I. developed a neat idea in my dorm or company. Does that answer your question? Keep you ever from out of your personal experience, ever experience something like that. You've actually driven a customer, purely by understanding his business model. Sure. It's not that I've driven a customer. It's the other way around. I've understood that I was talking in Greek and they were speaking in Spanish. But usually it's because I was talking about features and they had a problem they needed me to solve. And I wasn't talking about reservoir simulation. I was trying to sell super computers. I wasn't talking about computational fluid dynamics. And I was trying to sell them super computers. I wasn't talking about core page maker and illustrator. And I was trying to sell them desktop publishing graphics boards. Usually when you could connect on a level of what's their need, you actually get a lot further about, let me tell you about the bits. Or let me show you this great website. Does that answer your question? One last question. One last question. Has to be the best question of the evening. Best. All right. No pressure. Question. Oh, come on. Yes. So you mentioned rocket science. Yes. The company is great. It's really hard. It was so different about it. It made it totally crater. Huge crater. So here's a heuristic. In fact, I shared this with Tina for her book. If you ever start a company and three months into it, find yourself hating your customers, get out of the business. Literally, I, three months into it, realize something. All of you probably know. Even though it was one of the most technically difficult products we ever developed in my 20 years, we were in the entertainment. In the entertainment business. Video games is a hit space business like movies, books, records, and anything else. It has nothing to do with technology, even though its content is largely technology-driven. I have found myself the head of a studio. You've got to be joking. I'm comfortable with supercomputers and chip architectures and whatever. But here I was having to make choices about popular culture. And in hindsight, I was completely unsuited. And so were my venture capitalists to be in this business. There are people who are spectacular about it. When you look at electronic arts, never confuse why that business is successful because they have great technology, which they do. Wonderful physics engines, etc. They are, in fact, in a hit space business just like the movie business. Except maybe better. Does that answer your question? I was the wrong person to be running that company. And so were my co-founders. But no blame on them, all blame on me. I should have understood that and I should never have gotten in that business. And someday you'll encounter that as well and hopefully won't take you as long as it took me. So thank you very much.