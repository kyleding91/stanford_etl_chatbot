 So I'm going to be talking about entrepreneurship. I'd love to get a read on the audience. How many of you want to be an entrepreneur? How many of you want to start your own company? How many of you want to drop out to do it? What do we got? We got two. OK, between the two of you, who's going to be really excited if you do that? You're going to be really excited. Who else is going to be really excited? Your parents really negatively. Your parents very negatively, very negatively, which is the story is actually I am not a graduate, although I am here from my 15th year reunion, and I did learn that you can be an alumni without being a graduate, because I actually dropped out my senior year to start trilogy. And it was actually five of us from Stanford. Two of us dropped out. Three actually were able to do both the studying and the work at the same time and get the other degrees. And actually the other one, John Lynch, who's the other guy who dropped out, was back talking to you as a symbolic systems major. He was talking a few years back, probably in 97, to symbolic systems forum. And at the end of it, he had a little, I don't know, we'll call it a little aside. Where he explained how ridiculous it was that symbolic systems department didn't take. I think it was like Matt 104 at the time, or it was a matrix theory or something like that. And he had taken this other class, it was equivalent, and they should just give him the degree. And you got to call the next day from the head of the symbolic systems department who said, I was in that talk. And you're actually right, and we'll give you a degree. So now unfortunately, I am the only one without a degree. And I can let you know that when you do this, if you do this, nobody will support you. Your parents will not like it. They will think it's a bad thing. My mother, to this day, sends me a Stanford watch every Christmas. And says, I'm going to send them every year until you graduate. And I remember, Trilogy, when we first started doing well, and I remember the first time we were on the cover for magazine, and I sent the magazine to her, and I'm like, mom, isn't this enough? And she was like, no, Joe, there's only one thing, and it's a degree. And what you knew I was going back for my reunion, she's like, well, maybe you want to register. But anyway, what I am actually here is I am an unabashed entrepreneur. I actually think, and I have a really, really clear objective. And when Mike asked me to come talk, I thought, this is great. I talked to DTL in the past. But now I have one really clear message and clear objective today. I'm going to try to convince as many of you to drop out. And start your own companies. That entrepreneurship, and as you look at it, if I was here in the late 90s and talking about this, lots of people would probably be doing it. And with the dot-com boom, that was a thing. But dropping out has been a great thing for a long time. But entrepreneurship, whether you drop out or not, is something that you need to do in your career. It's an experience of starting your own company and a work intensity, a time that is both the best and the worst of your life. You will go from the highest highs to lowest lows, sometimes in the matter of minutes. And it is something that you guys got to do. I also would recommend you do it now, because it's the least grids time. When you're an undergraduate, or most of you guys undergraduates, most are. When you're an undergraduate getting out, you don't have a whole lot to lose. I know you think you do, and I know you think that first job you got to get is really critical, and you got to get going. And either you have to pay off loans or whatever it is. But I'm telling you, now is the time. I was just at Harvard Business School. They do a case study on us. And so I go up there and teach you to talk. And they had an entrepreneurial forum. And I sat down with them and said, how many of you guys want to drop out? MBAs, not really the risk-seeking type. None of them did it. And I said, but if you could go back and be an undergraduate, then they're all like, if I just knew now, if I just know them, what I know now, now is the time to do it. I thought I'd give you a little color about how we started some of the good, some of the bad, about being an entrepreneur, and trying to give you a flavor for it. But at the end of it, I really want to, I hope I do my job in convention. It's a great thing. We started and we believed that we could build this product called a configurator, which, well, at least back in 89, when we were just about start building it, we thought was the coolest, greatest thing in the world. People had been trying to build configurators since the mid-70s, AI and expert systems back then. We're a big deal. People tried to build them and hadn't built a good one. In the 80s, I was coming to late 80s, coming to classes, and IE271, and you had to write a business plan. So I was learning, oh, this is a good thing to do. I was taking expert system classes from Ed Fiegenbaum, and reading about, oh, all these different things. I was going to talks like this, and we had Bill Joy from Sunheadcom, Steve Jobs came and gave a talk about what he was doing with this brand new computer at the time called Next, and this is getting dating me. Most you won't know, Objective C and Objectory to Programming was brand new back then. And we thought we could buy an X machine, build a configuration engine, do it during our senior year. So then, when we graduated, boom, we'd have jobs. And this configurator would be done and everything would be great. So we started coding up, and it was five of us. We all started coding all summer. Started into the fall quarter. I actually was a student, fall quarter. And the only class I ended up passing that core winter quarter was a class that had 100% take home final, open book. It was actually about women in education. I still remember that. It was a three hour take home, and I learned everything. It wrote everything I could know down as quickly as possible. But it passed that class, but realized to get to the June goal so that we would have the product done, I was not going to be able to keep going to class. John and I stopped going to class, and we just coded all day and all night. Now, one of the things about this, and a little just piece of advice, because this is where you can learn from my mistakes. I'm not sure what I was thinking at time, but when I did this, I forgot to tell my parents. You know, I just thought, I don't know what I was thinking, because they go find out some day. So I forgot to tell them. I ended up not telling them till spring quarter. When they're like, OK, Joe, how's our, we got bigger plans for graduation. Oh, that's a really important thing to talk about mom, dad. Yeah, anyway, I dropped out. And I'm working on this really great thing. Awesome. This is like going to be this product that we're building is going to be just, it is going to be world-beating. It's going to be awesome. And it doesn't work. It doesn't work. There is just no amount of enthusiasm to get some excited about that idea. And what was done was I wasn't going to change. So summer came, and we were going to build this in a year. And how many of you guys actually are CS? Is there any program that ever has been designed in your head that could take more than a year to write? We didn't have it. We thought a year, you can build anything in a year. Year is plenty of time. So a year comes and goes. We're not done. We thought, hey, our friends, like, after they graduate, they're a lot of more like going to Europe and getting ready before they started their job. And so we said, OK, well, we'll just finish during the summer. We'll just finish during the summer. And then once we're done in the summer, then it will be like starting our job in fall. And we viewed that we were only three months away. Because once you hit your year deadline, you got to be really close. So we're about three months away. We coded through the summer. This is where having friends, very important. You talk about building networks at Stanford. Critical importance. Because you're going to have to have a place to live. Because you're a student housing. And so literally, John was his friends at Redd this house. And he's like, give me the garage. I'll give you $50 a month. This would be a great place to live. And you can learn to bum off your friends who have housing. And so we did that then, fall came. And we weren't done yet. And now we're starting to heal the nervous. And you're thinking, I wonder what we should do. So we thought, well, let's go raise some venture capital. And at the time, we thought the reason San Hill Road down the street was there was for budding entrepreneurs like us. So we went and started talking to some venture capitalists. And you go to the first one and they said, well, OK, well, one of the great first rules of venture capital is we'd love to back and experience management team. So guys, tell us about your experience. I looked at, you know, John, I was like, well, did you manage the food club? Right? You were part of the suite, didn't you? Anyway, because I can't. No, I didn't. So unfortunately, we did not pass the experienced management team test. And so we went back and we're like, OK, well, we need a better pitch. We need to learn more about this. Luckily, there's a lot of ECs, so we can practice. And back then, this is back before you have PowerPoints and everything. You have to make all your own slides and have a projector and stuff. So we put a slide in there that we're like, why don't we don't have an experienced management team? Right? Because we had learned in one of our classes and presentations at Stanford that's got to handle those objections right away. First slide, get it out there so we can move on. And the guys said, yeah, well, one of the things we often do is we back experience technical teams. Experience technical teams, you know, if you guys are just touch out technical people, then, yeah, we'll do it. Because at the time, Sci-Base had been funded to build a database engine, it was the expert and Lee guys. And they were just rural experts and build a database as they're like, so like Sci-Base. And they're like, so have you ever built a configuration engine before? And we're like, no one has. No one's ever built one. This is revolutionary. And as a matter of fact, Bell Labs has been working on one for five years and they've had a team of PhDs on it. And they make no promise. OK, well, at the time, Nils Nilsen was in the CS department and they said, why no Nils? I could just go ask him. I was like, oh, that's really not going to be good. We've been talking to some of the people in the CS department and they don't like the way we're going about this. He's like, oh, OK, so no one's ever built one before. Bell Labs have in trouble doing it. And the CS department doesn't think your way will work. Yeah. Yeah. He's like, good luck. Good luck. So we go back and we're like, OK, we need to do this. This is the last time. This is when you look in the Stanford directory for the VCs who are Stanford alumni. Because you're like, I got to work the Stanford connection here because this is the only way I'm going to ever get this. So we went back for the third time and then they explained, well, if you want to do that, we actually do fun companies. We don't have a man-to-team and have this crazy technology. We actually, they're usually like these hit game companies. Like if you're building a video game or something like that, we would be interested in vacuum possibly for that. Or at the time, there's a company called Berkeley Systems, which this is definitely dating like a data screen saver called After Dark. And it was a little flying toaster that fly around. And it was this hit rock. And everybody had to have this flying toaster. And they're like, so talk to us about what your solution is. Is it like that? But one thing that we would obviously never back is this untried group of kids who are trying to sell enterprise software to Fortune 500 companies. That's just not going to work. And this is when you're sitting there and you actually back then have the slide things that you're projecting. And you know what the next slide is. The next slide says, not only are we selling Fortune, saw enterprise software Fortune 500, but we will set a new high end price point. And yeah, how many of you guys advanced the slide? Or do you just give it up then and walk out? So anyway, that didn't work either. We actually did advance the slide and got laughed in. So we're never really here. So we still have enthusiasm. We're not thinking that these are not setbacks. These are just learning opportunities. So we then go back and we're like, but we need some money. We definitely need some money. And so how we can get some. And that is when you realize being a senior at a university is a great thing because at the time in the late 80s, early 90s was a new innovation called pre-approved credit cards. Dear graduate, you need credit. And we were getting stacks of them at the time. And so we thought, there we go. So we applied for credit cards. Lots of them. And we funded the company by getting credit card. Oh, we got a $5,000 limit. Look at that. Wow, we can take 4,000 of it as a cash advance. That's awesome. Oh, I got to make those monthly payments. Hey, let me just get another credit card. Pull out that cash advance, make those monthly payments. And at the time, back then, their sophistication of credit scoring and all that stuff, much less. I don't think you could do what we did now. But we actually had 30 credit cards. And we're pure meeting them the whole way where we need more money, get more credit cards. And one of the things you notice on the credit card form it says, how many other credit cards you have? Well, there'd only be one square. And so I'd be like, well, let's see. I have 17, one, no room for seven. And so we just piled on the debt and just kept fun in this baby. And we kept coding now. We're supposed to be done soon here. So we go and it's another three months and another three months and it is not working. And it's not that our idea is not working. It's just we thought you had to do this much and we do this much. And then we realized, oh, to solve the problem, we need to do this much. Oh, we solved the problem this much. And so it was this constantly rolling, evolving, growing spec. As we learned more and more about the things we had to do solve the problem. And now you start getting into as this is going and you're trying to get it to work, you're just running more and more what little support you had is waiting. Now you have other founders parents calling you up. I mean, what is going on? And every time I talk to John, he says we're going to be done in three months. And he's been saying that now for two years and that. And you're like, oh, no, no, we are three months away. He is right. And there's been a lab guys. They never solved it. And so we kept doing that. And at a certain point, actually, your parents aren't going to be the most supportive when you do it. But actually, some of your friends will be. They're like, that's such a great idea. Joe, I'm glad you're doing it. No, I don't want to join. No, OK. No, no, no, Joe. No, good luck. But after you do this a couple of years, and you've been telling them you're almost done, and you never really finished it, or you haven't done yet, even your friends start to say, no, Joe, maybe you don't know what to tell you're doing. You know, and going back and finishing classes, it's not bad to give a degree. And you are undeterred, and you continue to forge ahead. And so then you get your big break. And this is where you get the good part, and we can talk about all that parts. It's a good part. At the time, Silicon Graphics was the hot, up-and-coming company. They're the innovative ones, graphics workstations. So we had an opportunity to demo to them, to Salon. We're like, you guys are going to understand we're three months away. And we are three months away, so it is not done yet. But we will be very soon. Very soon. So Betty Watson calls us and says, yeah, I hear a great fine from the Stanford Connections. You guys are working on Configurator, and we need one. So we go and talk with her about it. But we're not done yet. Let us know. Well, she's like, great. Come back what's done. A couple of weeks later, she calls and says, on a Friday, and says, we have an executive committee meeting Monday. Because we have been configuration error, and it's cost company millions of dollars. We got to happen. So we're like, oh, we're not done yet. We're three months, not three days. And she's like, look, this is your shot. You got to make it happen. I'm like, as long as everybody knows this demo. Great. We sell the entire weekend, right? We are coding. We are hard-coding everything in there. We're like stealing their logo, right? Digitizing, putting it on. So we had a little poorly little thing. All going. We're like, we are ready. This is it. Make a break. We go into the meeting. We all had a Hyundai that some of us shared, and sort of pile into it and head over. Actually, along the way, when you talk about being scrappy, we had stopped by computerware, which was the big Mac store then. And we had decided to use Macs instead of Next, because Next were too expensive to buy. And so we're going to have to build this whole thing on Macs, because we have to do a discount. Well, blah. But computerware, we go in and we look around and be like, oh, OK, none of the sales reps that we know are here. That's great. And we go back and we get the radius rocket, which at the time was an accelerator card for the Mac that made it five times faster. And so we buy it. And the reason we had to make sure that, no, the sales reps are around, because we'll be returning it right after this demo. Right? And you can only do this so many times. And because you can't afford it, he's rated a rocket, it's like $3,000. That's like a whole credit card. And so we go pile in, do the demo. And we used to do demos. How did do demos? Part of our problem was, when we started, our system was comprehensive, but not fast. It was a nice way to put it, which is, it would solve very complicated problems and it took forever. And so you'd say, I want to configure a big SGI computer system and you'd click go. And the little Mac head would spin, little dial would spin, and spin, and spin, and spin. And it would take five, 10 minutes to come up with an answer. Which at time was leading out of you? Because no one else came up with an answer. So on this demo, what we do is you'd sit over here. And so, and they put the little Mac unit down here, and the monitor up here. And Tom had sit there with his foot right there on the power cord right at the edge. And then I would go stand over here. And when they hit go, I would then start telling the story about the logic history and all these kind of things, and all this research. And the reason was, is because Tom had been watching the screen, right, and watching it go around. Because I don't know, about 60% of the time would crash. And right when they would have been Tom, oh, I just had a power cord. Oh, and it just, you busy executives, we cannot waste any more time. We'll show your team later on how it all works, but it was good. And meanwhile, I'm over here, making sure they got a look at me. Look at me. And so for this demo, we told them you guys got to understand. And one of the guys, a team, had been from HP and he's like, look, I've heard some of these fixed stories. I'm never, I'm totally skeptical. Yeah, like, I'm not willing to see a demo. I actually want to put it in real values. And we look over at Betty Watson, like, huh? And she's like, it is like, oh, well. So now we're back to the bad part. So he comes up, puts in some real values, and clicks go. And I'm over here, and this is like the longest five minutes of my life. Because I'm trying to tell him the story of how our buildings can figure out if I've got some grotto. And you know what's going to crash, right? You can put in real values. It's terrible. The goal. So it spins, it spins, it spins, it spins. And all of a sudden, Tom's like, it worked. And I'm like, whoop. I mean, of course it worked. It's every time. And it actually completed the answer. And then this guy's going to come up and look at it and was like, oh, yeah, it's like the right answer. And there's six billion permutations that it could go through. There's four that don't cause it to crash. And then one of those four. And so one of those things is you always talk about, how much luck matters? When you're doing your startup, it is so much better to be lucky than right. This was a perfect example. We expected it to crash. We expected this whole meeting to go terrible. And we were super lucky. And it came out and they're all like, oh, what? You guys have a working figure. That's amazing. And so we are like, this is the highs of the high. Like, it doesn't get any better. You've been working on this forever, right? It works. Like, you just, you're like, holy cow, that never happened. And you're just like, this is awesome. They're going to buy it, right? We're going to charge $100,000. We're like, we're set. This is it. And then one of the guys in the team stood up and said, he's like, you know what? I mean, this meet up with you guys for the last minute and Joe, I hate to do this. But I didn't know until you were telling the story that you guys are five guys in a garage doing that. And every order that SGI does, which at times over $1 billion, would have to go through the system. And we really can't trust it to five guys in a garage. And he's like, there's a partner from Anderson at the time at Accenture now. Anderson, he's like, is there like a real software company that we can buy this from? You know, one. And you're, and he's like, you know, SGI was recently a startup. So, you know, we're really into the startup stuff. So good luck. And you know, if you get some more customers and get some more progress, come talk to us. And now you're at the lows of the low. And it took like 30 seconds. Because that third rule of edge capital don't try to sell on a price off work, because they don't want to buy it from. Came true. And so we left and returned our rated rocket. And we're like, well, this is what's called a deck. Because the best JIs I can buy, no one's going to buy. We're going to sell the HVs, NIDMs, and ATTs. If the innovative, coolest, most innovative company won't do it, we have no shop anywhere else. And so we all got together and we're like, should we shut this down and be done? And, oh well, this didn't work too well. So we went out for a couple drinks. There were a couple too many. But this is where there's a little known fact that you guys probably don't study in finance, but should be taught in all entrepreneurial class. Is there's a curial cork in the US bankruptcy law? That when you go bankrupt, it's binary. Right? You're bankrupt. You're not big. Credit rings destroyed for seven years, and you file, and you have to work through. But how much money you're in debt when you go bankrupt is relatively irrelevant. And so we're sitting on half million dollars of debt, pyramid credit cards. It's going to be fiasco. We're going bankrupt. And we're like, how about we just get some more credit cards? So we got some more. And we just decided that SGI was stupid. And we were going to power through it, and we were going to make this work. So we just got more debt. We kept going. And a month later, we got a call from SGI. He was like, oh, we looked at all these other options. And you know what? There are. And you're the only choice. So it looks like we need to be your customer. And we're like, that is awesome. The price has tripled. Which is a corollary to the rule of the enterprise 4500 don't want to buy from startups. That's true. That is a true, absolute rule. But if you are the only one who have it and they want it, the corollary is their price insensitive. Because they're only buying it from you because they have no other choice. Absolutely no other choice. So they actually accepted and we got $300,000. And we are like, holy cow. Holy cow. So we're learning our pricing like real time here. Three months later, we got a call from HP. And we're trying to figure out how much to charge out. We're like, what's the biggest number we can think of? Because they're only, I mean they, right? Boom. $3 million. Ten times as much. Right? Boom. They give it to us. AT&T calls. Six months later? We're like, oh, I can't. Seven and a half million. Seven and a half million. AT&T gives us $7.5 million. IBM calls. We're like, I don't know. I'm like doing research and pre-google, right? You're doing research. What's the biggest enterprise software dollars ever? So in 1994, IBM wrote us a check for $25 million. And at that time, we actually came the most expensive biggest enterprise software deal done today and proved that the corollary, they really were price insensitive. And then the other part that really does happen when this happens is your credit rating is awesome. Because you pay off all the credit cards. And so we then, after we actually built the product and sort of rolling back, it really was one of, build it, and they will come. We kept working on it. This whole story from when we started until we shipped and got the first check from STI was about three years. The product probably worked in a little under four. It did eventually work. Some of those first releases to STI and HP were a little rough. Got a call once from HP. And they're like, OK, well, so we double clicked on it and it crashed. And at the time, the guy Ed Sheel had a great sense of humor. At the time, you always argue with big customers. You always argue over whether it's a bug or a feature. Well, it's a feature request. And so it crashed. He's like, so does that feature request? Anyway, and we eventually made it through, shipped the product, ended up selling it to most of the major telecommunication companies, computer companies, and sold big enterprise offer deals. And that was sort of the, that for us, was the early 90s. And it was awesome. And when you look back at the times, even when they were bad and you're about to quit, and times are terrible, the things we learned, the stresses you go through, the opportunities you have, are ones that even today, and Trillity's does it really well now. You still, though, look back fondly and those days. And you want to relive them. You want to do them over. And if you haven't done them, you've got to try. So with that, I'd love to open up to questions. I think I talked a little bit long on them, I'm supposed to. But would love to open it up. Can you talk a little bit more about what I'm configurating? Oh, what does it do? That's a product. Configuration engines are incredibly boring. Our first PR agency quit over it, because they're like, this is incredibly boring. And what they actually do is, if you're selling any complex parts, if you're selling a big phone switch or a big network of computers, whatever, there's lots of pieces that go together. If you think of the simplest one on a PC, there's a certain number of cards you put in, a certain amount of memory. It's a combinatorial explosion problem and being able to correctly configure, because all possibilities aren't accurate, is actually a very hard problem technically, but it's also a very valuable problem. So the SGI problem that I mentioned, what happens is they had bid, we're going to sell you an SGI system for $3 million, and it's going to have three at the time, 300 megabytes of run memory, which I think is all right. And the sales reps sold it, because customers ask the end and it's time to contract. They then realized that the way they had to put extra cabinets in and have a back plane extender that they had then, and all of a sudden, what they thought was going to cost them $1 million, and they were going to make $3 million for it, all of a sudden, it cost them $3 million just to build it, because they've been throwing all the spare parts for free. So what our software does is it actually makes sure that whatever you're buying is accurate. Boeing is a customer of ours. And when they misconfigure a plane, and I was walking down the factory with the president of Boeing, he's like, yeah, you see that plane there? We punched that for 122 seats. And yeah, the customer wants the 100 seat configuration. He's like, it's a million bucks for us to go fix that. And your software's got to stop those problems. And so it's actually a way to think about it is it's a, it was the first object-based backtracking search engine was what we had built back in 1990. Today, our configurator can do what used to take us 10 or 15 minutes and about two seconds. And technology's a bit, it's very far beyond where we started. So one thing that I always curious about is, you had to listen to all these people saying it's not going to work all the time, and it doesn't make sense. And then you are believing in yourself and the team and you're keeping going at it. Do you just keep that perseverance active through your own belief or when do you sometimes also down to pull the clock or keep going at it? Is this you know? Or is it how do you kind of balance that? Yeah. This is where it all comes down. And this is the entrepreneurial one, which is, when you start your entrepreneurial activity, whatever spreadsheet you're doing, and whatever math and logic you're using, there is going to be a cell that doesn't fill. It doesn't add up where you have to take the leap of faith because you believe you're going to change the contents of that cell to something different. Because if it stays where it is, it's not going to work. And my belief is, and working with lots of entrepreneurial companies over here, is it really is your belief that's going to get you through. And as long as you believe in it, and as long as you can persevere, you should. You're going to make it. You're going to hit that breakthrough. And it always takes you longer than you thought. It's never as simple and easy as you want. But you just gotta stay at it. Perseverance is one, I don't know. Stories to read. Perseverance is almost always top of the list. I stayed at it longer than anybody else. And this is where it's all personal. This is where it is being the entrepreneur. This is where being an MBA with the spreadsheet together doesn't work. This is because you love what you're doing and you're passionate about it. And even though I'm dismissing it, sort of going over it very quickly, I could tell you more about configurators for six hours. I spent more time in the math CS library doing research about every configurator ever built, and interviewing teams and everything about it. Our whole team knew this inside and out, and we ended up liking it. It was a very common toral search problem. And while sounding boring was technically challenging or so we loved it. And so if you are one and the related thing to that is, if you're starting a business, make sure you're passionate about it. You got to love it. It can't just be a good idea that you're indifferent about because then you will be. Right? You're like, oh, I don't really care about this. It's that you have to realize that when everybody around you is like, this is the dumbest idea I've ever heard. And like 14 times now, you fail. What's going to make you want to do number 15? And number 15, it's because you want to do it. You want to drive it. Do you remember how did you get passionate about configurator? How did you learn that? How did you learn that? How did it happen? It really was. There's actually, I was in, I don't remember the number, but expert systems class and the CS class that Ed Feigenbaum taught. And yet a book, and it was a book on expert systems. And back then, the way people thought they were going to solve it was with expert systems. And you'd read through these problems. And we'll all talk about how they tried to build solve this configuration problem. And now Star Trucks, that I remember are chapters being a big one, a big chapter of the book. And how hard it was and how all these people were trying to solve the problem. But then they never worked, where they'd worked for a day and then they'd break. And I was just like, we can totally do this. How hard can this problem be? And it was one of these like, you say, I can't do it? Let me show you. Let me show you. And then you started doing research on it. And then you start working on it. And then you actually like, wow, this is really hard for all. And then it becomes this big challenge of whether you never do it or not. And I just, and I don't know how I got sucked into it. But it started with a class. And then doing the research and the part about it for us it was really important that really helped was every article written since 1975 on configurators was, no one's ever been able to solve it. But there were like $300 million each if you ever build it. Digital equipment and Carnegie Mellon had done a ton of research in them and digital it funded it. And there was all these things where, if you can solve it, it's worth $100 million. Because it just causes huge problems in the manufacturing of electrical components or heavy equipment. And so it was always like, wow, it's worth a ton of it. It could just finish it. So. Why did you say that you have to draw a undergrad? Why can't you spend it in and then do it? Sure. So this is actually a question I'm asked every time. And dropping out, what is dropping out? Does dropping out health? No, it doesn't. I mean, it doesn't help from the sense that although I didn't get smarter. Although even looking back, I'm sure that Spanish class I missed. I'm OK. But it's more important as the indication of the passion and the interest. Which is, this is one where one of the things about building a team when you talk about building a team. Here's one element, which is, yeah, I have this awesome idea. Do you want to join my team? Well, but first I got to get my degree. And then I'm going to graduate and work two years of consulting firm and I'll probably go get my MBA for two years. And then once I have all that down, then I'll be ready to start. OK, you can join that guy. Or you can join the guy who's like, this is the greatest idea of the world. We'll start tomorrow. I'm dropping out. Which guy you're going to follow? You're going to follow the guy with passion who believes in his idea so much that he's willing to risk something, right? willing to put something that people value at risk because he wants to go make it happen for her. And so it's more an indication of that. And you can always go back, right? Stanford, I don't know. They kept my degree open for 10 years. Like I could have gone back any time in 10 years. And then after 10 years, they actually, like, because I was off fuzzy, I was an econ major. I was fuzzy econ, which I don't think they'd offer anymore. And so I didn't have to start over now. But for 10 years, I could have gone back. Could you tell us more about what Trudy does now versus what they did 10 years ago with enterprise software? Sure. So what do we do today? So we did great during the 90s made a ton of money. People were writing us $25, $30, $40, $50 million checks. And we were selling software like crazy. And we prided ourselves on having the best engines. And we expanded from configuration to price and commission. All of these just esoteric, very hard to do engines. The companies would pay us a lot of money for it. In 2000, we had a couple of big meetings where a couple of big insights where we decided, wow, maybe we need to change. One of them was with Steve Ward. He now runs Lenovo, the PC vendor. At the time, I think he was CIO of IBM or something, one of our big customers. And he came in and he's like, Joe, we've given you guys a lot of money over the years. And it reminds me of this health club I joined, Joe. What? He's like, well, I go to this health club. I joined a year ago. And I walk in. And it has all the most awesome equipment I've ever seen. It's got the cool stair step for thing and all this gadgetry and like, you, they hook you up and do all this stuff. And I know that in this health club, there is the top of the line equipment, best products on the market. He's like, but it's a year later. And I'm not in better shape. And I didn't join the health club for the equipment. I joined it to lose weight. And that's sort of like, with you guys, I know your stuff's the best on the market. We buy it like crazy. But we're not getting the business value we want. It was like, oh, OK. Well, we sign the contract. And if you don't like it, you can return this off. I mean, it works according to the spec. So second discussion. Jack Welch, GE was a customer. Jack Welch came in and said, we'll call it mentoring. Most of the people in the room would call it being yelled at. Where he's explaining to me that GE Med is not getting an ROI on their software. And I'm trying to explain to him that this product just won e-commerce product a year. And I don't understand why he's yelling at me, because it's obviously his team's problem. Because we have the greatest product for work. And we build the greatest products in the world. And he explained to me, he doesn't care if it's product in the century, comes down from heaven above. If GE does not get an ROI, the product sucks, I suck, truly sucks. So you're like, OK, well, so you're on the flight back there. And you're like, well, I gotta make this guy happy. This is important, probably one not to burn, like back to relationship. Don't burn one like that. It's hard being an entrepreneur, having big hard thoughts. And so I fly back and I'm right now. I'm in the pad of paper. Everything we're going to do so that GE can get a return. And first of all, I'm like, I wonder how they're going to get the business back. I don't even know how to use their software. And all this stuff. And we write it down. So we go re-engaged with GE. We work with them to get them business value. And do the same thing at IBM, right, and talk to Steve Ward. And I guess not to leave that hanging before I jump is in Jack's last annual report that he wrote for GE for Equip, was we've saved about a billionate through digitization. And one of the companies I want to thank is Trilogy. And so we had obviously been able to switch it. And once again, being that Stanford education coming through, I was like, I bet all our customers would like this. And we realized that we wanted to move from just being selling products for tons of money, where our customers don't get any value, to actually guaranteeing business value to our customers. So we started in 2000 where we create what we now call technology-powered business services, which is a long way of saying we guarantee the value. So when you engage with Trilogy today, what you actually do is sign a contract that says Trilogy will deliver to me $100 million of business value. Business value is measured by their CFO. They get to the side. Then after they get that value, they then give us back some of it. Because technology can unleash huge business value. Most of the time, it doesn't. A lot of the tech downturn was because the products didn't deliver the value. But when it actually does provide the value, you get it. So for example, we'll give you some examples of that. We actually set the price of every good you're tired. We watch, we create demand forecasts and demand curves down to a zip code level. And we know whether that tire should be $50 or $52. And if they're charging $50 for it, and it should be $52, we tell them to change the price. They get the $2. They'll throw us $0.20 or whatever the contract says. Actually, in good yours case, if you look at the back of Fortune Magazine, the CEOs, like I installed Trilogy in six months later, I got $35 million. And then they pay us part of that. We do the same thing in automotive, where we watch you on the web. And if you actually go to an OEM's website, one of the big auto manufacturers, we do it for most of them. If you stand on that website for three minutes or more, we can identify you as a buyer or not. If you are a buyer, we then start watching what you want. Because most of the time you start shopping eight weeks before, eight to 12 weeks before you actually buy a car. We watch what you are. And then we just make sure that Ford builds it so that when you go to the dealer, it's there for you. And our predictive ability is dramatically better than what the OEMs can do on their own. And actually, having a car that you want on a dealer's lot is worth approximately a Panth car. Approximately $1,000 more per your willing to pay $1,000 more for that car, for one exactly you want, rather than one that's closed, but it's not the color or all these other things. If one that's closed, they end up having to start to give you free accessories and options that you don't want, but it helps you get into the white one when you want the red one. And then they have to spend all this money getting it there. And how we calculated is we calculate their order. So they go through and calculate, this is the order we're about to send to the factory. We then look at and say, oh, you're about to do 20% of our modders with leather. Consumer demand from watching people on the web, it's actually 70%. And so why don't you build 70% with leather that will make you $2,000 extra per car, that delta we get paid on after we delivered. Those kind of things. And so we create these big services now where the only way you have an ongoing relationship with us is if you're getting the value. And every six months they get together, sign off on this wigget and they pay us various amounts. It's a step beyond. If you're an automaker, it's a step beyond Google's pay per click where their big innovation, which is awesome, is don't just pay broadcast advertising, only pay for people coming to your website. We take it, we're focused on verticals. In the verticals we're in, we take it a step further, which is we only get paid if the guy actually buys a car. And so instead of the Google, you get $5 a click, the automakers go into our website and they say, I'll pay $2,500 for every pickup truck buyer that you can sell or find. I was wondering, what are the most stressful aspects of your company and how stressful it is in your life today? And I don't know if this overlaps or not, but you have a lot of problems with employees and they don't share your passion or if it gets harder for more company expand. Stress, relative to what it used to be, it's cake. My job is incredibly easy versus when they were doing the startup. There is nothing harder than the startup stages of a company. Every bad decision you make, you might go out of business. Today I make bad decisions all day long and we don't go out of business. And so it's not, you absolutely don't have constant stress. You're gonna go bankrupt, the world's long part when you're startup, right? You're creating something out of nothing. Once you have a base that you're running, things I find a lot easier. But what it is hard, there are hard things. One of the big things that we decided is we actually used to be a huge recruiter on Stanford campus and a lot of others for CS majors. And in 2000, our college recruiting team made their first trip to India. And they came back and said, we should start recruiting all at the IITs because it's dramatically cheaper and their test scores are scoring higher than what we're getting here. And so we made the decision actually that we moved the center of our development from Austin, Texas to Bangalore, India. And we actually now do most of our development in Bangalore, Ukraine and Hangzhou, China. And so when you talk about stress and tough decisions, we built this company over for 10 years. I'm best friends with all the developers and hired most of them and all that. And you stand up and say, you know guys, we've decided the world's changing. And that as we look at it, we're not gonna be about just building the best products. We're gonna start to talk about customer success and we're only gonna get paid on business value that the customer has. And so the skill sets that we need to have are gonna be completely different. And it's not gonna be about, can we write the most lines of C++ and Java code like it's been last 10 years? Now we actually have to learn about our customers and their business and how it works. And some of you aren't gonna like this, right? And some of you are gonna wanna leave over it. And some of you wanna be retrained and learn this, but some won't, right? And that's standing up in front of the company and having that discussion, right, sucks. Right, that's not fun, because you do know that some people aren't gonna like it and they're not gonna be here, right? And some of your best friends, right? Are like, I'm sorry, I don't like this idea, I don't like this vision, I wanna build great software. We ensued a bonus program in 2000 that said, we will ask our customers every six months that says, do you get business value? Yes or no? And if the answer is no, no one on the team gets a bonus. Right, yeah. Exactly, that's not. But it was great for our business, it was great for our customers. And you had to decide whether you really were a board that I really wanna deliver customer value or I wanna be the engineer who just builds great products. Right, when Jack Welch told you, I don't care that it's a product of the year. That doesn't matter, I didn't get value. You have to decide, which is no, it's product of the year, I did my job, I'm awesome. Or I'm not done yet, I need to go make sure G E gets value. Right, and so we have fewer employees today in Austin than we did in 2000, as we've been moving and changing. And those kind of things as you get bigger, there's two different parts, and I'm not here actually to pitch you guys that running a company is the best thing in the world. I'm absolutely not here pitching that, because I do not believe that. I believe for most people, that would be no fun. I believe that I don't have as much fun in my job today as I did at the start-up. I'm here to pitch that doing the start-up is the awesome part. But yeah, some people are made run for it to 500 companies, and Jack Welch seems to have a good time doing it, but doing the start-up is much better. One more, okay? If you're a student today, you have to do a start-up. What kind of areas do you have to do? Oh. Yeah, I mean, I definitely wouldn't do a software start-up. I was with the Dean of Engineering in Bangalore two years ago and we were talking about it. And he was like, no offense to Joe, but I hope the start-ups coming out of Stanford. I mean, 15 years ago, maybe a software one, but that was good 15 years ago. You know, he was like, I need something at the intersection of technology and medicine, or nanotack or biotack or one of the other, more advanced areas. And you guys are leading at it. You don't know this until you leave here, right? You don't really know until you leave here, but you guys are all on the leading edge on what you're learning and knowing and working on. And that's the part you should go exploit. If there's an area that you are studying and you start to love it, go figure out how to commercialize it and start a company. That is the thing that Stanford is better than any company in the world. And I now go around the world to all these schools around the world, and there is nothing like you have in here at Stanford, right? It wasn't. I mean, they don't, they don't at the IITs in Bangalore, they make you doing great, and we have a great office there. They don't have the ghouls or the ahouls or the sons or the talks like this, where you have entrepreneurs who come in and say just do it, right? When I gave my talk when I was there with the dean of Stanford, I was like, guys, wait till your kids start dropping out of school, then you'll know your entrepreneur, right? Like there was an uproar. Like we got kicked off stage. So that's what you got to do. You are in a great environment. The couple years of your life when you look back in your 50 years old and you look back in your life, you want to say, even if it doesn't work and you waste it, it's not a waste. It'll be one of the fondest memories you have as you look back, whether it's succeeded or whether it fit. Good, thank you. Can IOK test? Absolutely. Alright.