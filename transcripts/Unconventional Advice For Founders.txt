 This is the Entrepreneurial Thought Layer Series brought to you by Stanford Equal. Welcome everybody to ETL, a Stanford seminar for aspiring entrepreneurs. ETL is brought to you by basis, the Business Association of Stanford Entrepreneurial Students, and STVP, the Stanford School of Engineering Entrepreneurship Center. I'm Ravi Belani, a lecturer in the Management Science and Engineering Department at Stanford, and the Director of Alchemist and Accelerator for Enterprise Startups. Today, we are thrilled to welcome Gary Tant ETL. Gary is one of our own, having graduated from Stanford in 2003, with a bachelor's degree in computer systems engineering. Fast forward 20 years, and Gary is now the CEO of Y Combinator, which funds hundreds of companies per year via a web-based application. But few initiatives have shaped so significantly the startup ecosystem as Y Combinator, having created startups that are now valued at more than $600 billion in value globally. Before becoming CEO, Gary was a partner at Y Combinator from 2011 to 2015, where he built key parts of the YC Experience for Founders, including Bookface and the Demo Day website. He's also the co-founder, board partner, and advisor of initialized capital, an early stage venture capital fund, and co-founded Posterous, a blog platform that was acquired by Twitter. Prior to that, he was an early designer and engineering manager at Palantir, where among other things he designed Palantir's logo. Gary is on, he's got lists of lists that are too much to mention. How many people know of Gary, even before today? Okay, so I feel like for many of you, you need no introduction, but Gary was also among, he was on the list of the 2023 San Francisco Power 100, and a 2021 Business Insider Top 100 Seed Investor, and the Forbes Midas list, the top 100 global VCs in the world, he's been on it from 2019 through 2022. So without further ado, please welcome Gary. Thank you, Gary. Okay, wow, thank you guys so much for coming out. I guess it's really an honor to be here, in particular, because I was you. In 2003, I remember taking ETL, and for those of you who remember a term in, which is basically three of us up front. It was in the basement of term, and it was a similar arrangement, but I remember seeing the luminaries and the best founders and investors from 20 years ago come up here and speak. And I was probably feeling a lot of the things that you might be feeling right now. It was 2003, the .com bust had just happened. I didn't know, I had spent my years as an engineer learning how to make web software, but it seemed like the web was dead. It was getting dark. I actually applied to the STVP Mayfield Fellows Program the year before, and I was rejected. I actually applied to do a co-term at the Department of Computer Science. I was, you know, a senior, and I actually did not get into the co-term. And so one of the things that I just really realized is that sitting here, you might be wondering what's going to happen. And one of the things that I wish I could tell the me of 20 years ago is that you have skills, you believe, you believe in yourself, you believe in the power of technology. It's going to work out for you. And that might be easy for me to say up here, but I just want to remind you I was sitting where you're sitting. I was feeling many of the things, maybe not all the things, but many of the things you might be feeling right now. And that's why it's such an honor to be up here. This is my 20th anniversary of my 20 year reunion next week for Homecoming. So this was literally me in 1999. You know, not only that, I remember applying to Basis E Challenge. I was trying to start a company in 1999 as a freshman with my freshman year roommate, Victor Bennett, which is kind of amazing, because he's actually a tenured professor at University of Utah and Econ in Business now. And another friend of mine from high school, and I remember the high-powered VCs who wrote up our, you know, one-pager. It was like, great idea. You know what we wanted to do? We wanted to do a link exchange, but with Java ad banners. And they said, great idea, but the team is too young and they wouldn't fund us. So, you know, this is just what I remember from 1999. I think one of the things that's really crazy to think about reflecting on like the past 20 years is to what degree you're going to get punched in the face. Like, things are not going to work. And I think the most valuable thing I can give you is like, that will happen to you. It happened to me. And then you sort of have to keep believing. I remember freshman year actually I chose to do an extra big helping of humanities. So, way back in 1999, I had to decide to do whether it was, I think they called it, Siv or IHum, which is like the normal humanities. Or I could do an extra big portion of humanities where it was residential and it was nine units. No one told me that because I got into Stanford as a freshman, I didn't have to continue to be the nerd. But that's what Slee was known for back then. And the funniest thing now is looking back on it, some of the best VCs that I've run across, like Hans Tongue at GGV, also on the Mydus list for many years. And he was also an engineering undergrad who did Slee freshman year. And so I think there's something very valuable there. It actually is incredibly valuable to be not merely a software engineer or designer or a scientist, a technologist alone. I think there's a reason why so many Slee people went on to study engineering and then be a part of this sort of technocapitalist machine at the end of the day, helping accelerate all of this. It really was because we were not merely technologists and we're going to return to that point in a little bit. This going back even further, this was me when I was I think five years old. And I only bring this up because I think technology to me was always an incredibly important thing. It was something that as the child of Chinese immigrants, as the child of an engineer, a lot of other kids might remember going to a baseball practice or I bring my son to baseball practice now on Sundays. But growing up, my dad so thoroughly believed in technology and engineering that the weekends were really about going to technical bookstores. And I was incredibly bored throughout all of that and I really didn't like doing it. But now what I realize is it set me up for understanding that anything that was technical, anything that was a human capability that was something that humans could create, solve a problem using math, using technology. That was something that was accessible to me and it was accessible to me. This was even before the internet. And so that's something that I was incredibly just very, very thankful for. And I think that that's something to continue on through today. It's like that Steve Jobs quote, everything in the built world around you was built by people who are no smarter than you. And that's a blessing. Such incredible good news. Now I will say one of the reasons why my father felt it was so necessary to go to technical bookstores and to raise engineering all the way up there was that he actually really struggled with alcoholism and he also really struggled with keeping a job. And so I mean maybe that's another version of, in my lifetime it turned out so important, it was so important to be not just really, really great at engineering. That's also why it took Slee. It was that I wanted to understand the human condition, the human experience, and I wanted to be able to communicate with others to understand where they're coming from. And we'll get back to that again later because that's also very important in the journey of a founder. At the beginning I said these were all the things that I learned really, really the hard way. And maybe this next slide is probably the biggest one. Which is, I remember being at Stanford and just having a really hard time, like being the child of Chinese immigrants and having a really hard childhood, meant that I spent a lot of time trying to be normal, trying to fit in. Stanford is, we were just talking about, Robbie and I were just talking about ducks syndrome. And so it was definitely back then in 1999, people on the surface seemed like they really had everything together. But below we were just sort of this ball of energy, like just going, going, going, and impelled by actually a lot of things that we'd rather not think about, trauma. I think later in my career, this is how it would manifest. I remember having one of my first direct reports when I started my company. And I remember hearing from my co-founder that my direct report told him that I was the worst manager he'd ever had. And that he had never been disrespected so much in his entire life. And that was a real wake up call for me certainly. But what I realized is how I approached conflict was coming from, and really informed by 10,000 hours of my upbringing. And so one of the really crazy things for me was, I was incredibly self, I was very, very afraid of conflict earlier in my career. And this was one of the ways it sort of manifested. I would sort of allow things to happen. And then at some point I'd blow up at people. And so this is what I, you know, I think some of the reason why we're here, some of the reason why we've strived so hard to create, to excel, to get up in the world is actually something from our childhoods. I, you know, later ended up taking a online survey, which I recommend people do. And it's called the Adverse Childhood Experience Test, the ACE Test. And I actually scored really, really high being the child of, you know, alcoholics, like, you know, growing up we didn't have a lot of money. We had a really hard time growing up. And, you know, it took me many, many years to figure out, oh, these are things that actually as a human, I spent my 10, 20,000 hours just growing up and having that be how I approach conflict, how I communicated, how I related to other people. Like the family structure is so fundamental to the way that we actually get things done. And it took me actually both years of therapy and coaching to get to a point where I felt like I could actually approach conflict in a healthy way. And I'm still a work in progress, but it really changed my life. And I was not ready. Like part of the reason why my startup post-reus didn't work out was because I had not dealt with this stuff early enough. And once I was having to run teams and make hard decisions all the time, that was almost a little bit too late. So that's why this is the first thing that I want you to really, if you take away only one thing, it's like, if you have a high ACE score, it's okay. You don't have to pretend like you're normal. It's better if you approach it, get help, and figure out how do we work through this? And the reason why, if you want to start a company, you've all probably heard, startups end up taking on the personality of their founders. And then if you have all of these unexamined demons inside of you, what happens to your startup? And that's what happened in my startup. So get therapy early. It sounds really expensive, especially when I was a student and I didn't have money. I was like, how much do I have to pay? But it's actually cheap. People spend all kinds of money on all kinds of other things, ten, a hundred times, a thousand times more on things that will not fill that hole in their heart when all they needed to do was talk to someone and get help. So thank you so much for the great intro. I did get a chance to be very, very early at Palantir, but I did want to get into sort of my biggest mistake and sort of walk through why? Because I did not actually say yes to joining Palantir until much later. Let's see. Let's flash forward a little bit. Stanford, Class of 03, graduated, really wanted to work at a startup. All the startups were kind of dead. And then I went to work for Microsoft up in Seattle. And then friends of mine said, hey, we're going to start a company. Peter Teel is giving us the first money. We want you to come join. So I don't know. A lot of people somehow have just really, you know, the funniest thing about startups is that it's the movie, the social network. I think above all, from, you know, 10, 15 years ago, that like really exploded this, the idea of starting a startup onto the scene. And so it was just such a trip to see, you know, a movie actor play Peter Teel, you know, I ended up actually having dinner with Peter Teel. He was sort of sent to convince me to quit my dumb job at Microsoft and come join my friends. This was, let's see, 2004. I think it's called, it was free zone. It was a French restaurant that Peter had started. It was a terrible restaurant and it closed very quickly after that. But I remember sitting right there, sort of in that center table. And, you know, it started off pretty well. He's, Peter said, Gary, what are you doing at Microsoft? You're wasting your life. Come join us. We're going to go change the world. And, you know, he had heard my story about being, you know, a child of immigrants, like, you know, I needed my job. My parents were really proud of me. I had health insurance. So he said, Gary, I understand this. Let me make this a zero risk thing for you. And he got out his checkbook and he wrote a check. I was making, he asked me how much I made a year at Microsoft. It was $74,000 a year at the time. I was a level 59 p.m. lowest of the low right at a college. And then he said, here, $74,000 cash this check, quit your job and let's go change the world. And we're just over appetizers. And I should have waited until after the dinner to say no to him. But I said, thank you very much, Mr. Teal. But I might get promoted to level 16 next year. And we were staring into our suit for the rest of the evening. So that was, you know, I was very socially, much more socially awkward than I am now back then. So big mistake, right. But I actually had no idea how big that mistake would end up becoming because this was just an idea on a napkin at the time. You know, at the time they actually offered me about 1% of the company. I think it's actually close to 36 billion. So, you know, my YouTube video about it, it says my $200 million mistake. It sort of hovers between $350 and $500 million on any given day right now. Don't feel that bad for me, though. I ended up joining as employee number 10. I did end up designing the logo and learning a lot about what it was like to create something from nothing. And I cherished that immensely. But I just should have said, yes, the first time around. And I spent a lot of time thinking about that. You know, why did I say no? Obviously all of the standard things sort of applied. I had, you know, I had health insurance. My parents were really proud of me. But let me walk you through like a bunch of the reason. These are a bunch more of the lessons that I learned the hard way. I actually really, at the time they said, Gary, guess what? Software is so hard to build. And it's so rare to have really good software engineers in the world that the people who need it the most, like some of the most mission critical things in the world, literally they have to resort to Deloitte, which is like, I'm so sorry if people are going to go work for Deloitte. But it's like, if that's the best, like they're really not quite getting the best software in the world. And that was absolutely right. But I didn't know that at the time. My reality was constructed by the media. So if today it was, you know, exor twitter or tech crunch. You know, back then it was literally the Wall Street Journal or what was on the cover of time. And so the big thing to really realize is pretty much everything out there that you could read in media. It is literally the third hand account of what happened six months ago. And that's what I didn't understand about what Palantir was at that moment. It was literally someone who had just sold PayPal. I had actually invited Peter Teal to speak at Stanford a bunch of times before. It wasn't like I didn't know who he was. He was bankrolling it personally. It was like my friends who I like worked on projects for before. We tried to start companies before. I just couldn't get over it. I thought, you know what? I'm not reading about selling enterprise software to three letter agencies on the internet or in the newspaper. So it couldn't possibly be big. And I got it exactly wrong. The other thing that's really crazy and sort of classic is that like, you know, the things that turn out to be huge, they sound actually stupid or like literally they don't make sense sometimes. Like do you remember what they said about the iPod, all that hype for an MP3 player, you know, the reality distortion field is starting to warp Steve's mind. If he thinks for one second, this thing is going to take off. And of course the iPod became the iPhone and it changed the world. And you know, now basically X and Facebook, like it's the same deal. I remember one of the reasons why I didn't go work for Google in 2003 instead of, you know, going to Microsoft was that we all used Google on campus. But none of us believed it would make a dollar. And that sounds completely insane today because it's sort of a wonder that any other company in the world makes money other than Google today. So I think this was just something that I didn't understand. Like things that seem like an idea, but then are actually good ideas. That's actually what you're supposed to do. And then if anything at YC, we've learned that there's another level to it, which is also your expertise. And this is actually a really hard thing. Basically you always want to be in that sweet spot. And so there's a parallel thing to this slide where it's not just, it's also founder market fit. So, you know, sort of people who are able to build technology on one side. And then people who understand a problem that is worth a lot of money on the other side. And then when you look at the, you know, 10 or 100 billion dollar evaluation companies in the world, like when they started, they're literally like that was the intersection. So they're like basically two Venn diagrams that are really important. There's that one, which is people who can build and people who understand weird, really hairy problems that nobody else can solve. And then this one, which is good ideas, seem like they're actually a good idea, but then it seems like a bad idea. And you know, it deals zero to one does a way better job of explaining all of this than this segment of my talk. So you should go check that out. I mean, aside from that, and this sounds kind of stupid for people who like probably had a good financial literate, you know, upbringing from their parents. But I definitely didn't have that. Literally I went up to Microsoft and got the nicest apartment. I bought a brand new car and I'd like load. I already had a ton of student debt. I just loaded myself down with debt. And it was crazy because I was basically not being fed by my work. I felt terrible about not being able to get anything done at Microsoft. They paid me a bunch of money that I ran out and just spent money on. I just wanted to spend the money to try to fill that hole in my heart that like, oh, somehow if I get that really nice car, I'm going to feel better. And if you want to start a company and this sounds really stupid and I mean, I feel like embarrassed to say this in front of you guys. But like, I actually just went out and spent the money. But if I was trying to start a company earlier, I would have spent every, I would have husband did every single dollar that I made and thought about that as months of freedom that I could use to create equity for myself. And I didn't do it. It's easier said than done. I work for ActiveSync, which is like sort of lost to the sands of time. One of the things I learned was that, and the reality is, some of you have to do this is actually part of the maybe right of passage that a lot of people in this room will go on to work for Big Tech. But leave before it makes you soft. I remember going there and the thing that was helpful was to see the process, how to actually think about users. But there are lots of things I learned the wrong way, which was, this was Windows Mobile for the iPhone. And they actually assigned me the 22 year old senior right out of college, new grad right out of college to a bunch of check boxes. And a bunch of check boxes in this sort of dialogue box menu that basically no one used. And so, in retrospect, I actually should have stayed doing web software. 2003 would have been an amazing time to continue to, you know, I had spent four years by then working as a consultant. I will return to that as well. But this was a costly thing for me because what I realized was I was not having fun. I owned this tiny little check box and a thing that nobody cared about. And in fact, our users hated it. They called it Microsoft ActiveSync. And then the other thing was, you know, I told you I was making $74,000 a year. But when I looked back on it, Microsoft was actually making about $650,000 in profit per year, you know, per employee. And so, what I realized at that point was that this is actually sort of the trade that you are making wherever you go to work. And work is actually just this fundamental transaction between you and your company. You know, you're the person, the engineer, the designer, the PM, like the person selling, like you are the one who's creating the value. And almost any place you go, unless you literally own the place, is just going to give you a fraction of the value. But it's not value list. I mean, obviously there's the money, but also there's the stability. But the thing that is very priceless is that you can learn something there. And it's not like I didn't learn anything from Microsoft. So, if you remember only one thing, like this might be the thing that I recommend, aside from the therapy thing. It's just like, you're going to be working in all kinds of places. I know I did. And then at some point I started realizing maybe like six or seven years into my time working as a software engineer and designer and PM. I started like rage quitting every job I ever had, like sort of every couple years. And then in retrospect, I'm like, oh, actually maybe that wasn't so bad. Because in each case, when I rage quit, I actually realized that I had learned everything I wanted to learn. And there was something about that place that was not quite right for me. And I don't think that you have to rage quit. In fact, I recommend that you don't burning bridges is bad. But learning or earning very, very important. It's something that did turn out to be very valuable for me over and over again. I mean, the other thing that I mentioned was, you know, some of the, I wish that I worked on products earlier. I had spent four years working as a designer and engineer at all these consulting firms. You know, when I was 14 years old, I actually cold called the yellow pages to get my first job at an internet design agency making city websites. And I took all of the money I made when I was 14 to help my parents buy their first home, which they still live in in Fremont right across the bay. And so I, which was great. And like, and but the thing was like, I wish that someone told me, hey, Gary, like when you're 18, when you're 22, don't sell your time, go make products. And so consulting is basically just selling whatever finite amount of time you have in your life. And you, you know, whatever it is, like time is literally the most precious asset. And you will always run out. Whereas if you make a product, if you make a service that actually is something that's the same thing over and over again, you know, if you make software, if you make hardware, if you make things that you can sell, you know, you can go to sleep, you can take a nap. And like the things just going to keep making money for you. And I wish I started doing that much earlier. Okay, let's fast forward a little bit. You know, once again, Stanford came into my life in that Y Combinator was actually hosting one of the first startup schools. Today's startup school is sort of a website where you can learn how to start startups. But before that, it was an event down the street that Dinkle's feel auditorium. And this was me sitting on the floor of it. So I had just rage quit Palantir. I was working at a friend startup as a designer. And I was also maybe going to become a hip hop editorial photographer. Literally, I was taking $200 jobs off of Craigslist and getting paid. I just cash. And I happen to have all this camera gear. And I had just started working on a side project with my fraternity brother, Sitchin Agrawal, who was actually my five side brother as well on campus and back in the day. And so we're working on this weird, like, blogging thing on the side. I was working by day as a designer. And so I had a lot of time to code in the evenings. And then I came to Dinkle's feel auditorium and sat on the floor. And that's Paul Graham sitting next to him is Marcus Ackerberg. Behind him, I think is Jack Dorsey. And next to him is Paul Bukite, who created Gmail. So, and I'm on the floor with my camera and I'm a nobody. And actually, the funny story real quick about Paul Bukite. I ended up working with him. He's a group partner at Y Combinator. He's very brilliant and he's an amazing friend today. But in 2004, about the time when I flew down to have dinner with Peter Teal and said no to Peter Teal, I flew down to have an APM interview at Google. And I was having a great time. Every single interviewer at Google was like, oh, yeah, you're doing great. You're awesome. We love for you to be on the APM program at Google is 2004. My final interview was Paul Bukite. And he asked me a very simple question. Hey, my name is Paul. We're working on Gmail. Can you guess? Can you do an estimate for me? How much money are we costing Yahoo Mail by giving away Google Gmail for free? And I totally flood the question. Basically, I knew I screwed up. He knew he I screwed up. And I said, well, I guess I screwed up. And then he said, yep. And he closed his laptop and he walked out the door. I did not work at Google. So anyway, I only tell you these stories because like these things will happen to you. And it's like kind of crazy. It's going to work out. I promise. It's going to be fine. Like you have to have the right mindset. It's going to be okay. But this was actually what got me into my combinator. I was sitting on the floor taking photos with that like giant cannon, you know, lens. And then I realized, oh, well, they don't even have any good event photography. Let me put it on my blog platform and I'll post it to hacker news. And then literally we were applying to YC and that was why Paul and Jessica said, oh, we should probably interview these guys. And then the rest is history. We got into YC. TechCrunch actually wrote about us and left like Mark Michael Arrington actually left us on top of the homepage of TechCrunch all weekend. We got 10,000 signups from that. And then 10,000 became 20,000. We built it into a top 200 website and sold it to Twitter many years later. And so that was sort of my real entree into startups. And it all sort of started not with like asking anyone to be my mentor. But by me just trying to figure out, well, I have these skills. I have this very expensive camera. How do I turn this into something that helps other people? And I believed in YC. I believed in Paul and Jessica. You know, I ended up entering their orbit and they really gave me my shot as a founder. So I'm very thankful for that. And so one of the really cool things that I like to tell people as you're like going into this process of starting startups is that, you know, who here has heard of a very obscure 1990s 2000s game called Katamari Domacy on Sony PlayStation. Like three people. It's a great game, by the way. I swear this story is going someplace. You are actually in the game, this alien that is sort of pushing this, you know, little ball around. And basically the premise of the game is you start off very, very small. You're picking up, as you can see, acorns or chess pieces and things like that. And if you hit something that is smaller than your ball, you pick it up and it becomes a part of you. And if you try to pick up something too big, not only do you not pick it up, you bounce off of it and your ball gets smaller. And that's sort of like the plight of every startup founder. You're out there just trying to get something to stick. And if you try, you know, if you try to get something too big, it's just wasted energy and it's not going to happen. And so the game starts off very small. But then by the middle of the game, you're picking up cars, you're picking up trees, you're picking up buildings. And then by the end of the game, you're picking up entire continents. And so I guess like that's just the metaphor that I learned from Y-combinator about when these startups actually start, they start off incredibly small. And then that's, you know, to use this game metaphor, when you're starting off, you're actually not trying to pick up like physical objects, you're actually trying to pick up these three things. Co-founders and people to work for you, who then build the product that solves a problem that then gets you customers. And then capital comes and allows you to hire more people to then and or to buy more customers if you have to do it that way. So this is like this virtuous cycle that is happening absolutely all the time. And I think one of the things that I really encourage you to think, the reason why this is a useful analogy is because when you start out, what you'll find is like one thing helps you massively in the other things. If you get a truly great co-founder or if you're technical and you need a non-technical CEO or someone to sell for you or vice versa, like suddenly you're able to convince customers who you wouldn't be able to access any other way. Or and you'll be able to raise money and that'll help you hire people and then you'll get better customers and so on. Like basically that's all we're trying to do. It's just a useful thing that I find myself trying to explain to people absolutely all the time. And one thing that this is also useful for is this actually sets up a little bit of an oot-aloo, like a game loop. It's literally just keep trying to get each of these things, push as hard as you can. And then if you can't get any more of any one of these things, go to something else, go get that and then come back to those other things. Like you can basically, you know, you're not going to be able to get absolutely everything all of the time. But by actually switching between different focuses, like these specific three things, you're always going to get closer to basically taking over the world. Okay, I need a speed up. I have like five minutes. The other thing that I found very interesting and like the people in this room, I think you're, you know, if you're looking for a job, you're working your, for your, on your resume as I was when I was taking this class 20 years ago, you're going to find that people and recruiters and companies and basically the world is going to want you to be this little washer. You, they want you to be junior, back end, you know, redis engineer or something. It's like very, very specific. And then the reality that I've learned over time, especially if you want to start a company, is that you are not a tiny washer in a machine. You should be everything. You should not define yourself just because the machine wants you to be an interchangeable part in the machine does not mean that you should be that. This is a real knife actually. Do everything. Like the whole point of this is like do everything. Don't box yourself in. I just bought one of these on eBay for $4,700. It's a real knife. It's called a winger giant knife. Guess how much a commodity like, you know, winger pocket knife is. It's literally like you can go to Walmart and buy one for probably $3. So, you know, it's like more than a thousand times more valuable to be able to do many, many things. And that was the thing that was most useful for me, especially if you want to start a company and you don't have to be the best at all of these things. People who are non technical always ask me, oh, how do I start? How do I get started? I'm like, oh, you should probably learn to code. I'm not saying you need to become the person who codes it. It means that because you could be the super knife that you are so smart, you can learn anything. Maybe this is all that time in the bookstore that I learned. Like you can learn anything. And because of that, you will be far better at hiring. You know, remember that Udalupe. You will be able to get better, you know, better customers. You will be able to speak their language. You will, like the more you know, the more capable you are as a super knife, the more likely you will succeed. The faster the Katamari Damasi will spin and grab so many more things on top of it. I'll speed up a little bit more even. When you're small, act small. You need to do unscatable things. I mean, it's kind of obvious. You know, there's a lot of advice about how to start. But, you know, I think a lot of founders try to be as big as possible. They like try to emulate the Microsoft product homepage and use the same terminology and like look as big as possible. Don't do that. When you're starting something new, the whole advantage is that you're a real human being. We are so starved for real authentic connection that if you can just go talk to people and say, hey, I'm the CEO, what do you need? Like that is the most powerful thing. Most people actually treat their inbox when coming for customers as like sort of a suggestion box that goes straight to the shredder. And the thing is, like being small means that you can have super extreme, fanatical customer support. You know, we're always talking about product market fit. Guess what? The customers are probably going to come to you and they're just going to tell you what, you know, how do you figure out what people want? They're just going to go and tell you. And you've got to listen. The reason why people don't do this is they sort of think of starting startups as like building this incredibly complex machinery that, you know, it's like building a car. But I encourage you to think about it in a different way, which is it's more like throwing a really, really amazing party. Like what is a great party like you go there, you see a friend, they say, hey, welcome. Let me take your coat. Let me introduce you to your friends. Like this is why great design. This is why being as, you know, being a super knife is so important. You can't be just one thing. You have to actually be very multi talented to throw the best parties. This is something I learned from my friend Kevin Hale at Wufu. For posters, we were able to answer every single email that we got. And in fact, later when we had a eight person team, seven person team, the first thing we did was we split up the days of the week and each one of us would take the inbox all day. And we would aim to reply to every single email within 10 minutes of receiving it. And if there was a bug, we'd fix it on the spot. And that helped a lot actually. The other thing is being really, really hyper hands on with people on the internet and being as authentic as possible. Like I'm a real person. I'm here. I'm here to solve your problem. I'm the CEO. That actually helps so much. And this is, I want to show you like the reason why. There's one of the earliest studies on internet behavior was actually on use net. And so what they found was that on use net, if someone posted, you know, what's a good, it's like a, I don't know, what is use net even it's literally like a, it's like a group. It's like a forum online. And so if someone posted and did not get a reply, only 16% of people would come back to that forum. But if you got even one reply, 26% would come back. And so this is the power of actually being a real person in there. Like not like we just are so desperate for human connection, especially on the internet. Do that. Like I know we're talking about, you know, you might be working on some AI thing, you might be working on, you know, even dev tools like open source, like, there's still human being on the other end of that. And the difference between, you know, the 10% difference in retention is actually the difference between a startup that's flat lining and one that's actually working. It's like the compounding of this is really, really massive. So ultimately, you know, whether most people would look at this and say, oh, this only applies to consumer. But these days, when you're working on say a B2B software thing, I think for developers, like there are only 30 million developers. Your developer tools are basically a consumer, go to market now, but with 30 million consumers instead of a billion. And so this absolutely applies. Be small, be human, and get in there. So let me wrap up a little bit with something that I think is the number one thing that I've learned now 20 years later, investing in all these companies, working with all these incredible founders. You know, there's a financial adage. You know, some of you will go on to work in finance, and that's okay. And I'm not going to be mad at you. I work in finance now, actually. The clear and obvious thing that I hear from finance people all the time is that there's too much money chasing too few good ideas and too few good people. And then I just really disagree with that, actually. I think if anything, what I've seen very close up close and personal over the last 20 years is exactly this. There's definitely way too much money. But actually, let's flip it. Like there are actually too many problems in the world. There's so many innumerable problems. Like we live in an utterly fallen world. And the only tool that we have at some level is actually tech-nay technology. And look to the left and right of you right now. And like all you people on the internet, like you're in good company. You're in the right place. This tribe, we are a tribe of people who believe that we can actually solve those problems. So there is so much power in this room right now. There is so much power out there on the internet right now. There are so many smart people out there. Let me close with this. And like it or not, this is something I'm stealing from Martin Schrockelli, who is very infamous. But he's also an accelerationist. I think there's a lot of talk these days to date this talk. I mean, SBF is literally on trial today in New York City. And Martin Schrockelli was telling me, if you think about an effective altruism party, you go to that party and the only cool people are the people who could actually be altruists. They're the billionaires. You go to a party and maybe there's zero. Maybe there's one right. It's like the most exclusive thing in the world. And one of the patterns we saw at YC working with companies is that we saw this generation of founders who speed run society. They said, how do I make as much money as possible by hook or by crook? I don't care how. And then later I can save the shrimp. I don't agree with that at all. And I think that you don't have to do it that way. Robin, I were talking earlier when I was sitting in your seat right now. I remember seeing a cleaner Perkins partner named Randy Comissar. And he published a book that was very instrumental to me called The Monk and the Rital. And I'll spoil the Rital for you. Which is basically, you do not have to live on the deferred life plan. You can actually just go and do the thing, solve the problem that you earnestly believe technology and your hands can solve. Don't go and speed run society and make as much money as possible and then try to save the shrimp and virtue signal. Anyone who's been in San Francisco knows that virtue signal is not the thing society needs. What we do need though is accelerationism. Every person in this room who can build technology, you can solve these problems that are out there. And we can accelerate human abundance. And that's what I want you all to do. Yes. Yes! What advice do you have about balancing academic commitments with entrepreneurship? Oh man, this is hard. I mean, the hardest thing here is that like, I think school is very, very fun. And it's also one of the best places in the world to meet your co-founders. So what I would almost do is like, first like try to figure out who you are and try to get really good at things. And you might already be good at a bunch of things. And then at that point you need to find other people who are good at things, so find co-founders. And then the ideal thing is that you found some sort of idea that you think you uniquely can solve. Sometimes that's too much to ask. But if you have those things, I think that's the bar that I would seek to go and quit school and sort of devote myself to it. But I think one of the things I'm starting to realize is it's kind of a high bar. And I mean, I'll give you a little bit of an alphalic. One of the things that I'm sort of realizing being back at Y-combinator is some of the best founders are not necessarily right out of college, per se, though many are. I mean, I didn't start a company right out of college. I was not ready. I'm sort of a late bloomer in that respect. There are lots of people in this room who are not late bloomers. They're ready to go now, which is great. But for me, I was a late bloomer. I needed to work at Microsoft. I needed to go work at a startup for a little bit. I needed to see what it was like to manage. I had never managed people before. So I needed to manage people on behalf of other people first. I had to learn. And then only then was I ready to start a company. So, yes, some of the best startups in the world are started by college dropouts. But you don't have to follow someone else's path. You should follow your own. And then ultimately you've got to listen to what's inside your heart. Awesome. One more question. Hi, Gary. I had a really burning question that I wanted to ask. How do you find good problems to solve? Oh, man, I need to make a YouTube video about this. I think that's going back to what we were saying earlier. I mean, this is actually probably one of the more defining problems. You sort of need to do something weird. I think the hardest thing that we're actually going into YC application reading season. And then the hardest thing right now is like it is sort of the same thing over and over again. And the things that really jump out at me that like I got to invest in earlier, it really was weird. It was like I remember Kyle from cruise automation when he created the space of self-driving cars as actually commercial endeavor. He was just like I was at MIT. I was really into self-driving cars back then. I want to do that now. And that was just exactly the right thing at that moment. And it was just weird. And like nobody thought that that was going to be a commercial thing. So maybe the best advice is actually, and you know, when I think about Brian Armstrong reading the Satoshi Nakamoto white paper, that was a fringe thing that nobody believed. So rather than try to follow again what I made a mistake on, which is like, oh, what does time magazine say? What does TechCrunch say? What's hot on Twitter? Like ignore all of that. And then focus on, you know, what do I uniquely know and what do I believe in? And even if it's really weird, maybe I should pull on that thread. But also AI is really crazy right now. Well, on that note, and I know that I know we could go on for hours, but I have to cut it off just by virtue of unfortunately coming at time. But let's all thank Gary for a phenomenal ETL. The entrepreneurial thought leader Syriks is a Stanford E-Corner original production. To learn more, please visit us at ecorner.stanford.edu. .