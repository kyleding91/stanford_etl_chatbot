 You were listening to the DFJ Entrepreneurial Thought Leader's Series, brought to you weekly by the Stanford Technology Ventures Program. You can find podcasts and videos of these lectures online at eCorner.stanford.edu. It's my sincere pleasure to introduce Lou Cerny. And on his insistence, we're doing a Q&A today to start the seminar. And then the two of us, he's going to ask me questions. No I have the honor of asking him questions. And we'll do that for about half the time and then the last half will do our traditional Q&A with the audience. But hey Lou, welcome. Thank you. You have been to several of our classes, which we greatly appreciate, but we've never done this before. Yeah, it's been an honor to have a chance to come and cover a case study that you do very well here on Entrepreneurship. And I've always enjoyed it. I've been super impressed with the people and the questions that have come up in these classes. Well, let's get started by just talking a little bit about how you got here today. But how you got this place in your life. So you grew up in Canada. Yep, now I raised a Toronto. And where did you go to school? My school called Dartmouth College. Yeah. It's an awesome school. And we know Dartmouth. Someone's got to do a shout out. And tell us how your path led you to here. So yeah, I grew up in a really small town east of Toronto. And I think I was looking for a school that also had a small town feel. So Dartmouth felt right for me. And when I entered Dartmouth in 89 as a freshman, it was one of a very small number of schools that standardized on Max and everybody had email when they came in. I'm sure Stanford was probably at that stage too. But because of the ubiquity of Max and the undergrad population, there's a pretty steady pipeline of undergrads that got recruited out to Apple. So I had an opportunity to work as an intern at Apple in the summer of 1992. And then my first job at Dartmouth was working in the dining hall to help pay down the student debt. And it certainly was a much more fun job when Apple sent me back with a bunch of computers to write code for them. So I did that my senior year and then came back out here full time when I graduated in 93. So I wasn't founding a company until many years after I got to the Bay Area. So 20 years ago you came this way. Do you ever think you'd be here today as CEO of New Relic and having started another company that was sold successfully? I mean, what did you think you'd be 20 years late? I mean, you have dreams, but then you also have doubts and all sorts of things. So no, I certainly, I didn't think I belonged as a student. I had serious imposter syndrome. So no, I never imagined. So you saw yourself as an engineer. But then how did you all sudden start a company? This is Wiley. And then? Yeah, so I founded a company called Wiley Technology. How did that happen from the engineer? So I've loved building software ever since I discovered my first computer and that was in my parents gave me a computer in 82. It had three kilobytes of RAM. So what is that? It was a thousandth of a single in P3 song. But I discovered what I wanted to do for the rest of my life. I mean, the joy of creating software was just something I couldn't resist doing. So it was easy for me to pick a major at Dartmouth, although I also minored in Latin and classical studies. And I guess that kind of is part of the story might be that I had a broad set of interests and I wasn't just, I loved the art side of creating software, not just the science side of it. So I couldn't believe that I could get paid to do this, to write code and build software. And so it was an easy yes to come out here and work for Apple. That's a really significant point because we celebrate that here at Stanford. I think we use the term humanist engineer. Yeah. I mean, there is this dichotomy saying, well, you're either an engineer or a humanist and you can't be both. Do you agree with that? No, I think the very best engineers really do have an instinct for what people want an empathy for the end user. And if you're just designing something like an API, there's someone who is using that API. And so that's why I think liberal arts, education are great for developing the whole set of skills that are involved in building great software. And of course, you need to learn how to work with people too if you're working on a team no matter what your role is. So I'm a big believer in that. Big believer in that. All right. So why is, so you also in your founder? Yeah. So I had an interest in startups and thought I'd love to get involved in a startup and tried many ideas as mental exercises. But in January of, or sorry, December of 97, an idea hit me that I really just hit me like a ton of breaks. And it's a very technical idea. But the idea was, at that time, Java was this new technology that was very early in its adoption. But I was a huge fan of Java and thought it could be transformational to how people built software. Today is Java is by far the number one programming language for modern software. But at that time, it was this view, it was this toy. And the idea I had was, what if I could make Java software self-diagnostic? What if I could make any job application report about itself while it runs so that whoever built or ran that software could understand how it's performing in production and fix problems in production. So that idea was the genesis of a company that I founded called Wiley Technology in 98. And long story short, that was a wonderful learning experience. I had no management experience when I started the company's, as far as learning a ton on the job. But it grew to about 350 employees, about 55 million in revenues. And it was acquired in no six for 375 million by CA. And that company created a category software called application performance management. So it was a wonderful experience. A great outcome for all the stakeholders, but I learned a ton along the way. Well, we have a laugh about this on occasion. A Harvard Business School wrote a case about his experience at Wiley. And it's super popular. It's taught a number of business schools. It's taught in all kinds of schools here at Stanford. And even within here in the engineering school, I suspect that many of you will end up doing that case at some point. Because I can think of, besides myself, I can think of two or three other professors who use that as one of the anchor tenants of their courses. And so it's always a kick to teach it. There's so many angles in the case. Most of all, it was about what lessons you learned about leadership. To go from being an inventor, I mean, person who pursues patents to all of a sudden creating a whole company around it and what it means to become a CEO of such a thing, that's a thread. Yeah, the guts of the story was the transition from me is founding CEO to, we decided to bring on a professional who had, you know, with management experience that could lead the company next stage and really gets into the emotional side of what's it like to give up the CEO role, but you're still very connected to your company and you want it to succeed and trying to find the right person. And you know, I learned a enormous amount in that process. And you know, to jump to a point that I think is worth dwelling on, like the difference between now I am serving a CEO of New Relic and where New Relic is my second company in many ways, I think it is. If I didn't sell Wiley and were to do it all over again, what would I do to try to make a company that could last decades or longer as an independent company that had a real impact and that company is New Relic. But the question is, you know, having had two runs at this, one is founder CEO to about 50 employees and one running it through to this point at least. How many people is New Relic? 600. 600 today. Up from about 375 in January, it's just like, I'm far beyond the ability to memorize the names and all that stuff. So I'm always like, hey, how's it going? I should know your name, but I know you work for me. But anyway, so I think the biggest change for me personally was my first time around, I really felt compelled as CEO to be more of a domain expert in everything and to, in effect, try to be someone I'm not. I felt like, you know, I had this image of what a CEO should do, how they should spend their time and how they should behave. And I tried to make myself fit that mold and it was a terrible mistake. You know, I'm not one to sit in quarterly review meetings or pipeline review meetings or to, you know, drill through the financials. I have a great appreciation for all those things. But you know, at the end of the day, I love building products and I love recruiting amazing people to join me on the journey. And so this time around, I was very thoughtful about how I spent my time and how I defined my role and I was very, very proactive on recruiting incredibly senior capable people that could be CEOs of other companies to do the parts of my CEO job that I don't want to do. I have a table in my office. It has six chairs around it. If there's a meeting that can't fit around that table, I don't go to it because I'm not one to go to meetings. I'd rather be building software. And, or I'd rather be making decisions. And I found if I'm in a group meeting with 20 people, I'm either, if I say anything, I'm going to overweight the meeting. And if I don't participate, then I've just got two short and attention span to actually stay engaged in the meetings. So I have really smart people that run the larger meetings. But do other parts of like leading the company that, you know, I'm not passionate about and not particularly good at. So I want to follow this thread, but I want to give people context. I want to explain just how impressive New Relic is. Go to the website. You know, it's fine. Just bring it up and look at the numbers we're talking about. So what do you do? We're a software analytics company. So what does that mean? We collect billions of metrics from live software applications to tell the people who build software and run software, what is doing, how it's running, what people are doing to make that software better. So the most profound example of us, you know, having an impact was last, late last November when healthcare.gov was having those front page news challenges, just keeping the site running. No idea what was going on or why the site was down so often and so slow. New Relic was called in and within a week, the software we provided told hundreds of people working on healthcare.gov exactly what they need to do to fix it. And immediately the response times went down and the site available. And people could get health insurance. But we do that for over 10,000 companies, companies like Airbnb and Nike and Disney and New York times. And it just spans virtually every vertical. But if you think about every business is a software business. So every business needs to make sure their software works. And that's what we do is we help them make sure their software delights their customers. Yeah, I saw something on the site getting ready for this about data that forget the tag line. But we're all data nerds. You know data nerds, yeah, they had two meanings to me. And always about data but also about culture which we'll talk about. Yeah, I mean the other thing that we wanted to do at New Relic was celebrate the builders of software. So in my first company at Wiley, the software developers as a constituent, the conventional wisdom was you don't want to sell to that crew. They have small budgets and not that much influence. But if you think about where the world is going today, the people who build the software are really the people who are changing the world in many ways. And so we want to build a product that army, an army of people love and use. And so over 300,000 people, developers have used our product this year. And they're an incredible, they're a hard crowd to please. Because since they build software for a living, it's kind of like a fear and actor and your entire audience as actors. They can sort of pick all the little things that might be wrong with the software. So but if you do please, and they're a very loyal bunch, and they self-reference. So we celebrate the data nerds. And so we've got these data nerd t-shirts we give out to people to try to see. And we have a lot of different software and a campaign. And if you just think about it, data is basically fundamental to every business decision. And the data we collect is from the guts of the software. And that's the guts of your business. So we think there's a massive opportunity there. So now that you've gotten to know him a little bit, I get to ask him this question. Where did the new name new relic come from? So I had to prototype in an idea and I thought it was time to start, put a company around this and not knowing whether or not it would become a real company. But I need it to incorporate. So on short notice, I had to come up with a name and I didn't have any bright ideas. So I just typed my name, Lou Cerney, and an anagram builder. You can Google Anagram Builders and type your own name in. What you do that now, I'm curious if your name of your company is something. I think if you put it in the random name of my name is Ren Lice or something like that. Ren Lice would be a pretty good name. And that's not why I got the same name. No, I knew, knew, knew, knew, knew. So I waited for you to get to know him a little bit before I asked that. Because I always get a kick out of that piece of information is that he's so humble. He's also audacious. He's really audacious. You want to make new relic a huge company. Yeah, I mean, there's- You're not just hoping somebody buys you someday. You're doing this for a whole new thing. Then what would I do? My wife would just kick me out again to start another company because the driver crazy. So no, I built one company and sold it and I have nowhere to go out that went. Because I talked about my role and how I spend my time, I've thoughtfully tried to design my role in my company so that I love my Monday so much and my employees love their Monday so much there's nothing we'd rather be doing. I think this is one of the problems with a lot of the companies in Silicon Valley. I think, look, you can put up with a job you don't like for a few years because it'll all work out in the end when these options might be worth something and then we can start living the life we want to live. I think that's just the wrong way to look at it. I think we should sort of, you know, basically if you structure your work life so you're doing what you love and you're doing with people you admire and respect and love, then why would you want to do anything else? And so this is the last job I ever want to have and I want to be doing it for a lot longer. I love to build software. I still get to do that. I still, I'm doing it with, but I love building. What did this philosophy come from? What did that motivate? Was that something from your parents or was it something you just have developed over your professional life? I mean, it seems as simple on one level. I guess it's common sense that in life so many times, if all you're doing is chasing the outcome rather than really focusing on why what you do matters. So the outcome might be some financial role as the only reason it matters. I mean, like it really gets excited about that. And by the way, those companies where the only reason why people come in and work on a Monday is because there's some pot of gold in the other end and that's the only thing keeping them in the company. Those companies don't weather storms very well, right? And startups will have to weather storms. So you know, it was just this thoughtful like approach of new relics, you know, currently at a point where it's generated more for my family than will ever need. So it's not about that. It's about what can we do to build a company that makes hopefully thousands of employees love their Mondays, makes our customers successful with the software they run. And it helps me personally continue to learn and grow. Yeah. Well, let's jump in. Thank you for that. It's simple, but I don't understand why it's not practiced more. We live in a place where it's pretty seductive to just look at, you know, the shallow things. You know, the shallow things. I mean, like it's not that. But you know, just the easy to describe things like share price. Yeah. Right? And just don't let that take your eye at the ball. Like, you know, you got to ask a question, why are you doing what you're doing? Well, so having with my wonderful colleagues built out an entrepreneurship and innovation education center in the engineering school, we come from the engineering mindset. So I think we share that common background. But then it isn't just about the money. It's about changing in some cases, saving the world. Well, yeah, and I don't want to, I don't want us to put ourselves in too high a pedestal. But I have been deeply thoughtful about, you know, why does what new relic do matters? I mean, we make software a little bit faster, right? So it's taken a while to really think deeply on it. But here's my best answer to it. I think the most precious thing we have on this planet is time. The most precious thing we all have is time. And thank you for spending some time in this room. But you know, it's possible to make more money. It's not possible to create more time. And so people spend, young people spend up to six hours a day in front of software. So if you think about managing that time, making the most of that time, life's too short for bad software. And that's why when you wait six seconds for that page to load, you know, it seems like the mother of all first world problems. Why are you so frustrated during those six seconds when you know it should take just a couple of, but I think it's because during that six seconds when there's nothing you can do but wait, you're just sitting or saying, you're wasting my time and that's my most precious thing, right? And then, but it's not only just as slow, it's like there's nothing more frustrating than me than like you're on that website. You're about to fill out the form. You're typing all the fields. You click submit. And then the next page comes, I says, oh, you didn't fill this one thing. You didn't put dashes in the phone number. And then the whole form is empty. You got to redo it. The website just wasted your most precious ass at your time, right? So new relics mission is to help give people more precious moments in front of their software. And hopefully, even time away from the software, more time with your family or something like that instead of waiting around for bad software. That's why we think we do matters. Something comes to that, that's excellent. And we got some good sound bites out of that, didn't we? I know the editorial team is loving that the mother of all software. The first, the first software to have brought. Love that. Let's go to strategy for a minute. Yeah. Because I've heard you, this has come up in class before when you've come by. It's not just, you celebrate innovation and technology, which I want to talk about, but also innovation and the business models on the business side. Yeah. And so new relic is an instance of that. So yeah, my last company had to sell. I didn't have to sell, but it made sense to sell my last company at, you know, six. And I thought deeply on why that was. And it really came down to the business model. That was a traditional enterprise software companies, enterprise software companies, licensed maintenance enterprise software companies. You can spend nine, twelve months with the customer. And then they sign up for a very large check. And that, and, and, and basically it's very hard to predict when that customer is going to say yes. And, and, and usually after they say yes, it's another 90 days before you actually get a contract out of them. So anyway, that's a really painful business model to, to execute to, because it's hard to predict what the revenues and it's very expensive to build out that field presence. So when I started new relic, I didn't want to be purely dependent on just enterprise business. And I didn't want it to be a licensed business where it was very lumpy because it's really, you know, it's hard to sleep at night if you don't know whether or not, especially in the last seven days of the quarter where like 70% of revenues could come in and, and, and those are paying salaries, right? So I wanted a subscription business. I wanted a business where, how do you reach the whole market? And the way you do that, I think in business software is you have to build a product that's so simple, so easy to use that the customer can see the value without the help of a sales person. And there's a lot of effort that has to go into design and, and thought about the onboarding process that may seem obvious to folks in this room because of all the great consumer products you use, but it's actually pretty rare in enterprise software. So if you design a product with the business model in line in mind, it can really just, it can reduce your distribution costs because now, you know, we give out a t-shirt with data nerd on it and somebody tries it out and they fall in love and they want to become a customer that compresses our sales cycle dramatically. Now we do have an enterprise business as well that does have that traditional sales model, but it's great to have that balanced subscription business of small companies. And that business model was by design, but it started with the product being engineered for the business model. You can't just glue the business model you want to a product that isn't well suited to it. And that's why I think the incumbents are having trouble sort of being, being successful in the SaaS world. The products aren't engineered for, for the kind of business model that I was just describing. You might have asked a little bit about operations. One would be, I'm not a domain expert, you can try. Or about the other side. So you took on venture capital this time. Given your success of Wiley in the network, you could have stayed with friends and family or, you know, why take on traditional venture capital like, and even make one of them the chairman of your firm, Peter Fenton, who is the chairman of your firm. He is. And he's my best friend. I couldn't respect anyone more as a business partner as a person than Peter. You know, when I started New Relic, I really didn't know if it had the potential to be a company that really made sense for venture funding. I was thinking, maybe this is just a little business that aspires to have maybe five million in annual subscriptions. And, you know, maybe we have half a dozen employees that all just kind of check email and all the checks were all done. That was an interesting concept. And Peter completely disillusioned me of that by saying, no, there's an opportunity to build a great company. By the way, that idea you have is not going to be just sitting in and waiting for the checks coming. You're going to be carrying the page, you're going to be having a much harder life than you imagine. So, Peter's remarkably good at helping people aspire to greatness and do their very best their full potential. And that's, you know, over a glass of very nice wine. He and I talked about building a great company together in, in late 07 or early 08. And for those you don't know, I think Peter's routinely in the top, you know, three to four on the minus list. I think he's just, without question, one of the greatest venture capitalists in the world. And why do you say that? And a venture capitalist is more than just the money. What is it that he provides? Well, I think one of the things is, like, he knows how to inspire entrepreneurs to reach higher. And he does it in a way that is all about, you can do this, like, you know, it's inspirational. It's the right word I use. He'll challenge me, but he'll always support me as a founder. And my litmus test for working with investors is, if you're lucky enough to have term sheets from a few investors, you know, what's more important than the terms are, the likelihood that you're going to have a really open and honest relationship and a high trust relationship with that investor. And so, if you're looking at a term sheet, what I'd recommend you do is give yourself a gut check and ask, is this individual someone that I feel I could come to very comfortably with bad news? Because you will no doubt have bad days, bad weeks, bad news to share with your investors if you're going through the startup ride. Everybody does. So the question is, are you going to feel hesitant? You're going to, like, kind of shape the message to make sure that, you know, they don't overreact or whatever. Are they going to get too difficult to work with? Or are they going to be collaborative and help you solve whatever problem needs to be solved? That gut check, Peter, like, resonates very well with that. And I'm also blessed to have, like, Dan Skolnik as another great board member on my team. I mean, I've just got great investors. But they almost feel like co-founders. I mean, given that you were a solo founder, which is unusual. Well, they certainly, you know, they almost become, you say, he's the best friend, that almost sounds like a co-founder. They feel, like, you know, deep partners that, you know, I can be completely open and vulnerable with. So, and the interesting thing about it is, I feel like it works better for their relationship with me too, because I, you know, you can, people are smart. They know when they're being played or managed or like, you know, someone's trying to represent themselves as being someone they're not. And there's temptation to do that when you feel like you've, I don't know, you've got to defend yourself or you don't have that level of trust with person. When you're completely open and vulnerable with your investors, they draw themselves in and really want to help you too and help you grow in your company succeeds. So it has this kind of symbiotic relationship. And I'd say the same thing with how, with how you work with your senior team as well. Well, that caught me on my, I've got a couple of things and then we'll open up the general Q&A. The other one is that you are known, at least on Wikipedia. Source of all skills. And we don't know Jix, actually. It's the coding CEO. Yeah. It's like a cartoon character. Yeah. The coding, coding CEO, he still finds time to actively, he effectively involved. I mean, there was one post by someone that said, you code on Thursdays and Fridays. Well, he still do that. So let me tell you the story about behind it. So I remember I had a meeting with Peter Fenton, Spring of 12 or so and I was like, he's on the board of Twitter. I'm like, how on earth does Jack Dorsey, at the time he was very active with both Twitter and it's running both. And I said, how does he manage the time? And he said, and he gave me some guidance. And so it starts with just thinking deeply, what do you love to do that you think can really move the needle for your company? And then after you allocate your time accordingly to line up with how can you be most effective with your time allocation, then make sure you've got the team to compliment where you're not focusing your time. But anyway, for me, I love building software and I love creating stuff. And I wouldn't want it to be interpreted that only the only new ideas come from me or anything like that. We've got amazing engineers that are capable of building amazing software. But I'm less grumpy when I'm writing code. My wife says when I come back from a coding retreat, I'm a little happier, a little more. Sometimes a little zoned out because I'm just so deep in the zone of whatever I'm trying to create. But it does bring me back to the strategic discussions, I think, with a different perspective. I'm a little bit more, I don't get as mired in the details and things like that. So anyway, how I allocate the time is I try 46 times a year to have a full uninterrupted week of code. I do it in a remote place. Sometimes I have to explain to my poor daughter, Kate, went over here that Daddy's going to somewhere like Cobbliss and Lucas and I bring a laptop and a screen and I write code for a week and I come back with a prototype and the poor engineers need to somehow take that and figure out how to make a product out of it. Hey, goofball. So anyway, and I try to do that four to six times a year and the thing about it is, why do I do this? Well, my rationale for it is most software companies go through this arc where the original idea that company was founded on has a high growth curve, the company brings in mature management and they kind of get good at distributing and selling and growing the top line. You build this engine that gets really good at that but it's very hard for the company to come up with a second act. A new fundamental idea that's totally new and disruptive that goes beyond the first idea. In fact, I don't think there's more than five companies that have really done it well. Apple obviously did it very well. Microsoft did it well going from the OS to applications back in the 90s. Oracle, you could argue, did it when they went from the database to apps. Now what all those companies have in common is led by founder, very product focused and the founder was so obsessed on product that like, you know, you ask, so I created the next product in January of 12 in my cabinet Tahoe and I'm very obsessed on it. And so that's our next act and we think it's ten times bigger than our current act. So I'm not saying it's going to happen like 100%, but I believe it will. And more importantly, I believe that we all want to create the culture where we're never just kind of satisfied with what we've created in the past. We just don't want to be, you know, Anokia. I don't know. Absolutely. Absolutely. Well, because I ask you, if you go to the side and you see that in this part of the side that talks about the company culture, the atmosphere and the philosophies of what it's like to work at New Relic. There's a celebration there and I think you mentioned it, get what you add in yours. So it reflects you. I mean, I think that's true. Yeah, there is, you know, we certainly love, you know, we love creating software, we love, and we love, you know, people who really just... Do incredible things with their minds, right? And but I'd say the other thing that's kind of important about our culture is this focus on, there's a warmth to the culture of our company. You know, I hear this every time people kind of visit the company like, you know, just how they get treated by no matter who they bump into and they come across. And I think that's the thing I want the culture most being known for is like, people of working at New Relic or interaction with New Relic because the people are sincere and I just, as we grow, I feel like that's going to be important to preserve and make sure the culture is a place where, you know, there's a warmth and honesty and integrity to the company. Well, thank you. I think it's a good way, or a good point to segue to questions from the audience. Let's do this for a bit. What did we not cover that you'd like to hear something about or to amplify something perhaps that we did right here? So in your experience, can you share the benefits and drawbacks of being a founder versus a co-founder? Can you repeat questions? Yes. So the question was, can I share the benefits or contrast being a founder versus a co-founder? Well, I've been sole founder of both my companies. And in some ways it's harder, in some ways it's easier, obviously. I mean, when you're sole founder, it's very lonely. My first company, I was in a little one bedroom apartment in Santa Cruz, but fortunately was, like, you know, when I really got just overwhelmed, I'd walk out and stare at the ocean and recognize how much more there was in the world than whatever I was worried about. But the sole founder thing, the reason why I'm a sole founder, I think, is I always draw these analogies with between creating software companies and creating music. And the reason why I run off to go code is kind of like a musician that just feels like they've got one more album in them, right? And so I'm like a singer-songwriter. I write the music and I perform it, right? And there are better virtual musicians that can play the piano better than I might be able to play, right? Or as like pure engineers that really, you know, are up to speed on algorithms or something. But because I'm writing the stuff that I'm conceiving of and I'm doing that kind of in that kind of very isolated early stage, I think there's just something in the product that is harder to get. Now, the other analogy is Len and McCartney, right? So there are these duos that create incredible products. And I have a partner. My CTO is somebody that I go to every time I have an idea and he's my bounce, you know, my soundboard and the person that, you know, he's very good at telling me no and doing it in a way that makes me feel like boy is he ever right. And so I do have that, but I just like that at the very beginning just kind of be just like writing a novel alone to hermit in the woods kind of thing without going crazy, hopefully. So there's a question. I heard it back. Yeah, thank you. So one of the other speakers in the series, Talon, presented to us that he thought there should be a national entrepreneur's day, especially engineering entrepreneur's days because the tanker was that at value this way, at the end of the minest of society, but they also take big risks and frequently fail. So I wonder if you can talk about how the innovation and the risk associated with those issues in your firm does hails with a society that could be kind of hard on failure, how that works inside your community and new relic and how it works between new relic and up first. It's a good question. I feel like, yeah, as a society, we, you know, can't help but probably put too much emphasis on the folks that happen to be fortunate enough to have success. And it's the same like, but you to look at that, you know, think about how many people are playing mind-league ball that never had their one at bat in the majors or whatever, right? You can look in almost any domain and just sort of see that. And that's kind of natural. If there is any celebrating going on for entrepreneurship or anything like that, it should be for, I think, the joy of creating stuff. I'm a huge fan, by the way, of code.org and just getting, you know, a hearty partovies project to get, I think they're on the way to 100 million people learning how to code. And in particular, getting, so code.org is this remarkable project that anybody can learn how to code in an hour. And in particular, and I think this is really important, getting more girls excited about coding at a young age. Not enough women in software. And I really think that that ought to change. And the best way I know how to do it is to get girls at a young age to do it. And so I remember Christmas of last year, my daughter and her three friends were at my cabinet Tahoe. It was three days after Christmas. There's a room full of presents. And there's four girls fighting over three computers because they all want to learn how to code on code.org. And that was the coolest thing ever. So encourage young girls, well, young people, or anybody to go to code.org and just learn a bit more of that. And that's what I'd like to celebrate. Yeah. There's somebody in the middle here. Did you? Yeah. I was curious. Can you guys talk a little bit about long-term study and business global enterprise space? And then, like, sub-question the rate of it. Looking at your product, I was curious whether you were going to go by way of a marketplace kind of sales source where people can integrate into your product or have people learn to do all at the career of like, you know, a very good question. Can you restate that just in case of that? Yeah. I hope I'm going to answer the question the way you're looking for, but you're asking about our long-term business strategy in particular about how, you know, are we going to have people build applications on top of our big database technology or is there going to be a marketplace or something like that and how does mobile fit into it? Let me spend a little bit of time on this thing that I created in the Tahoe Cabin a year ago, nearly two years ago now I started it. Totally don't invent, you know, not invented here. I reinvented the wheel, but I created a big database from scratch. But I wanted to do something that was high performance tuned for real-time analytics. And existing database technologies were a little too generic. And so they couldn't do it a billion-event query in under a second on any attribute. So that's what we built. And the power of this is that since we're collecting all this data from software in real-time, we can answer questions like, how many people under 15 are looking at a item right now that signed up last week, all those kind of business questions that you want to know about what's going on in your software. And the cool thing is we've got this cloud database that you don't need to do anything. And shove the data in, you don't need to worry about indexing or configuring anything like that. The point is this is a very powerful technology upon which we're in the, like not even the first inning of, where we've got this $40 billion big data analytics opportunity and we've got a really differentiated technology. My vision is at the moment and I'm working on it, but my best, I think our best path forward is to make a platform out of that where our customers can build applications on it in the cloud. So if you want to build an application for your support organization to help support reps understand what the end customer's experience is for a specific user, you can build that app on top of the new relic data application platform. You can do it for salespeople, for marketing people inside your org. My ultimate vision is I want every knowledge worker to be a new relic data nerd using our analytics products. So going beyond just the software developers and the people who build software to everybody who has something to contribute as a knowledge worker using big data analytics that new relic provides. Right here. So most recently you raised a lot of money from private equity. Why did you do that instead of like the typical rule which is VCE and IPO? Right. So the question was we recently raised a large round and it was private act. Actually the investors in that round are large institutional funds that typically invest in public companies. So fidelity and T-Roll price and black rock these are folks that typically invest in public companies and what we found is what they've been seeing is for certain occasions rarely they'll go into some private companies that they see have potential to be big important companies and they'll kind of break their rule about being only public investors. And New Relic has aspirations to be an independent company for long term and so what we want to do is have an investor base that feel like they're just at the beginning of their journey with New Relic unlike and I believe my venture investors and they say they're long New Relic too but venture funds are structured so that they're in private companies. So we wanted to bring in people who think of New Relic as this very early stage company that they want to participate in for a very long period of time and so we went out to the top tier public market investors and we were lucky enough to put together a good round so that was a hundred million dollar round we closed last spring and our aspiration is to be a public company and that's just a step along the journey. Right here. What are you possible to get into the early days of your family first company? How do you get going? How do you get the capital or the resources? The question is how tell me about the early days of my first company. Also it's talked a good bit about in this book by our friend Professor Wasserman. Yeah. Give us the… Yeah, the early days of Wiley as I said I was an engineer I hadn't desired to start a company and I was a Java developer and I was stuck with this problem of my Java software worked in my local environment when every time I ran it in a remote environment it was broken and I didn't know why. So I'm driving down Highway 17 to my little apartment in Santa Cruz and I'm thinking thinking how do I solve this problem for myself and this idea of something called bike code instrumentation, a way to modify the Java program without the person who built the software needed to do anything. Another program could make that software self-diagnostic and I was so excited about that idea of being the nerd that I am that I almost drove off the road on 17 and that would have been nearly into, you know, there would be no ETL in 2014. So anyway, by the time I made Santa Cruz I said I want to start a company problem was I had I was not from a family of means I had no money but I was only 28 years old and so I mean there wasn't much to lose. So I called up my parents and they didn't have any capital invest but they had seven friends who each were willing to put $5,000 in. So within about a week I had 35,000 of committed capital. That was infinite funds as far as I could live forever on it. So I said of course I'll quit my day job. What's the downside? There's none. So I started widely, I worked on it. I remember Christmas day, my parents ripping me away from the computer because I just felt like I got the prototype working there. Come on, Christmas dinner, Lou. So it has all right if this progress bar makes it trust the end and it works and so that's how it got started and it turned into $100,000 of first funding from, you know, people like the headmaster of my high school and other sort of, you know, they all made out really well by the way. But yeah I didn't hire my first employee for a full year. Nobody would fund me because I mean first of all this was 98 so I wasn't doing shoelaces.com or anything that was like public internet and like anything public internet could fund it but something like I've got Java, bycode instrumentation technology and no capability to talk about that as a business. Nobody wanted to fund that. But that was good because the bubble burst in 2000 and I hadn't raised much money so we didn't have a burn rate or anything like that and we kind of just got into our stride and raised our first significant round in 2000 and then we were well positioned to actually build a business. Lou, I'm watching the clock because I know we're... I got a flight to catch you. Yeah, you're a flight to catch you. Yeah, but we got one or two more questions. About one more over here. Yeah. What about the culture and hiring? You talk about warmth and kindness and you talk about not wanting people who only care about how to build and how to make that culture and how to balance that with wanting to hire strong, a thing competitive. Yeah. The question is about the culture and building a warm culture. How do you go about building that? Of course you want to build a competitive company and you want to win in your marketplace and certainly those are important things in New Relic as well. I think it's the same life skills. It's just how do you choose your friends. How do you get to know people and do I want to spend time with them? We talk about one litmus test. Could you imagine hopping in a car with this person driving to LA? Would you enjoy that road trip or would you be like, get me out of the car? I was fortunate enough early on in both my companies to hire people I had deep respect with. I thought they were gifted but I thought they brought out the best in me. I wanted to spend time with them. You never want a marriage of convenience where you've got skills I need. I've got a company that can help make you wealthy. Let's work together. If that's how you're making it happen, then don't do it. Work with people that's going to bring out the best in you. They're going to be dark days. They're going to be challenging days. You want people that you're in it with together. You just keep investing them. The other thing I would say that I don't think people do enough of is they think of recruiting us. Get someone to say yes. Get them to join your company. Then focus your recruiting time on the next person. Keep recruiting your people after they come in. What I mean by that is check in on them three months after they've joined. Is the company like, are you loving your job or you loving your Mondays? Is this turning out the way you hoped? Is it better than you hoped? What is about it that you like? What can we do to make keep the company special for people? You want people to feel valued. Everybody wants to feel valued. No matter what you do if you're support rep, if you're in finance, if you're in marketing, you want to feel like what you do matters. If you feel like what you do matters, then it turns out you're pretty nice to other people. It's all intertwined. Please join me in thanking you. You have been listening to the Draper Fisher-Jurvis and entrepreneurial thought leader series, brought to you weekly by the Stanford Technology Ventures Program. You can find additional podcasts and videos of these lectures online at e-corner.stanford.edu.