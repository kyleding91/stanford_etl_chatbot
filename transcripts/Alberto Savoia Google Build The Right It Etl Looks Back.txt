 Who you are defines how you built. This is the entrepreneur thought leader series brought to you by Stanford E Corner. On this episode we have Abertos Savoya, Innovation Agitator Emeritus at Google. Abertos helped develop manage and launch products such as Sun Microsystems Workstations, Sun Labs Java, and Google AdWords. He also developed the Rapid Prototyping technique called Prido Typing. Here's Alberto. This is my battle try this day. Failure bites, bite back. I'm a serial entrepreneur and I kind of got my butt kicked a few times and the last time I decided I don't want this to ever happen again to me or anyone else. So my mission is to help entrepreneurs, most of you here, to teach you how to fight failure and win consistently. But first let me tell you, I'm going to structure it very simply. Seven strategies in 35 minutes. I don't have a lot of time. But fortunately there is a book that you can buy out there that you can spend six hours in my company. And I will give you the advice you will give to your 20 year old self. So a lot of 20 year old here. But regardless, this advice is timeless. So whether you're 20, 30, 40, 50, 60, this entrepreneurial advice is applicable. Now my entrepreneurial journey, as you can tell from my accent, I was not born here. I was born in Italy. And like pizza, I decided to come from Italy to America for bigger and better things. And of course, what do you do? So I landed in Silicon Valley. I decided I want to join a startup and I joined in 1985, a little startup called Sun Micro Systems, pre-IPO. And some we are too young. You don't even know about this company. But it used to be kind of like the Google of those days. And I had a very good run there. For about 30 years I was an engineering at first and then I ended up running a research group. And the stock went great. And so I thought, wow, this is so cool. You know, startups are great. This is awesome. I want to do my own startup. So I left Sun and I started my first company. We raised $3 million in VC funding. And 18 months later we received an offer for acquisition for $100 million. You think we accepted that offer? How many think you accepted? No, but are you full? Yeah, of course you accepted it. You accepted it. You know, this was 2001. It's like a billion today. Don't be an idiot. Take it. Right? Take it. So it worked out very well. And I thought, wow, you know, this is easy. I thought, well, call my friends in Italy. Hey, Mario, come to America. It's good. You know, this is. And so I spent the near at the acquiring company. And then I joined another little startup, pre pre-apial called Google as the first engineering director. And you know, among other things I led the ads team and we'll know how well Google did. So I thought, you know, this is really easy. And I'm kind of good at picking startups. So if I raise $3 million and exited with a $100 million offer, for a $30 million, I'm going to exit at one billion. You know, the math doesn't really work like that. But you know, in my mind, that sounded good. So my second startup, which I founded, where it's $25 million from the best species in the valley, we developed this tool that people told us, if you can build the software development tools, everybody will flock to your doors. Please build it and we will buy. So we built the tools, spent two years to build a very sophisticated product. We won every possible awards for technology. It wasn't amazing too. So I thought, wow, I'm really good at this. You know, I mean, maybe the Italian Steve Jobs, Stefano, Stefano Giovini. You know, I thought that sounds good. It has a ring to it. Except that five years later, bang, we had a fire sale. All those people that told us, if you build it, we will buy somehow disappeared. Even though we built exactly what they said we were going to build. So this time, our reaction was a little different. And I created this acronym that sounds for why the failure, right? So I asked myself, why did we fail? And I decided, okay, I want to study failure. So I went back to Google as engineering director, but also as innovation agitator to try to shake new ideas out of Google and you cannot innovate without failing. So I became from an engineer, I became an innovation agitator and I always wanted a PhD and I didn't get it, but I got an FD. I'm a doctor of philosophy. The only one in the world. I don't know if anybody in the planet has studied failure more than I did. And I'm here to share with you some of these ideas. So I only have time to give you seven strategies. Start with ten and then attempt it and I couldn't do it. So I decided, Alberto, you're going to talk fast. And you're only going to give them seven strategies. First one, obey the law of market failure. The law comes in two parts. The first one is pretty depressing. Most new ideas will fail in the market. The second one gets even more depressing, even if competently executed. Now if you've been around the block, you know that's true. Most new ideas, most new companies, most new products from existing companies will fail in the market, right? The data is, you cannot fight against it. But what about the second part? What does it mean that they fail even if competently executed? It means that even if you're Google and you launch products that are squarely, and what Google is good at, the law of market failure applies to you. If you search for Google failure, one of the pages you'll come up with is called the Google Graveyard, apparently put together by a Microsoft product manager who was kind of upset at Google at the time. But it illustrates that even large companies fail a lot. Ask my students, take a piece of paper, write all the Google products you know of, and then I show them the list of the failures that I know of, and the ratio is usually 5 or 10 to 1. By the way, the Google didn't like what Microsoft did to us, so we created the Microsoft more. Which has even more failed products, right? So this is pretty much part for the course. The law of failure applies to everybody. But then I started to say, OK, law failure is true. I'm going to obey, but why do most new ideas fail in the market? So I did my research to look at thousands of failures, and basically put them into three major buckets with a convenient acronym flop, failure due to launch operation or premise. Failure due to launch means that the market doesn't know about your idea or cannot reach your idea. So essentially kind of a failure of marketing. People don't know about it. Failure due to operation means the product doesn't work, right? The app crashes or maybe it's a restaurant and the food sucks. Failure due to premise means that even if you market it well, even if it works well, people simply do not care about your new product idea. Which one do you think is the most common source of failure? Well, I'll hold the suspense. It's the last one. Most new ideas fail because the market simply does not care. And as we'll see, even if the tell you, yes, yes, build it. We will buy it. That's not the case. Most new ideas fail because they are not what I call the right it, which happens to be the title of my new book. What is the right it? Well, I'll explain it in a second. But first, the second important strategy, make sure you're building the right it before you build it right. Because all of my research and anybody that's been around will confirm it. Companies do not fail because they really cannot build what they set out to build. I mean, it happens, but it's rare. Most of the time you fail because you build the wrong product. So the right it, I define it as follows. It's an idea that if competently executed, we'll succeed in the market. And it has an evil twin, the wrong it. An idea that even if competently executed, we'll fail in the market. That means that if you're ideas that doesn't matter how much marketing fireworks or engineering brilliance you put into it, it will fail in the market. Let me give you some examples of the right it in the wrong it. Big Mac for McDonald, the right it. Other arched relax or the Mac Hula burger with a slice of pineapple in the middle. Not the right it, right? Coca-Cola, the right it. New Coke after millions of dollars in research and launch an advertising fail. Not the right it. Everybody here has probably seen the movie Star Wars. How many saw the movie Howard the Duck? Not a lot. There's just a few. And you know what those two movies have in common? Steven Spielberg. Howard the Duck believe it or not is a movie the Steven Spielberg decided to do after Star Wars and it had 10 times the budget and on top of it it had ducks and everybody loves duck, right? Don't know duck, duck with that, duck or orange ducks are cool. And yet it failed miserably. Gmail how many people here have Gmail account? Good. How many people here had a Google wave account? Just fewer hands. Yes sir. How many Google waves did you write? None. Right. So you're actually you're better than people said too. Right. So Google wave was supposed to be the follow up to email a new paradigm. Lots of marketing developed by the same people that did Google maps, great team and yet it failed. And yet you see it as the same Google call or the same Google great engineer, the free massager, the free launches, all the Google benefits and yet it failed. Ford Mass Tank success, Ford etsyl, not so much. Right. So all of this example what they're having come on is that these are companies that are successful with all the products and the launching products that are exactly what they do. Like cars, electronic things, movies and yet the fail because you cannot fight the law of failure. If you take competitive execution plus an idea that is the wrong it, your guaranteed failure, 100% of the time. The law of failure is blind. So you don't want to bring out an idea that is the wrong it and you ask yourself well, how do I know if I'm an idea is the right it? Well do not ask. And what I mean by that is that if all you have is an idea and you tell other people your idea, the most you can get back are questions and this is a very dangerous thing to do. Why? Because ideas live in a place called Totland. So in Totland you have an idea, hey here's my brilliant idea, you tell it to other people and what do you get back? Just a bunch of opinions. Whoops. I over click a bunch of opinions and opinions are subjective, they are biased. You know you filter them through your own preferences and beliefs. I for example, I thought that Uber was a terrible idea. Stranger speaking up, strangers from strange places and driving them to spend the night at a stranger's house on the couch. That's another startup idea Airbnb which I thought was terrible. So you need to filter these ideas. Two horrible things happen in Totland. The first one is if you have an idea and people think it's the greatest thing ever. One of my favorite example is the Segway Transporter. You know those little scooters that you used to see a few years ago. And this was about to be launched. Everybody talked about it. Everybody thought best idea ever. It was in the cover of magazines that some of the best we see is in the valley. Architect said cities will be redesigned so everybody is going around in a scooter. So and then they launched it and who do you see riding Segways? More cups and lazy tourists. That's about it. So and clearly it's not because if I valued you to marketing people knew about it. In fact it was talked all over. It's not a failure due to operation because you work well. I don't know why things fail. I just know that most of them fail. So and this is called an example of a false positive. People tell you best idea ever. You launch it and it fails. How common are false positive? The most common thing that people launch. So everything in the Google graveyard, in the macros of Morgan, the Amazon ambulance, et cetera, et cetera. All of these are ideas that at some point people thought best idea ever. And then the launch it and it failed. Why? Because you know what doesn't fail the law of market failure. Right? Most of your ideas will fail even in market if competently executed. So first but think that happens. People give you the thumbs up. You spend a lot of money. You launch your idea. It fails miserably. The opposite can happen. You have an idea and people think it's the worst idea ever. Honestly I felt that way about Twitter the first time I heard about it. What? Because people can follow. Everyone can follow anyone. Sounds terrible. And yet for better words, we know that Twitter has changed the way that we, you know, converse as a species. So this is an example of a false negative. People tell you it's a terrible idea and then it succeeds. So here's your dilemma. Right? If all you have is an idea, you cannot depend on people's opinion. You cannot just ask them, would you want it? Would you buy? What would you do with it? So what can you depend on? Any ideas? OK, well I'll tell you. I'll jump ahead because we don't have a lot of time. You depend on data. And as you can see, you trust not opinion, trust data and not just any data, your own data. Because when I tell people, you need data, bits of opinion and you need to collect your data, people think, OK, yeah, well, this looks like data. I mean, it's in the spreadsheet. So it must be data. No. Right? There's two types of data. OPD and Yoda. OPD stands for other people's data. Can you guess what Yoda stands for? You guys are smart. OK, you're great. Yes, you're on data. And these two are as different in my book, literally, as apples and oranges. In fact, rotten apples and fresh oranges. OPD is the worst possible thing you can collect. Right? It's market data collected by other people at other time for other products with other methods with other filters, et cetera, et cetera. It may or may not apply to you. And most of the time, it does not apply to you. It's dangerous because just because other ideas similar to yours are failed, doesn't mean that yours will fail. Imagine if Elon Musk thinking of Tesla thought, well, let me see how other car companies did with electric cars. Ah, you know, zero of them succeeded. And said, well, OK, forget this Tesla. I think I'm going to go and do something else. Right? So just because other companies failed with the idea, doesn't mean that you will fail. The opposite is true. Just because other have succeeded in the past with the idea, doesn't mean that yours will succeed. Apple succeeded with the iPhone. Google succeeded with Android and Samsung. The Amazon succeeded with the fire phone. No, right? So OPD is very dangerous. So I urge all my entrepreneurs to collect your own market data. Understand, fresh, local, recently collected. And most importantly, your data needs to have skin in the game. What do I mean by skin in the game? If I asked you, what do you think of my idea? And you tell me, oh, Albert, it's good. I said, should I leave my job to pursue it? I said, sure, go for it. Right? You have nothing at risk. Skin in the game means that as an entrepreneur, you're putting your risk in, right? You're risking your time, your reputation, your money to go and start an adventure. You're putting your own skin in the game. You want to get skin in the game back from the market, right? And skin in the game can be the market's time, money, commitment, information, reputation, something of value and at risk. Let me give you a very simple example. Suzy came up with a great idea. It's a smart hammer. So you hit the nail instead of hitting your fingers. She goes and asks people, hey, I'm thinking of this hammer. Would you buy it? And some people said, yes, good idea. Other people say bad idea. Does this count as data? No. Right? This is opinions. Now, in another scenario, she says, well, I'm planning to build this hammer. And if you give me $50 deposit, I will make sure that you get one of the first one. So some people say it's a lame idea. They're dead to me, you know, just like in short time. You're dead to me. But the other people say instead of saying it's a good idea, if they actually open the wallet and give you some money, you have the first indication that the market really is interested in your idea, right? You fix an asymmetry. Before you put in your skin in the game, by quitting your job or getting busy funding, get some from the market. So that's what we call Yorak. You can quote me on this. It's much easier to get people to open their mouth than to open their wallet. The hardest thing an entrepreneur can do is to get companies and people to open their wallet. I've been told so many times, Alberto, it's a fantastic idea. Go build it. And then when I went to sell it to them, they said, well, yeah, not to not, we're having a bad portrait. Forget about it, right? So it's very important. You need to change the way you approach market research from this traditional model of doing market surveys or asking people this question. If we build it, will you buy it? Which is how most market research is done, by the way, right? You ask these questionnaires. You flip it around. Completely. 180 degrees. Think about this. If you buy it, we will build it. Now this seems very counterintuitive, but I will give you an example of how exactly how to do it. Because now you're asking, well, don't have to have a product built before I can see if people want to buy. And the answer is no. You don't build it. You pre-totap it. This is not a tap. This is a word I invented, pre-totap it, because it had to be invented. So a strategy number five is pre-totap it. What is the pre-totap? Well, it's the simplest artifact or technique you can use to collect Yoda, very quickly and very inexpensively. So there is a big range between having an at the end of the final product. This could be years, months, millions of dollars. And the way I see it, pre-totap come very, very early. A pre-totap is something that you can build in minutes, hours, maybe a couple of days. And it should cost anywhere from zero to maybe a couple of hundred bucks if you really feel like splurging, right? A prototype is something that actually works, can do something, and can take a couple of days, a couple of weeks, a couple of months. I've worked on prototypes for software development tools that took a year and a half just to prove that the thing would actually work. And of course, the products take a long time. So, pre-totapes are things that you can build very, very quickly, literally in a couple of hours. Let me give you an example of pre-totapping, something that actually got my thinking about this process. About 30, 40 years ago, IBM wanted to, everybody to have personal computers. But you know, 40 years ago, most people didn't know how to type, right? Most of us that were around there, you remember this is how people type. So, they figured, no way that people can use computers that have to learn how to type. Who types? Programmers, writers, and secretaries, right? Nobody else knows how to type. Nobody wants to take typing lessons. But they wanted to know, well, if we solve this problem of speech to text, right? So, you can just speak to a computer, will people actually buy our product? So they did something very clever and experiment. They brought people in the room, they gave in a microphone, a monitor, no keyboard, and told them, look, speaking to this computer, we have a prototype of speech to text, and people spoke into it, and magically the computer did whatever people told them to do. Of course, this was not possible. Those days, even the fastest computer couldn't handle this. So what was happening? Well, in a room next door, one of those amazing people that can tap as fast as you can talk, was actually transcribing everything that was being heard through the computer. And I tell you, as an engineer, this example kind of really messed up with my mind. Because if you go in, how many engineers here? Yeah, I mean, the used soldering iron, etc. So if you come to an engineer set, Alberto, we need to build a prototype. I said, great, fire up the compiler or the soldering iron, right? I thought, this is not a prototype. They're just pretending that they have something to work. So in fact, I created this first word, pretend-o-type. Because I knew this is not a prototype. And it's not like IBM was planning to breathe a race of small typists at the fit inside boxes. And you feed them chasing crackers through the floppy drive, right? So it's not a prototype. This is something completely different from the end product. And then I shrunk the word to pretotype because it's easier to pronounce. But remember, pretotype means before a prototype, but also use your imagination to pretend. So what IBM learned is that before the pretotype test, a lot of people thought, of course, we want a speech to text computer. Now, if you try to actually use a speech to text computer all day without a keyboard, your throat gets sore, the room gets very loud and you cannot dictate or work on confidential things like fire Bob. Oh, sorry, Bob, didn't know you were around here, right? So in thoughtland, speech to text was a sure winner when people actually tried it real as it was not. So this is an example of what I call a mechanical church pretotype. And this is everybody talking about robotics and AI. Before you spend four years and $40 million to create some automated pizza maker or something else, you can use human beings to simulate that behavior. It doesn't scale, but you can learn if people would actually use it. It prototype with a noise, something you typically build to figure out, can we build it? How long will the battery last? How will it work, et cetera, et cetera? And basically ask the question, how do we build it right? And here's the secret. Most of the time you can build it. Now, if you tell me, I have an idea for a time machine, I call the guys with the white coats and tell you, you probably cannot build it. But most of the ideas people have are buildable. A pretotype asks different questions. It asks you, should we build it? No, we'll use it. What will I use it for? In other words, pretotype asks the idea. Is this idea the right it? If we build it, we'll succeed in the market. Now, there are several pretotapping techniques. This is a cheat sheet from a class that I had the honor of teaching with Tina. Let me give you a few more examples. The facade pretotype, Cars Direct wanted to know at the beginning of the internet, would people buy used cars online? So what did they do? Did they buy cars? Did they have a big complicated website? Now, they're a very simple website with just a few cars. No cars in inventory. They advertise it. Miraculously, the first two days, they sold four cars. So immediately, they shut down the website. They bought four cars at retail. They sold them at retail. So they lost a few hundred dollars on each car. But what did they gain? Yoda, right? Yoda. Nothing is more valuable than a check. A check tells you that people really want your product. I'd rather have, I want page business plan, an outline with four checks, staple to it, than a 30 page highly detailed business plan with all kinds of charts. Another example of pretotype is this from IKEA. This team in San Francisco came up with a really simple product called the Wall Hub. It's a piece of plastic where you put your keys and your mail. They wanted to know, would people buy them? You know, should we have 10,000 built? So that, then, idea, they thought, well, where would people buy this? IKEA. So they did something very clever. They went to an eBay, they bought a used IKEA employee shirt, so they could pretend, remember, pretend the type that they were an IKEA employee. Then they created a fake label for their product. Of course, I had to change it to an IKEA name like, Valhub. And they put this label. And then instead of shoplifting, they entered the NAKIA store and placed their product on some free shelf space. And then they watched to see if anybody would actually stop and buy it. And lo and behold, you can watch the video, I put the link there. People actually took it, put it in their cart, and everything worked fine until they got to the cashier, because I think got a little confusing. Would you agree that if I have two Valhubes in my cart, is that opinion? No. Is that other people data? No, that's Yorah. That's the most valuable thing you can have. Another example of pre-totaping called the impersonator. You can take an existing product, put a wrapper around it, and very quickly come up with a new idea, and then you can use that to collect data. My favorite example for this is what Elon Musk did with the original Tesla Roadster. It took a load of Celes, ripped off the gasoline engine, put an electric engine, and then when built this one-off model, and then gave people rides in this cart, some is in 0 to 60 in three seconds. So let's assume I gave you four rides. Did you like it? Quickly, quickly. Did you like it? Yes. Pretty fast and sexy. Okay, it's going to cost $120,000, and you have to wait two years, and you have to put a big charge in your garage. Would you buy it? No. Yes. No. You listen to me. The nose are dead to me. No. But the yes, have not given me any skin in the game. So what Elon Musk did, which was brilliant, to say, remember, if you buy it, I will build it. So I'm going to ask you, well, you know, there's no other I don't trust you guys, but you know, if you give me a check for $5,000, I'll put you in the list, your number 31, your number 32. Now, I think, is it easier to say yes, or to ride a check for $5,000 to a guy that never built a car company before? Right? And yet, if you're 100 people did that, and to this day you cannot buy a Tesla without putting it in the deposit. So if you think that my idea, if you buy it, we will build it, it's crazy. Tesla is a perfect example of that in action. You want to do this because you want to fail fast and cheap. People talk a lot about failing fast, but as you can tell from how fast I speak, that's not fast enough for me, right? I tell them, I want you to fail, Ferrari fast, and Fiat cheap. Sorry, Fiat. Right? So because most new ideas will fail in the market, which means that you have to test a lot of ideas. And if you take six months to test an idea, good luck, right? Unless your luck is going to take forever. So pre-totapping allows you to test very quickly. More importantly, you're not going to experience painful failure. Because you spend $20 to do an experiment, right? It doesn't hurt. Definitely doesn't hurt after, as much as spending three years and $25 million to build the product that people do not want. So strategy number six, say it with numbers. Entrypreneurs, and probably most of you, when you have an idea, you come to me and you press it very vaguely. So here's an idea from some of your fellow students, maybe five, six years ago. Second, this sushi. Here's the idea, right? Taked sushi is kind of expensive. So they thought, you know what? If we buy sushi, that's about to expire, right? It's only good for an extra eight hours before it kills you. We can buy for $25 cents on the dollars and sell it at $50 cents on the dollars. And since students are young and have a strong stomach, we can handle it. So I said, okay, I'm not going to give you my opinion on your idea, but I'm asking them. So this is how they are articulated, right? People, lots of them will buy not super fresh sushi if it's cheap enough. That's pretty much how they express it. I said, look, who are these people? How many is lost and what is cheap enough? So I was in a room actually outside there, just outside this auditorium. And somebody had left a formula, calculus class or electrical engineering class on the wall and I thought, okay, tell you what, write it like this. X percent of Y will see. I call this the X was the hypothesis, right? So it forces you to write your idea in numbers. So in this case, they translated into number, 20% of pack of sushi buyers will buy second sushi if it's half the price of fresh or sushi. How do you know if those numbers are right? You don't. It's a hypothesis, right? But at least it articulates and puts into number what your ideas are. And what is the job of an hypothesis? Hypothesis exists to be tested and pre-totaping our tool to test hypothesis. Last point, test, think global test local. Maybe the second sushi team is planning to take over the market, right? Every super market is going to have second day sushi. But you need to start to test your ideas very quickly. You want to minimize this matrix that I explained in my book called time to data, dollars to data, distance to data. If people say, this is great idea and I need six months, two million dollars and I need to fly to Hawaii to do my research, I said, well, no, you're going to do it here, you're going to do it for $20 and I want the results by tomorrow, right? And a technique for doing that is called hyposuming. So you take these big hypothesis, 20% of packet sushi buyers and you zoom in. You know those documentaries where you see or those videos where you see the earth from space and then it zooms into a town and then to a particular place and then to a building. I want you to do that in your mind, right? So you take the big x-was the hypothesis and hyposume to something you can test here and now. Here and now I mean it literally here and now, right? So where are we now? North America, right? We're in North America, Silicon Valley, we're in Silicon Valley, Stanford University, we're in Stanford University, building Y2, E2 and then I ask you, is there a place in this building or nearby that sells sushi? Yes, there is, I've said, right? Coupa Café, so I said, great. So you're going to hyposume, you have your market, it's more simple of your market is there. So you can go from the big x-was the hypothesis to the small x-was the hypothesis. Twenty percent of students buying sushi at Coupa Café to the dinner will buy second-day sushi, right? And do you believe that this is actually testable? Can I do this test? Absolutely, in fact we did it, we even did a little video, right? With some of my friends there, where are you guys? Yes, we did it here, we filmed it. We went, we created little labels that said second-day sushi half off and we slapped them on fresh sushi, right? It's an impersonator printout type and then we tried to sell them. In fact if you're there, that's outside the S-T-V-P offices. Now how many people do you think bought our second-day sushi? Zero, right? Right? Because the typical thing is, well, you know, I don't want to get sick. So it doesn't mean that second-day sushi has no chance, it just means that you need to do some more tests but frankly, your Yoda doesn't look very good, right? So these are just seven strategies, there is a lot more but I cannot possibly talk any faster in our time is limited. So there is more, yes, a lot more, there is a book, I see some of you already bought it, thank you so much if you have anybody go to Amazon and buy it? No, I'm not done, not done, yes. Yes, it's a great book, thank you. But there is more. But because the question you have to ask is, hey Alberto, do you practice what you teach? Say you better do. Not because I don't want to be a hypocrite because what I teach works, all the techniques are, I'm an engineer, I'm not a marketing, I'm not in sale, I'm an engineer, if it doesn't work I wouldn't talk about it, right? So pre-totapping techniques cannot not work anymore than the quadratic formula I cannot work, right? You plug in the numbers unless you scrub, it does work. So I thought most books fail in the market, they don't even find the publisher so before doing that I spent a few days, less than a week writing a pre-totap book called pre-totap it, I printed it in PDF, I made it available, I stapled some copies myself, soon tens of thousands of people started to download it translated into a dozen languages so I thought I was able to find a publisher that said, okay, this looks promising. So I actually went from the pre-totap to a prototype which in the case of a book is the first draft and then it finally became the product. So very one of the many examples of me practicing what I preach. So that's kind of a presentation I wanted to leave some time for question, 15 minutes and guess what, we have exactly 15 minutes. Do I have my timing right? Yes I do. So now let's go and ask some questions, please raise your hand and I will pick you at same ar random. All right. Nobody raises their hand. Okay, that's easy though. Yeah, let's just throw up. What's the biggest problem people have with this? When is the biggest problem? Yeah, the biggest problem people have entrepreneurs have is the fall in love, not with the problem but with their idea, with the solution to the problem. Right? And that's it is happening all the time. And you know what pre-totaping, because if you believe the love market failure chances are 80% that your idea, your initial idea is not going to work and you know what pre-totap is going to expose that. You should have seen the face of the second sushi guy with nobody bothered. I thought at least somebody would try it. Right? So I would say that is the number one problem. The techniques work but it takes a little bit of courage to take your baby, you are the end put in the market. Yes. So this makes a lot of sense when you have a physical product, a traditional thing happens. Oh, app? Well, in the book I use app, the question is it works well for a physical product but what if it's an app? Well, first of all, you know what happens to most apps? The Diabers load that, you know, in the app store. So most apps are the wrong, people don't care. And yet, you know, it's the number one thing that people want to do. So with an app, it's exactly the same idea. And I go through a full example in my book of an app called Febberd. You know, there are board, bird watchers. And in this app, you can use it. If you spot a bird, you can say, I know where this bird is and if you pay me $5, I will disclose the location, right? So it doesn't matter what the idea is. So I go through an example of exactly how you would pre-totate that. Let me tell you what, it doesn't involve writing a single line of code. Are you a programmer, computer scientist? Yes. Okay, resist the temptation. If you are a double image or resist the temptation to fire your soldering iron, right? Because do you have any doubt that this app you have in mind that you can build it? No, right. So there is no risk. There is no uncertainty, right? So the uncertainty is you're going to spend six months building an app that nobody wants. So one technique you could do that without writing any code, I know it's hard to resist. You can fire up PowerPoint and you can have a simulation and create a little bit of what your app is supposed to do. And then maybe you post it on YouTube or you show it to colleagues and you say, look, if you're interested in this app, give me some skin in the game, which could be the smallest unit of skin in the game is a valid email address. So Stanford, EDU email address, not the one that you throw away like, you know, hotbob, you know, at hotmail.com, right? So try to actually collect data. But yes, definitely app can introduce pre-thottapping and in fact, it's one of the most common uses. More questions? Yes? How much time do I have between the, so I have to be the one by this. So I just word my lines. What are the time to get to them? I took it a while. I'm sorry, I don't understand the question. So I took it a while, 50 dollars. Oh, the deposit, right? It's the same. So the question is, how much time do I actually have to deliver to them? Well, there are many techniques. By the way, pre-thottapping, everything at each is absolutely ethical, right? You're not out there to trick people. You know why? In fact, not pre-thottapping is not ethical. You know why? Because what is one of our most valuable resources in the world? Well, time or actually entrepreneurs, you know, especially kind of these young entrepreneurs, most of whom, if they don't follow this advisor, you're going to spend time six months building an app nobody wants. So the biggest, the worst thing you could do is to not test the market, right? So one of the things you could do, say you pretend that you have this, this, let's say, Elon Musk decided not to build a car. He gives them money back and maybe gives them extra, you know, an extra bonus. You know, he pays the interest in that. That is, by the way, a problem that happens a lot with other tools like Kickstarter, right? Kickstarter is very useful at the right stage. Before you kickstart, pre-thottap it because once you kickstart, you have the following problem. Once, everyone in the world knows about your idea, right? It takes quite a bit of work to have an ask Kickstarter page. And three, if 10,000 people or 100,000 people send up and they want your pebble watch and you don't deliver it, then you're going to look like it fool and you're going to have a lot of people upset. So in pre-thottapping, everything is really, really scaled down. Thank you. Questions from here? Yes. Oh, okay. Hi. Speak loud because you're way back there. I can see how you define pre-thottapation, D2C products and pollution, but how about D2C or worse than that D2C? Yeah. So the question is, clearly it works well in B2C. How about B2B, which means business to business? It works just the same. It's just as necessary because think about it. Most B2B ideas at some point, as you hint, they have other C consumer or users. So even if it's a world's most boring B2B application, some add-on-all, accounting database, at some point you will actually have the users. So you get into the room with your potential customers and you work out a pre-thottapping to see if what the build, you build for them will actually be sold. By the way, the second start-up that did not work for me, the $25 million was a B2B. And our B2B research is pretty much the same. Yes, please build it. We will buy it and then we'll give it to all of our developers. So maybe some of those developers didn't want it. So B2C and B2B, same idea. Most ideas fail whether that B2B or B2C. Thank you. Yes. So I'm PhD student and I had many failed ideas and for each idea I worked like three months on that paper and I just did a workout. So I wonder if pre-thottaping works for things like research? Well, so give me an example. What would be the end result of a successful research? So let's say I want to build a chip that's like 30% faster. Yeah, for a specific operation. And I can only see the effect after I build a chip. But if I cannot deliver a 30% then it's a failed product. So that's different because you are your own market. So to me this becomes more of a, can I build it question? In which case you actually have to do prototyping? Now, not all of these have to be prototyping. Let's assume that I come up with a little thing that I put inside a gasoline car and it triples the mileage and it costs $1 a gallon. You think do I really need to pre-thottap that? No, if I find a cure for a disease, do I really need to pre-thottap? No. So some ideas don't need to be pre-thottap. What about pizza? Do I need to pre-thottap pizza? I wonder if I would put cheese and pepperoni on it. It's from flat bread and I bake it people we want. Not all ideas have to be pre-thottap. But if it's new and different enough, it has to. How are we doing with time? Yes, you have a few more minutes. Yes. I suppose you're up to your YouTube. And what's down people else? Do you have your idea? Oh, great. So, if I can repeat, what if people steal your ideas when you pre-thottap it? That's precisely what pre-thottap is so beautiful because you contain the market. Those of you who still remember your statistics, if you have a sample of 100 people from your actual target market. So it's a very careful sample. That's all you need to test. As I was talking with the Kickstarter where you let the whole world know about it. So you can really contain the number of people that are exposed to your idea. And let me also give you this other explanation. What is the risk that your idea will fail in the market? 82%, 90%. What is the risk that another entrepreneur hears your idea and decides to steal your ideas? It's negligible. In fact, it's very hard to even get other entrepreneurs to listen to your idea or to bring them on a partner. Most entrepreneurs want to build... You want to build your idea? You want to build your app or his app? You want to build your app, right? You know when people steal ideas? After the notes, they write it, right? So after it's the right date, of course, then you have to build it right. You have to compete like crazy. At the beginning, nobody cares about your idea. Maybe you're really unlucky and somebody just think you're building exactly the same app. But play the statistics. 80% chance of failure versus 0.035%. Chance somebody steals your ideas. I would try to avoid failure. Don't worry about people stealing the ideas, honestly. OK, how about this side? This side has been pretty quiet, except for Tina. Yes. So, I have a question. I know the teaching review, one of the most important things about this is that you're very complicated products or services. There are some very specific things that can be tested. That might be just a hypothesis of one part of it. But as a coach doing the whole thing, can you talk about that? Yeah, so you don't need to test the, you have a specific example in mind? Well, I'm just like Google Glass. OK, yes. Yeah, so Google, perfect example. Google Glass, by the way, in my book, it's not a failure because it has been pre-totized. At no point did Google go out and order 1 million Google Glass, right? If you remember, you actually have to sign up and pay $1,500 to participate in the Google Glass Explorer program. So don't think that Google thought from the beginning, this is going to be huge. They would love like to. But the new, the new, it wasn't guaranteed because they never built a million of them. So in the case of Google Glass, great example, the way the pre-totapet first created the video, we showed you in YouTube, like just like for you. It shows you what the world would look like through Google Glass. Because at the time, the technology, you still needed a backpack. And then you were able to buy only in very small amounts. And if you had to jump through a bunch of hoops and pay $1,500, and then they gave it a handful to these people. And this started to collect Yoda, your own data. And one of the things they learned, even if everything worked great in the technology, one of the things they could not predict is that if people knew that you're being recorded by Google Glass, they didn't like your toll. So they came up with a rather derogatory term. Can I use it in this forum? Yeah. So they were being called Glassholes. So the people that bought the Google Glass and they were going around and trying to video stuff, they said, just take them off. They were banned in a lot of places. The interesting thing, you could have simulated that. And in fact, there were some people pretended to have Google Glass to see what the reaction that would be without anything actually functioning. Yeah, so a lot of unexpected results come out. Any more questions? Yes. Some product only used for after a rich time scale, for example, it's also actually AI products. Sometimes rely on good amount of data. Good, very excellent question. We said, some product, how are we doing time? For more minutes, some products need scale to be successful. Some AI products, try you need a lot of learning before they can be commutable. Beautiful. I have an example actually in the book where I tell you how you could simulate and test an AI product without scale. In fact, I knew that Amazon Alexa was going to be successful about a couple of years before it did, because I built my own pretotype. A pretotype was a can of beans, which are wrapped in some black plastic. I didn't know what it was supposed to look like. And then it's called a Pinocchio pretotype. So it doesn't do anything, just like Pinocchio is a puppet. But then I put it in strategic places around the house, trying to think, you know, if this company has actually built the speakers with the work. So my first iteration of my version of Alexa, I didn't know the name, was I would ask, I called it how. How? What time is it? How? Play me some examples. So without actually building, first I realized, I would actually use it. I would love this. So I predicted I would need three of them, bedroom, kitchen, and my study. And that's exactly what I bought. The next iteration, which actually did an example with one of my friends there, I took these can of beans and we hid a smartphone behind it. And then we had another people in another room listening to the smartphone and actually googling the answer and playing it back. So there are many of the tricks that you could do before you go and spend the millions of dollars to develop the AI. And you can do the test in a very limited-based business using these techniques. How are we doing? One more question. One more question. OK, there. Hi. Hi. So if you're doing a pretender type, you go with some potential customers and say, hey, this is how to build this. I will be able to buy it. They start assuming that you have the technology done to read that, right? And when they ask for stuff and you can't deliver on that, because you're just in a tank, I would not get you into trouble. Well, right. So remember the thing. This assume that you're confident that you could build the product. So when you print a time, this is not a matter of deceiving the market. This is a matter of resolving the asymmetry between you giving a lot of your skin in the game to the market and the market giving nothing to you. So if you came and told me Alberto, I'm building a time machine. And would you like to invest? I would say, no. But if he's going to build an app, I'm pretty confident that we can build the app. So I'm sorry, I cannot go into all the techniques, but in the book, I actually talk about the ethics and how you make sure not only that pre-totapping is 100% ethical, it's much more ethical than not pre-totapping, which I think is at this grace. Because 80% of failure means a lot of stuff goes into landfill. A lot of people spend time building products that nobody wants, and this will save you. So with that, I think we're just right, good on time. And thank you so much. APPLAUSE The entrepreneurial thought leader series is a Stanford e-corner, original production, supported by the venture capital firm DFJ. The stories and lessons on Stanford e-corner are designed to help you find the courage and clarity to see and seize opportunities. Stanford e-corner is led by the Stanford Technology Ventures program and Stanford's Department of Management Science and Engineering. To learn more, please visit us at ecorner.stanford.edu.